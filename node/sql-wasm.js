





<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://github.githubassets.com">
  <link rel="dns-prefetch" href="https://avatars0.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars1.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars2.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars3.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">



  <link crossorigin="anonymous" media="all" integrity="sha512-dxFVfmRlzgntw9xnKsYVxQUyV8JZifjI76hlssNAlbCn/gOmgfo4skfRATXTzQ8qG+NNgIh6fvkeQttpFQRpQQ==" rel="stylesheet" href="https://github.githubassets.com/assets/frameworks-7711557e6465ce09edc3dc672ac615c5.css" />
  <link crossorigin="anonymous" media="all" integrity="sha512-WgD3j4E/7wdCCCuK3XVbFwz03exYDvxGfqJTypNAO5+9P4RdLuDLVKRXGNwGFgX3guSYJjck9ia1WMRGJJ0ubA==" rel="stylesheet" href="https://github.githubassets.com/assets/site-5a00f78f813fef0742082b8add755b17.css" />
    <link crossorigin="anonymous" media="all" integrity="sha512-n8ma4pfv4AZutC1jZMb9DCqVgJq/T7LyrcIrc1QTof+1rn00RPeT5iGHD5KY0zUaxYhKFMXvv+DX7pSNkCIblg==" rel="stylesheet" href="https://github.githubassets.com/assets/github-9fc99ae297efe0066eb42d6364c6fd0c.css" />
    
    
    
    


  <meta name="viewport" content="width=device-width">
  
  <title>sql.js/sql-wasm.js at master · kripken/sql.js · GitHub</title>
    <meta name="description" content="SQLite compiled to JavaScript through Emscripten. Contribute to kripken/sql.js development by creating an account on GitHub.">
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">

    <meta name="twitter:image:src" content="https://avatars1.githubusercontent.com/u/173661?s=400&amp;v=4" /><meta name="twitter:site" content="@github" /><meta name="twitter:card" content="summary" /><meta name="twitter:title" content="kripken/sql.js" /><meta name="twitter:description" content="SQLite compiled to JavaScript through Emscripten. Contribute to kripken/sql.js development by creating an account on GitHub." />
    <meta property="og:image" content="https://avatars1.githubusercontent.com/u/173661?s=400&amp;v=4" /><meta property="og:site_name" content="GitHub" /><meta property="og:type" content="object" /><meta property="og:title" content="kripken/sql.js" /><meta property="og:url" content="https://github.com/kripken/sql.js" /><meta property="og:description" content="SQLite compiled to JavaScript through Emscripten. Contribute to kripken/sql.js development by creating an account on GitHub." />

  <link rel="assets" href="https://github.githubassets.com/">
  
  

    <meta name="request-id" content="267B:70B9:32B2FF:4A4776:5E283458" data-pjax-transient>



  

  <meta name="selected-link" value="repo_source" data-pjax-transient>

      <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
    <meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-site-verification" content="GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc">

    <meta name="octolytics-host" content="collector.githubapp.com" /><meta name="octolytics-app-id" content="github" /><meta name="octolytics-event-url" content="https://collector.githubapp.com/github-external/browser_event" /><meta name="octolytics-dimension-request_id" content="267B:70B9:32B2FF:4A4776:5E283458" /><meta name="octolytics-dimension-region_edge" content="ap-southeast-1" /><meta name="octolytics-dimension-region_render" content="iad" /><meta name="octolytics-dimension-ga_id" content="" class="js-octo-ga-id" /><meta name="octolytics-dimension-visitor_id" content="8920673274646975563" />

<meta name="analytics-location" content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" />



    <meta name="google-analytics" content="UA-3769691-2">


<meta class="js-ga-set" name="dimension1" content="Logged Out">



  

      <meta name="hostname" content="github.com">
    <meta name="user-login" content="">

      <meta name="expected-hostname" content="github.com">


    <meta name="enabled-features" content="MARKETPLACE_FEATURED_BLOG_POSTS,MARKETPLACE_INVOICED_BILLING,MARKETPLACE_SOCIAL_PROOF_CUSTOMERS,MARKETPLACE_TRENDING_SOCIAL_PROOF,MARKETPLACE_RECOMMENDATIONS,MARKETPLACE_PENDING_INSTALLATIONS">

    <meta name="html-safe-nonce" content="0ff289ccb4373d7978e49a96d691f429bb8e243c">

  <meta http-equiv="x-pjax-version" content="4e4a9275b31fe1bd2f9ec0cd72e03660">
  

      <link href="https://github.com/kripken/sql.js/commits/master.atom" rel="alternate" title="Recent Commits to sql.js:master" type="application/atom+xml">

  <meta name="go-import" content="github.com/kripken/sql.js git https://github.com/kripken/sql.js.git">

  <meta name="octolytics-dimension-user_id" content="173661" /><meta name="octolytics-dimension-user_login" content="kripken" /><meta name="octolytics-dimension-repository_id" content="3556910" /><meta name="octolytics-dimension-repository_nwo" content="kripken/sql.js" /><meta name="octolytics-dimension-repository_public" content="true" /><meta name="octolytics-dimension-repository_is_fork" content="false" /><meta name="octolytics-dimension-repository_network_root_id" content="3556910" /><meta name="octolytics-dimension-repository_network_root_nwo" content="kripken/sql.js" /><meta name="octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown" content="false" />


    <link rel="canonical" href="https://github.com/kripken/sql.js/blob/master/dist/sql-wasm.js" data-pjax-transient>


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://github.githubassets.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" class="js-site-favicon" href="https://github.githubassets.com/favicon.ico">

<meta name="theme-color" content="#1e2327">


  <link rel="manifest" href="/manifest.json" crossOrigin="use-credentials">

  </head>

  <body class="logged-out env-production page-responsive page-blob">
    

  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="px-2 py-4 bg-blue text-white show-on-focus js-skip-to-content">Skip to content</a>
    <span class="Progress progress-pjax-loader position-fixed width-full js-pjax-loader-bar">
      <span class="progress-pjax-loader-bar top-0 left-0" style="width: 0%;"></span>
    </span>

    
    
    


        <header class="Header-old header-logged-out js-details-container Details position-relative f4 py-2" role="banner">
  <div class="container-lg d-lg-flex flex-items-center p-responsive">
    <div class="d-flex flex-justify-between flex-items-center">
        <a class="mr-4" href="https://github.com/" aria-label="Homepage" data-ga-click="(Logged out) Header, go to homepage, icon:logo-wordmark">
          <svg height="32" class="octicon octicon-mark-github text-white" viewBox="0 0 16 16" version="1.1" width="32" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"/></svg>
        </a>

          <div class="d-lg-none css-truncate css-truncate-target width-fit p-2">
            
              <svg class="octicon octicon-repo" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
    <a class="Header-link" href="/kripken">kripken</a>
    /
    <a class="Header-link" href="/kripken/sql.js">sql.js</a>


          </div>

        <div class="d-flex flex-items-center">
            <a href="/join?source=header-repo"
              class="d-inline-block d-lg-none f5 text-white no-underline border border-gray-dark rounded-2 px-2 py-1 mr-3 mr-sm-5"
              data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;client_id&quot;:&quot;2077006100.1554469963&quot;,&quot;originating_request_id&quot;:&quot;267B:70B9:32B2FF:4A4776:5E283458&quot;,&quot;originating_url&quot;:&quot;https://github.com/kripken/sql.js/blob/master/dist/sql-wasm.js&quot;,&quot;referrer&quot;:&quot;https://github.com/kripken/sql.js/tree/master/dist&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="ba3066462b91ab28b9f2229828f299a9a6cff14a1574d55e319d5315a3e6e333"
              data-ga-click="(Logged out) Header, clicked Sign up, text:sign-up">
              Sign&nbsp;up
            </a>

          <button class="btn-link d-lg-none mt-1 js-details-target" type="button" aria-label="Toggle navigation" aria-expanded="false">
            <svg height="24" class="octicon octicon-three-bars text-white" viewBox="0 0 12 16" version="1.1" width="18" aria-hidden="true"><path fill-rule="evenodd" d="M11.41 9H.59C0 9 0 8.59 0 8c0-.59 0-1 .59-1H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1h.01zm0-4H.59C0 5 0 4.59 0 4c0-.59 0-1 .59-1H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1h.01zM.59 11H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1H.59C0 13 0 12.59 0 12c0-.59 0-1 .59-1z"/></svg>
          </button>
        </div>
    </div>

    <div class="HeaderMenu HeaderMenu--logged-out position-fixed top-0 right-0 bottom-0 height-fit position-lg-relative d-lg-flex flex-justify-between flex-items-center flex-auto">
      <div class="d-flex d-lg-none flex-justify-end border-bottom bg-gray-light p-3">
        <button class="btn-link js-details-target" type="button" aria-label="Toggle navigation" aria-expanded="false">
          <svg height="24" class="octicon octicon-x text-gray" viewBox="0 0 12 16" version="1.1" width="18" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
        </button>
      </div>

        <nav class="mt-0 px-3 px-lg-0 mb-5 mb-lg-0" aria-label="Global">
          <ul class="d-lg-flex list-style-none">
              <li class="d-block d-lg-flex flex-lg-nowrap flex-lg-items-center border-bottom border-lg-bottom-0 mr-0 mr-lg-3 edge-item-fix position-relative flex-wrap flex-justify-between d-flex flex-items-center ">
                <details class="HeaderMenu-details details-overlay details-reset width-full">
                  <summary class="HeaderMenu-summary HeaderMenu-link px-0 py-3 border-0 no-wrap d-block d-lg-inline-block">
                    Why GitHub?
                    <svg x="0px" y="0px" viewBox="0 0 14 8" xml:space="preserve" fill="none" class="icon-chevon-down-mktg position-absolute position-lg-relative">
                      <path d="M1,1l6.2,6L13,1"></path>
                    </svg>
                  </summary>
                  <div class="dropdown-menu flex-auto rounded-1 bg-white px-0 mt-0 pb-4 p-lg-4 position-relative position-lg-absolute left-0 left-lg-n4">
                    <a href="/features" class="py-2 lh-condensed-ultra d-block link-gray-dark no-underline h5 Bump-link--hover" data-ga-click="(Logged out) Header, go to Features">Features <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a>
                    <ul class="list-style-none f5 pb-3">
                      <li class="edge-item-fix"><a href="/features/code-review/" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Code review">Code review</a></li>
                      <li class="edge-item-fix"><a href="/features/project-management/" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Project management">Project management</a></li>
                      <li class="edge-item-fix"><a href="/features/integrations" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Integrations">Integrations</a></li>
                      <li class="edge-item-fix"><a href="/features/actions" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Actions">Actions</a></li>
                          <li class="edge-item-fix"><a href="/features/packages" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to GitHub Packages">Packages</a></li>
                      <li class="edge-item-fix"><a href="/features/security" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Security">Security</a></li>
                      <li class="edge-item-fix"><a href="/features#team-management" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Team management">Team management</a></li>
                      <li class="edge-item-fix"><a href="/features#hosting" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Code hosting">Hosting</a></li>
                    </ul>

                    <ul class="list-style-none mb-0 border-lg-top pt-lg-3">
                      <li class="edge-item-fix"><a href="/customer-stories" class="py-2 lh-condensed-ultra d-block no-underline link-gray-dark no-underline h5 Bump-link--hover" data-ga-click="(Logged out) Header, go to Customer stories">Customer stories <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a></li>
                      <li class="edge-item-fix"><a href="/security" class="py-2 lh-condensed-ultra d-block no-underline link-gray-dark no-underline h5 Bump-link--hover" data-ga-click="(Logged out) Header, go to Security">Security <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a></li>
                    </ul>
                  </div>
                </details>
              </li>
              <li class="border-bottom border-lg-bottom-0 mr-0 mr-lg-3">
                <a href="/enterprise" class="HeaderMenu-link no-underline py-3 d-block d-lg-inline-block" data-ga-click="(Logged out) Header, go to Enterprise">Enterprise</a>
              </li>

              <li class="d-block d-lg-flex flex-lg-nowrap flex-lg-items-center border-bottom border-lg-bottom-0 mr-0 mr-lg-3 edge-item-fix position-relative flex-wrap flex-justify-between d-flex flex-items-center ">
                <details class="HeaderMenu-details details-overlay details-reset width-full">
                  <summary class="HeaderMenu-summary HeaderMenu-link px-0 py-3 border-0 no-wrap d-block d-lg-inline-block">
                    Explore
                    <svg x="0px" y="0px" viewBox="0 0 14 8" xml:space="preserve" fill="none" class="icon-chevon-down-mktg position-absolute position-lg-relative">
                      <path d="M1,1l6.2,6L13,1"></path>
                    </svg>
                  </summary>

                  <div class="dropdown-menu flex-auto rounded-1 bg-white px-0 pt-2 pb-0 mt-0 pb-4 p-lg-4 position-relative position-lg-absolute left-0 left-lg-n4">
                    <ul class="list-style-none mb-3">
                      <li class="edge-item-fix"><a href="/explore" class="py-2 lh-condensed-ultra d-block link-gray-dark no-underline h5 Bump-link--hover" data-ga-click="(Logged out) Header, go to Explore">Explore GitHub <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a></li>
                    </ul>

                    <h4 class="text-gray-light text-normal text-mono f5 mb-2 border-lg-top pt-lg-3">Learn &amp; contribute</h4>
                    <ul class="list-style-none mb-3">
                      <li class="edge-item-fix"><a href="/topics" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Topics">Topics</a></li>
                        <li class="edge-item-fix"><a href="/collections" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Collections">Collections</a></li>
                      <li class="edge-item-fix"><a href="/trending" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Trending">Trending</a></li>
                      <li class="edge-item-fix"><a href="https://lab.github.com/" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Learning lab">Learning Lab</a></li>
                      <li class="edge-item-fix"><a href="https://opensource.guide" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Open source guides">Open source guides</a></li>
                    </ul>

                    <h4 class="text-gray-light text-normal text-mono f5 mb-2 border-lg-top pt-lg-3">Connect with others</h4>
                    <ul class="list-style-none mb-0">
                      <li class="edge-item-fix"><a href="https://github.com/events" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Events">Events</a></li>
                      <li class="edge-item-fix"><a href="https://github.community" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Community forum">Community forum</a></li>
                      <li class="edge-item-fix"><a href="https://education.github.com" class="py-2 pb-0 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to GitHub Education">GitHub Education</a></li>
                    </ul>
                  </div>
                </details>
              </li>

              <li class="border-bottom border-lg-bottom-0 mr-0 mr-lg-3">
                <a href="/marketplace" class="HeaderMenu-link no-underline py-3 d-block d-lg-inline-block" data-ga-click="(Logged out) Header, go to Marketplace">Marketplace</a>
              </li>

              <li class="d-block d-lg-flex flex-lg-nowrap flex-lg-items-center border-bottom border-lg-bottom-0 mr-0 mr-lg-3 edge-item-fix position-relative flex-wrap flex-justify-between d-flex flex-items-center ">
                <details class="HeaderMenu-details details-overlay details-reset width-full">
                  <summary class="HeaderMenu-summary HeaderMenu-link px-0 py-3 border-0 no-wrap d-block d-lg-inline-block">
                    Pricing
                    <svg x="0px" y="0px" viewBox="0 0 14 8" xml:space="preserve" fill="none" class="icon-chevon-down-mktg position-absolute position-lg-relative">
                       <path d="M1,1l6.2,6L13,1"></path>
                    </svg>
                  </summary>

                  <div class="dropdown-menu flex-auto rounded-1 bg-white px-0 pt-2 pb-4 mt-0 p-lg-4 position-relative position-lg-absolute left-0 left-lg-n4">
                    <a href="/pricing" class="pb-2 lh-condensed-ultra d-block link-gray-dark no-underline h5 Bump-link--hover" data-ga-click="(Logged out) Header, go to Pricing">Plans <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a>

                    <ul class="list-style-none mb-3">
                      <li class="edge-item-fix"><a href="/pricing#feature-comparison" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Compare plans">Compare plans</a></li>
                      <li class="edge-item-fix"><a href="https://enterprise.github.com/contact" class="py-2 lh-condensed-ultra d-block link-gray no-underline f5" data-ga-click="(Logged out) Header, go to Contact Sales">Contact Sales</a></li>
                    </ul>

                    <ul class="list-style-none mb-0 border-lg-top pt-lg-3">
                      <li class="edge-item-fix"><a href="/nonprofit" class="py-2 lh-condensed-ultra d-block no-underline link-gray-dark no-underline h5 Bump-link--hover" data-ga-click="(Logged out) Header, go to Nonprofits">Nonprofit <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a></li>
                      <li class="edge-item-fix"><a href="https://education.github.com" class="py-2 pb-0 lh-condensed-ultra d-block no-underline link-gray-dark no-underline h5 Bump-link--hover"  data-ga-click="(Logged out) Header, go to Education">Education <span class="Bump-link-symbol float-right text-normal text-gray-light">&rarr;</span></a></li>
                    </ul>
                  </div>
                </details>
              </li>
          </ul>
        </nav>

      <div class="d-lg-flex flex-items-center px-3 px-lg-0 text-center text-lg-left">
          <div class="d-lg-flex mb-3 mb-lg-0">
            <div class="header-search flex-self-stretch flex-lg-self-auto mr-0 mr-lg-3 mb-3 mb-lg-0 scoped-search site-scoped-search js-site-search position-relative js-jump-to"
  role="combobox"
  aria-owns="jump-to-results"
  aria-label="Search or jump to"
  aria-haspopup="listbox"
  aria-expanded="false"
>
  <div class="position-relative">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-site-search-form" role="search" aria-label="Site" data-scope-type="Repository" data-scope-id="3556910" data-scoped-search-url="/kripken/sql.js/search" data-unscoped-search-url="/search" action="/kripken/sql.js/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
      <label class="form-control input-sm header-search-wrapper p-0 header-search-wrapper-jump-to position-relative d-flex flex-justify-between flex-items-center js-chromeless-input-container">
        <input type="text"
          class="form-control input-sm header-search-input jump-to-field js-jump-to-field js-site-search-focus js-site-search-field is-clearable"
          data-hotkey="s,/"
          name="q"
          value=""
          placeholder="Search"
          data-unscoped-placeholder="Search GitHub"
          data-scoped-placeholder="Search"
          autocapitalize="off"
          aria-autocomplete="list"
          aria-controls="jump-to-results"
          aria-label="Search"
          data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations#csrf-token=tsyMz7Cn4aTJq5MgKOJolBehA1rprk9AbQHxOFwa+aIp/cpbJ7AD6uLV3+njtM7R5+yT7Lw+03nEHPWtKqirug=="
          spellcheck="false"
          autocomplete="off"
          >
          <input type="hidden" class="js-site-search-type-field" name="type" >
            <img src="https://github.githubassets.com/images/search-key-slash.svg" alt="" class="mr-2 header-search-key-slash">

            <div class="Box position-absolute overflow-hidden d-none jump-to-suggestions js-jump-to-suggestions-container">
              
<ul class="d-none js-jump-to-suggestions-template-container">
  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-suggestion" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg height="16" width="16" class="octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none" title="Repository" aria-label="Repository" viewBox="0 0 12 16" version="1.1" role="img"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none" title="Project" aria-label="Project" viewBox="0 0 15 16" version="1.1" role="img"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 00-1 1v14a1 1 0 001 1h13a1 1 0 001-1V1a1 1 0 00-1-1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none" title="Search" aria-label="Search" viewBox="0 0 16 16" version="1.1" role="img"><path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0013 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 000-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z"/></svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>

</ul>

<ul class="d-none js-jump-to-no-results-template-container">
  <li class="d-flex flex-justify-center flex-items-center f5 d-none js-jump-to-suggestion p-2">
    <span class="text-gray">No suggested jump to results</span>
  </li>
</ul>

<ul id="jump-to-results" role="listbox" class="p-0 m-0 js-navigation-container jump-to-suggestions-results-container js-jump-to-suggestions-results-container">
  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-scoped-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg height="16" width="16" class="octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none" title="Repository" aria-label="Repository" viewBox="0 0 12 16" version="1.1" role="img"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none" title="Project" aria-label="Project" viewBox="0 0 15 16" version="1.1" role="img"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 00-1 1v14a1 1 0 001 1h13a1 1 0 001-1V1a1 1 0 00-1-1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none" title="Search" aria-label="Search" viewBox="0 0 16 16" version="1.1" role="img"><path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0013 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 000-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z"/></svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>

  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-global-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg height="16" width="16" class="octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none" title="Repository" aria-label="Repository" viewBox="0 0 12 16" version="1.1" role="img"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none" title="Project" aria-label="Project" viewBox="0 0 15 16" version="1.1" role="img"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 00-1 1v14a1 1 0 001 1h13a1 1 0 001-1V1a1 1 0 00-1-1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none" title="Search" aria-label="Search" viewBox="0 0 16 16" version="1.1" role="img"><path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0013 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 000-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z"/></svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>


</ul>

            </div>
      </label>
</form>  </div>
</div>

          </div>

        <a href="/login?return_to=%2Fkripken%2Fsql.js%2Fblob%2Fmaster%2Fdist%2Fsql-wasm.js"
          class="HeaderMenu-link no-underline mr-3"
          data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;client_id&quot;:&quot;2077006100.1554469963&quot;,&quot;originating_request_id&quot;:&quot;267B:70B9:32B2FF:4A4776:5E283458&quot;,&quot;originating_url&quot;:&quot;https://github.com/kripken/sql.js/blob/master/dist/sql-wasm.js&quot;,&quot;referrer&quot;:&quot;https://github.com/kripken/sql.js/tree/master/dist&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="c225b260f239f9dbef9c021727850695353110f2c7761ee85aa0b31ab7c8d1eb"
          data-ga-click="(Logged out) Header, clicked Sign in, text:sign-in">
          Sign&nbsp;in
        </a>
          <a href="/join?source=header-repo&amp;source_repo=kripken%2Fsql.js"
            class="HeaderMenu-link d-inline-block no-underline border border-gray-dark rounded-1 px-2 py-1"
            data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;client_id&quot;:&quot;2077006100.1554469963&quot;,&quot;originating_request_id&quot;:&quot;267B:70B9:32B2FF:4A4776:5E283458&quot;,&quot;originating_url&quot;:&quot;https://github.com/kripken/sql.js/blob/master/dist/sql-wasm.js&quot;,&quot;referrer&quot;:&quot;https://github.com/kripken/sql.js/tree/master/dist&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="c225b260f239f9dbef9c021727850695353110f2c7761ee85aa0b31ab7c8d1eb"
            data-ga-click="(Logged out) Header, clicked Sign up, text:sign-up">
            Sign&nbsp;up
          </a>
      </div>
    </div>
  </div>
</header>

  </div>

  <div id="start-of-content" class="show-on-focus"></div>


    <div id="js-flash-container">

</div>



  <div class="application-main " data-commit-hovercards-enabled>
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode" class="">
    <main  >
      


  










  <div class=" pagehead repohead readability-menu experiment-repo-nav pt-0 pt-lg-4 ">

    <div class="container-lg mb-4 p-responsive d-none d-lg-flex">

      <div class="flex-auto min-width-0 width-fit mr-3">
        <h1 class="public  d-flex flex-wrap flex-items-center break-word float-none">
    <svg class="octicon octicon-repo mr-1" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
  <span class="author" itemprop="author">
    <a class="url fn" rel="author" data-hovercard-type="user" data-hovercard-url="/users/kripken/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/kripken">kripken</a>
  </span>
  <span class="path-divider">/</span>
  <strong itemprop="name" class="mr-2">
    <a data-pjax="#js-repo-pjax-container" href="/kripken/sql.js">sql.js</a>
  </strong>
  
</h1>


      </div>

      <ul class="pagehead-actions flex-shrink-0">




  <li>
    
  <a class="tooltipped tooltipped-s btn btn-sm btn-with-count" aria-label="You must be signed in to watch a repository" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;notification subscription menu watch&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;client_id&quot;:&quot;2077006100.1554469963&quot;,&quot;originating_request_id&quot;:&quot;267B:70B9:32B2FF:4A4776:5E283458&quot;,&quot;originating_url&quot;:&quot;https://github.com/kripken/sql.js/blob/master/dist/sql-wasm.js&quot;,&quot;referrer&quot;:&quot;https://github.com/kripken/sql.js/tree/master/dist&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="28f58c6e46886b329c738e3b824c2db4c854e508307f07b380acd0c11a251613" href="/login?return_to=%2Fkripken%2Fsql.js">
    <svg class="octicon octicon-eye v-align-text-bottom" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
    Watch
</a>    <a class="social-count" href="/kripken/sql.js/watchers"
       aria-label="220 users are watching this repository">
      220
    </a>

  </li>

  <li>
        <a class="btn btn-sm btn-with-count tooltipped tooltipped-s" aria-label="You must be signed in to star a repository" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;star button&quot;,&quot;repository_id&quot;:3556910,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;client_id&quot;:&quot;2077006100.1554469963&quot;,&quot;originating_request_id&quot;:&quot;267B:70B9:32B2FF:4A4776:5E283458&quot;,&quot;originating_url&quot;:&quot;https://github.com/kripken/sql.js/blob/master/dist/sql-wasm.js&quot;,&quot;referrer&quot;:&quot;https://github.com/kripken/sql.js/tree/master/dist&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="cc8a4e9d951be482ab35d8a4ce30335c2b6d26db6c4f7d6db1d4681bfc011a3e" href="/login?return_to=%2Fkripken%2Fsql.js">
      <svg aria-label="star" height="16" class="octicon octicon-star v-align-text-bottom" viewBox="0 0 14 16" version="1.1" width="14" role="img"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z"/></svg>

      Star
</a>
    <a class="social-count js-social-count" href="/kripken/sql.js/stargazers"
      aria-label="6196 users starred this repository">
      6.2k
    </a>

  </li>

  <li>
      <a class="btn btn-sm btn-with-count tooltipped tooltipped-s" aria-label="You must be signed in to fork a repository" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;repo details fork button&quot;,&quot;repository_id&quot;:3556910,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;client_id&quot;:&quot;2077006100.1554469963&quot;,&quot;originating_request_id&quot;:&quot;267B:70B9:32B2FF:4A4776:5E283458&quot;,&quot;originating_url&quot;:&quot;https://github.com/kripken/sql.js/blob/master/dist/sql-wasm.js&quot;,&quot;referrer&quot;:&quot;https://github.com/kripken/sql.js/tree/master/dist&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="6c2e413e9e164ee795f875f403651fdc77b43c5aecb89c124e9f36649f79f31c" href="/login?return_to=%2Fkripken%2Fsql.js">
        <svg class="octicon octicon-repo-forked v-align-text-bottom" viewBox="0 0 10 16" version="1.1" width="10" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 00-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 002 1a1.993 1.993 0 00-1 3.72V6.5l3 3v1.78A1.993 1.993 0 005 15a1.993 1.993 0 001-3.72V9.5l3-3V4.72A1.993 1.993 0 008 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
        Fork
</a>
    <a href="/kripken/sql.js/network/members" class="social-count"
       aria-label="718 users forked this repository">
      718
    </a>
  </li>
</ul>

    </div>
    
<nav class="hx_reponav reponav js-repo-nav js-sidenav-container-pjax clearfix container-lg p-responsive d-none d-lg-block"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
    aria-label="Repository"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a class="js-selected-navigation-item selected reponav-item" itemprop="url" data-hotkey="g c" aria-current="page" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages /kripken/sql.js" href="/kripken/sql.js">
      <div class="d-inline"><svg class="octicon octicon-code" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg></div>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a itemprop="url" data-hotkey="g i" class="js-selected-navigation-item reponav-item" data-selected-links="repo_issues repo_labels repo_milestones /kripken/sql.js/issues" href="/kripken/sql.js/issues">
        <div class="d-inline"><svg class="octicon octicon-issue-opened" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 011.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"/></svg></div>
        <span itemprop="name">Issues</span>
        <span class="Counter">79</span>
        <meta itemprop="position" content="2">
</a>    </span>


  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a data-hotkey="g p" data-skip-pjax="true" itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_pulls checks /kripken/sql.js/pulls" href="/kripken/sql.js/pulls">
      <div class="d-inline"><svg class="octicon octicon-git-pull-request" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0010 15a1.993 1.993 0 001-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 00-1 3.72v6.56A1.993 1.993 0 002 15a1.993 1.993 0 001-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg></div>
      <span itemprop="name">Pull requests</span>
      <span class="Counter">10</span>
      <meta itemprop="position" content="4">
</a>  </span>


    <a data-hotkey="g b" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /kripken/sql.js/projects" href="/kripken/sql.js/projects">
      <div class="d-inline"><svg class="octicon octicon-project" viewBox="0 0 15 16" version="1.1" width="15" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 00-1 1v14a1 1 0 001 1h13a1 1 0 001-1V1a1 1 0 00-1-1z"/></svg></div>
      Projects
      <span class="Counter" >0</span>
</a>

    <a class="js-selected-navigation-item reponav-item" data-hotkey="g w" data-selected-links="repo_wiki /kripken/sql.js/wiki" href="/kripken/sql.js/wiki">
      <div class="d-inline"><svg class="octicon octicon-book" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"/></svg></div>
      Wiki
</a>
    <a data-skip-pjax="true" class="js-selected-navigation-item reponav-item" data-selected-links="security alerts policy token_scanning code_scanning /kripken/sql.js/security/advisories" href="/kripken/sql.js/security/advisories">
      <div class="d-inline"><svg class="octicon octicon-shield" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M0 2l7-2 7 2v6.02C14 12.69 8.69 16 7 16c-1.69 0-7-3.31-7-7.98V2zm1 .75L7 1l6 1.75v5.268C13 12.104 8.449 15 7 15c-1.449 0-6-2.896-6-6.982V2.75zm1 .75L7 2v12c-1.207 0-5-2.482-5-5.985V3.5z"/></svg></div>
      Security
</a>
    <a class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors dependency_graph pulse people /kripken/sql.js/pulse" href="/kripken/sql.js/pulse">
      <div class="d-inline"><svg class="octicon octicon-graph" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg></div>
      Insights
</a>

</nav>

  <div class="reponav-wrapper reponav-small d-lg-none">
  <nav class="reponav js-reponav text-center no-wrap"
       itemscope
       itemtype="http://schema.org/BreadcrumbList">

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a class="js-selected-navigation-item selected reponav-item" itemprop="url" aria-current="page" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages /kripken/sql.js" href="/kripken/sql.js">
        <span itemprop="name">Code</span>
        <meta itemprop="position" content="1">
</a>    </span>

      <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
        <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_issues repo_labels repo_milestones /kripken/sql.js/issues" href="/kripken/sql.js/issues">
          <span itemprop="name">Issues</span>
          <span class="Counter">79</span>
          <meta itemprop="position" content="2">
</a>      </span>


    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_pulls checks /kripken/sql.js/pulls" href="/kripken/sql.js/pulls">
        <span itemprop="name">Pull requests</span>
        <span class="Counter">10</span>
        <meta itemprop="position" content="4">
</a>    </span>

      <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
        <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /kripken/sql.js/projects" href="/kripken/sql.js/projects">
          <span itemprop="name">Projects</span>
          <span class="Counter">0</span>
          <meta itemprop="position" content="5">
</a>      </span>

      <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
        <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_wiki /kripken/sql.js/wiki" href="/kripken/sql.js/wiki">
          <span itemprop="name">Wiki</span>
          <meta itemprop="position" content="6">
</a>      </span>

      <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="security alerts policy token_scanning code_scanning /kripken/sql.js/security/advisories" href="/kripken/sql.js/security/advisories">
        <span itemprop="name">Security</span>
        <meta itemprop="position" content="7">
</a>
      <a class="js-selected-navigation-item reponav-item" data-selected-links="pulse /kripken/sql.js/pulse" href="/kripken/sql.js/pulse">
        Pulse
</a>

  </nav>
</div>


  </div>
<div class="container-lg clearfix new-discussion-timeline experiment-repo-nav  p-responsive">
  <div class="repository-content ">

    
    


  


    <a class="d-none js-permalink-shortcut" data-hotkey="y" href="/kripken/sql.js/blob/94d9466d6bb1955e8b17d7b7007d505d184cad9f/dist/sql-wasm.js">Permalink</a>

    <!-- blob contrib key: blob_contributors:v21:2eead35c3d3cf619e3f2ecc0371b7b4c -->
          <div class="signup-prompt-bg rounded-1">
      <div class="signup-prompt p-4 text-center mb-4 rounded-1">
        <div class="position-relative">
          <!-- '"` --><!-- </textarea></xmp> --></option></form><form action="/prompt_dismissals/signup" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="_method" value="put" /><input type="hidden" name="authenticity_token" value="S9N6a/qydtNzBj5kmDsJRwxhrlv/OSl36P0H0OKt6aqXfTF7tSRyiGknljbz36UUzo2kbKgidx2vPJP1LOqhPA==" />
            <button type="submit" class="position-absolute top-0 right-0 btn-link link-gray" data-ga-click="(Logged out) Sign up prompt, clicked Dismiss, text:dismiss">
              Dismiss
            </button>
</form>          <h3 class="pt-2">Join GitHub today</h3>
          <p class="col-6 mx-auto">GitHub is home to over 40 million developers working together to host and review code, manage projects, and build software together.</p>
          <a class="btn btn-primary" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;files signup prompt&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;client_id&quot;:&quot;2077006100.1554469963&quot;,&quot;originating_request_id&quot;:&quot;267B:70B9:32B2FF:4A4776:5E283458&quot;,&quot;originating_url&quot;:&quot;https://github.com/kripken/sql.js/blob/master/dist/sql-wasm.js&quot;,&quot;referrer&quot;:&quot;https://github.com/kripken/sql.js/tree/master/dist&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="2db7ec5a5c233f2eeb22bb458db1f782192d301493bdba7afefe183bfffea65d" data-ga-click="(Logged out) Sign up prompt, clicked Sign up, text:sign-up" href="/join?source=prompt-blob-show&amp;source_repo=kripken%2Fsql.js">Sign up</a>
        </div>
      </div>
    </div>


    <div class="d-flex flex-items-start flex-shrink-0 pb-3 flex-column flex-md-row">
      <span class="d-flex flex-justify-between width-full width-md-auto">
        
<details class="details-reset details-overlay branch-select-menu " id="branch-select-menu">
  <summary class="btn btn-sm css-truncate"
           data-hotkey="w"
           title="Switch branches or tags">
    <i>Branch:</i>
    <span class="css-truncate-target" data-menu-button>master</span>
    <span class="dropdown-caret"></span>
  </summary>

  <details-menu class="SelectMenu SelectMenu--hasFilter" src="/kripken/sql.js/refs/master/dist/sql-wasm.js?source_action=show&amp;source_controller=blob" preload>
    <div class="SelectMenu-modal">
      <include-fragment class="SelectMenu-loading" aria-label="Menu is loading">
        <svg class="octicon octicon-octoface anim-pulse" height="32" viewBox="0 0 16 16" version="1.1" width="32" aria-hidden="true"><path fill-rule="evenodd" d="M14.7 5.34c.13-.32.55-1.59-.13-3.31 0 0-1.05-.33-3.44 1.3-1-.28-2.07-.32-3.13-.32s-2.13.04-3.13.32c-2.39-1.64-3.44-1.3-3.44-1.3-.68 1.72-.26 2.99-.13 3.31C.49 6.21 0 7.33 0 8.69 0 13.84 3.33 15 7.98 15S16 13.84 16 8.69c0-1.36-.49-2.48-1.3-3.35zM8 14.02c-3.3 0-5.98-.15-5.98-3.35 0-.76.38-1.48 1.02-2.07 1.07-.98 2.9-.46 4.96-.46 2.07 0 3.88-.52 4.96.46.65.59 1.02 1.3 1.02 2.07 0 3.19-2.68 3.35-5.98 3.35zM5.49 9.01c-.66 0-1.2.8-1.2 1.78s.54 1.79 1.2 1.79c.66 0 1.2-.8 1.2-1.79s-.54-1.78-1.2-1.78zm5.02 0c-.66 0-1.2.79-1.2 1.78s.54 1.79 1.2 1.79c.66 0 1.2-.8 1.2-1.79s-.53-1.78-1.2-1.78z"/></svg>
      </include-fragment>
    </div>
  </details-menu>
</details>

        <div class="BtnGroup flex-shrink-0 d-md-none">
          <a href="/kripken/sql.js/find/master"
                class="js-pjax-capture-input btn btn-sm BtnGroup-item"
                data-pjax
                data-hotkey="t">
            Find file
          </a>
          <clipboard-copy value="dist/sql-wasm.js" class="btn btn-sm BtnGroup-item">
            Copy path
          </clipboard-copy>
        </div>
      </span>
      <h2 id="blob-path" class="breadcrumb flex-auto min-width-0 text-normal flex-md-self-center ml-md-2 mr-md-3 my-2 my-md-0">
        <span class="js-repo-root text-bold"><span class="js-path-segment"><a data-pjax="true" href="/kripken/sql.js"><span>sql.js</span></a></span></span><span class="separator">/</span><span class="js-path-segment"><a data-pjax="true" href="/kripken/sql.js/tree/master/dist"><span>dist</span></a></span><span class="separator">/</span><strong class="final-path">sql-wasm.js</strong>
      </h2>

      <div class="BtnGroup flex-shrink-0 d-none d-md-inline-block">
        <a href="/kripken/sql.js/find/master"
              class="js-pjax-capture-input btn btn-sm BtnGroup-item"
              data-pjax
              data-hotkey="t">
          Find file
        </a>
        <clipboard-copy value="dist/sql-wasm.js" class="btn btn-sm BtnGroup-item">
          Copy path
        </clipboard-copy>
      </div>
    </div>

    



    
  <div class="Box Box--condensed d-flex flex-column flex-shrink-0">
      <div class="Box-body d-flex flex-justify-between bg-blue-light flex-column flex-md-row flex-items-start flex-md-items-center">
        <span class="pr-md-4 f6">
          <a rel="contributor" data-skip-pjax="true" data-hovercard-type="user" data-hovercard-url="/users/lovasoa/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/lovasoa"><img class="avatar" src="https://avatars1.githubusercontent.com/u/552629?s=40&amp;v=4" width="20" height="20" alt="@lovasoa" /></a>
          <a class="text-bold link-gray-dark lh-default v-align-middle" rel="contributor" data-hovercard-type="user" data-hovercard-url="/users/lovasoa/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/lovasoa">lovasoa</a>
            <span class="lh-default v-align-middle">
              <a data-pjax="true" title="Fix memory leak on error (#307)

* Create test_memory_leak_on_error.js

* fix test_memory_leak_on_error.js

* Update test_memory_leak_on_error.js

* Update test_memory_leak_on_error.js

* Fix a memory leak in db.exec

When an error was thrown in db.exec, the allocated stack was never restored

* Enable assertions in debug builds

* Fix assertion error in debug builds

Fix Assertion failed: you need to wait for the runtime to be ready (e.g.
wait for main() to be called)

* Fix memory leak on error in Database.exec

Memory was leaked when Database.exec was run and the
execution threw an error

* Disable the memory leak test by default

The memory leak test is expensive, and we don't want to run it every
time

* Prevent several memory leaks on error

I did not manage to trigger OOM errors with them,
but db.run and db.each were also vulnerable to #306

* Check the compiled files in" class="link-gray" href="/kripken/sql.js/commit/f4ec97f2fe5a0f108c0f370d58393a72ccec6526">Fix memory leak on error (</a><a class="issue-link js-issue-link" data-error-text="Failed to load issue title" data-id="517651929" data-permission-text="Issue title is private" data-url="https://github.com/kripken/sql.js/issues/307" data-hovercard-type="pull_request" data-hovercard-url="/kripken/sql.js/pull/307/hovercard" href="https://github.com/kripken/sql.js/pull/307">#307</a><a data-pjax="true" title="Fix memory leak on error (#307)

* Create test_memory_leak_on_error.js

* fix test_memory_leak_on_error.js

* Update test_memory_leak_on_error.js

* Update test_memory_leak_on_error.js

* Fix a memory leak in db.exec

When an error was thrown in db.exec, the allocated stack was never restored

* Enable assertions in debug builds

* Fix assertion error in debug builds

Fix Assertion failed: you need to wait for the runtime to be ready (e.g.
wait for main() to be called)

* Fix memory leak on error in Database.exec

Memory was leaked when Database.exec was run and the
execution threw an error

* Disable the memory leak test by default

The memory leak test is expensive, and we don't want to run it every
time

* Prevent several memory leaks on error

I did not manage to trigger OOM errors with them,
but db.run and db.each were also vulnerable to #306

* Check the compiled files in" class="link-gray" href="/kripken/sql.js/commit/f4ec97f2fe5a0f108c0f370d58393a72ccec6526">)</a>
            </span>
        </span>
        <span class="d-inline-block flex-shrink-0 v-align-bottom f6 mt-2 mt-md-0">
          <a class="pr-2 text-mono link-gray" href="/kripken/sql.js/commit/f4ec97f2fe5a0f108c0f370d58393a72ccec6526" data-pjax>f4ec97f</a>
          <relative-time datetime="2019-11-05T16:27:02Z" class="no-wrap">Nov 6, 2019</relative-time>
        </span>
      </div>

    <div class="Box-body d-flex flex-items-center flex-auto f6 border-bottom-0 flex-wrap" >
      <details class="details-reset details-overlay details-overlay-dark lh-default text-gray-dark float-left mr-2" id="blob_contributors_box">
        <summary class="btn-link">
          <span><strong>2</strong> contributors</span>
        </summary>
        <details-dialog
          class="Box Box--overlay d-flex flex-column anim-fade-in fast"
          aria-label="Users who have contributed to this file"
          src="/kripken/sql.js/contributors-list/master/dist/sql-wasm.js" preload>
          <div class="Box-header">
            <button class="Box-btn-octicon btn-octicon float-right" type="button" aria-label="Close dialog" data-close-dialog>
              <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
            </button>
            <h3 class="Box-title">
              Users who have contributed to this file
            </h3>
          </div>
          <include-fragment class="octocat-spinner my-3" aria-label="Loading..."></include-fragment>
        </details-dialog>
      </details>
        <span class="">
    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/Taytay/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/kripken/sql.js/commits/master/dist/sql-wasm.js?author=Taytay">
      <img class="avatar mr-1" src="https://avatars1.githubusercontent.com/u/1330693?s=40&amp;v=4" width="20" height="20" alt="@Taytay" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/lovasoa/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/kripken/sql.js/commits/master/dist/sql-wasm.js?author=lovasoa">
      <img class="avatar mr-1" src="https://avatars1.githubusercontent.com/u/552629?s=40&amp;v=4" width="20" height="20" alt="@lovasoa" /> 
</a>
</span>

    </div>
  </div>





    <div class="Box mt-3 position-relative">
      
<div class="Box-header py-2 d-flex flex-column flex-shrink-0 flex-md-row flex-md-items-center">
  <div class="text-mono f6 flex-auto pr-3 flex-order-2 flex-md-order-1 mt-2 mt-md-0">

      210 lines (193 sloc)
      <span class="file-info-divider"></span>
    55.3 KB
  </div>

  <div class="d-flex py-1 py-md-0 flex-auto flex-order-1 flex-md-order-2 flex-sm-grow-0 flex-justify-between">

    <div class="BtnGroup">
      <a id="raw-url" class="btn btn-sm BtnGroup-item" href="/kripken/sql.js/raw/master/dist/sql-wasm.js">Raw</a>
        <a class="btn btn-sm js-update-url-with-hash BtnGroup-item" data-hotkey="b" href="/kripken/sql.js/blame/master/dist/sql-wasm.js">Blame</a>
      <a rel="nofollow" class="btn btn-sm BtnGroup-item" href="/kripken/sql.js/commits/master/dist/sql-wasm.js">History</a>
    </div>


    <div>
            <a class="btn-octicon tooltipped tooltipped-nw hide-sm"
               href="https://desktop.github.com"
               aria-label="Open this file in GitHub Desktop"
               data-ga-click="Repository, open with desktop, type:windows">
                <svg class="octicon octicon-device-desktop" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"/></svg>
            </a>

          <button type="button" class="btn-octicon disabled tooltipped tooltipped-nw"
            aria-label="You must be signed in to make or propose changes">
            <svg class="octicon octicon-pencil" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 011.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>
          </button>
          <button type="button" class="btn-octicon btn-octicon-danger disabled tooltipped tooltipped-nw"
            aria-label="You must be signed in to make or propose changes">
            <svg class="octicon octicon-trashcan" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"/></svg>
          </button>
    </div>
  </div>
</div>




      

  <div itemprop="text" class="Box-body p-0 blob-wrapper data type-javascript ">
      
<table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class=pl-c>// We are modularizing this manually because the current modularize setting in Emscripten has some issues:</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line"><span class=pl-c>// https://github.com/kripken/emscripten/issues/5820</span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line"><span class=pl-c>// In addition, When you use emcc&#39;s modularization, it still expects to export a global object called `Module`,</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line"><span class=pl-c>// which is able to be used/called before the WASM is loaded.</span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line"><span class=pl-c>// The modularization below exports a promise that loads and resolves to the actual sql.js module.</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line"><span class=pl-c>// That way, this module can&#39;t be used before the WASM is finished loading.</span></td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line"><span class=pl-c>// We are going to define a function that a user will call to start loading initializing our Sql.js library</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line"><span class=pl-c>// However, that function might be called multiple times, and on subsequent calls, we don&#39;t actually want it to instantiate a new instance of the Module</span></td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class=pl-c>// Instead, we want to return the previously loaded module</span></td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class=pl-c>// TODO: Make this not declare a global if used in the browser</span></td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line"><span class=pl-k>var</span> <span class=pl-s1>initSqlJsPromise</span> <span class=pl-c1>=</span> undefined<span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line"><span class=pl-k>var</span> <span class=pl-en>initSqlJs</span> <span class=pl-c1>=</span> <span class=pl-k>function</span> <span class=pl-kos>(</span><span class=pl-s1>moduleConfig</span><span class=pl-kos>)</span> <span class=pl-kos>{</span></td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line">    <span class=pl-k>if</span> <span class=pl-kos>(</span><span class=pl-s1>initSqlJsPromise</span><span class=pl-kos>)</span><span class=pl-kos>{</span></td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line">      <span class=pl-k>return</span> <span class=pl-s1>initSqlJsPromise</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line">    <span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line">    <span class=pl-c>// If we&#39;re here, we&#39;ve never called this function before</span></td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line">    <span class=pl-s1>initSqlJsPromise</span> <span class=pl-c1>=</span> <span class=pl-k>new</span> <span class=pl-v>Promise</span><span class=pl-kos>(</span><span class=pl-kos>(</span><span class=pl-s1>resolveModule</span><span class=pl-kos>,</span> <span class=pl-s1>reject</span><span class=pl-kos>)</span> <span class=pl-c1>=&gt;</span> <span class=pl-kos>{</span></td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// We are modularizing this manually because the current modularize setting in Emscripten has some issues:</span></td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// https://github.com/kripken/emscripten/issues/5820</span></td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// The way to affect the loading of emcc compiled modules is to create a variable called `Module` and add</span></td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// properties to it, like `preRun`, `postRun`, etc</span></td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// We are using that to get notified when the WASM has finished loading.</span></td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// Only then will we return our promise</span></td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// If they passed in a moduleConfig object, use that</span></td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// Otherwise, initialize Module to the empty object</span></td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line">        <span class=pl-k>var</span> <span class=pl-v>Module</span> <span class=pl-c1>=</span> <span class=pl-k>typeof</span> <span class=pl-s1>moduleConfig</span> !== <span class=pl-s>&#39;undefined&#39;</span> ? <span class=pl-s1>moduleConfig</span> : <span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// EMCC only allows for a single onAbort function (not an array of functions)</span></td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// So if the user defined their own onAbort function, we remember it and call it</span></td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line">        <span class=pl-k>var</span> <span class=pl-s1>originalOnAbortFunction</span> <span class=pl-c1>=</span> <span class=pl-v>Module</span><span class=pl-kos>[</span><span class=pl-s>&#39;onAbort&#39;</span><span class=pl-kos>]</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line">        <span class=pl-v>Module</span><span class=pl-kos>[</span><span class=pl-s>&#39;onAbort&#39;</span><span class=pl-kos>]</span> <span class=pl-c1>=</span> <span class=pl-k>function</span> <span class=pl-kos>(</span><span class=pl-s1>errorThatCausedAbort</span><span class=pl-kos>)</span> <span class=pl-kos>{</span></td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line">            <span class=pl-s1>reject</span><span class=pl-kos>(</span><span class=pl-k>new</span> <span class=pl-v>Error</span><span class=pl-kos>(</span><span class=pl-s1>errorThatCausedAbort</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line">            <span class=pl-k>if</span> <span class=pl-kos>(</span><span class=pl-s1>originalOnAbortFunction</span><span class=pl-kos>)</span><span class=pl-kos>{</span></td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line">              <span class=pl-s1>originalOnAbortFunction</span><span class=pl-kos>(</span><span class=pl-s1>errorThatCausedAbort</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line">            <span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line">        <span class=pl-kos>}</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line">        <span class=pl-v>Module</span><span class=pl-kos>[</span><span class=pl-s>&#39;postRun&#39;</span><span class=pl-kos>]</span> <span class=pl-c1>=</span> <span class=pl-v>Module</span><span class=pl-kos>[</span><span class=pl-s>&#39;postRun&#39;</span><span class=pl-kos>]</span> <span class=pl-c1>||</span> <span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line">        <span class=pl-v>Module</span><span class=pl-kos>[</span><span class=pl-s>&#39;postRun&#39;</span><span class=pl-kos>]</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-k>function</span> <span class=pl-kos>(</span><span class=pl-kos>)</span> <span class=pl-kos>{</span></td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line">            <span class=pl-c>// When Emscripted calls postRun, this promise resolves with the built Module</span></td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line">            <span class=pl-s1>resolveModule</span><span class=pl-kos>(</span><span class=pl-v>Module</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line">        <span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// There is a section of code in the emcc-generated code below that looks like this:</span></td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// (Note that this is lowercase `module`)</span></td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// if (typeof module !== &#39;undefined&#39;) {</span></td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>//     module[&#39;exports&#39;] = Module;</span></td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// }</span></td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// When that runs, it&#39;s going to overwrite our own modularization export efforts in shell-post.js!</span></td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// The only way to tell emcc not to emit it is to pass the MODULARIZE=1 or MODULARIZE_INSTANCE=1 flags,</span></td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// but that carries with it additional unnecessary baggage/bugs we don&#39;t want either.</span></td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// So, we have three options:</span></td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// 1) We undefine `module`</span></td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// 2) We remember what `module[&#39;exports&#39;]` was at the beginning of this function and we restore it later</span></td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// 3) We write a script to remove those lines of code as part of the Make process.</span></td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>//</span></td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// Since those are the only lines of code that care about module, we will undefine it. It&#39;s the most straightforward</span></td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// of the options, and has the side effect of reducing emcc&#39;s efforts to modify the module if its output were to change in the future.</span></td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// That&#39;s a nice side effect since we&#39;re handling the modularization efforts ourselves</span></td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line">        <span class=pl-smi>module</span> <span class=pl-c1>=</span> undefined<span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line">        </td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// The emcc-generated code and shell-post.js code goes below,</span></td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// meaning that all of it runs inside of this promise. If anything throws an exception, our promise will abort</span></td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line"><span class=pl-k>var</span> <span class=pl-s1>f</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-s1>f</span><span class=pl-c1>=</span><span class=pl-k>typeof</span> <span class=pl-v>Module</span> !== <span class=pl-s>&#39;undefined&#39;</span> ? <span class=pl-v>Module</span> : <span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line"><span class=pl-k>var</span> <span class=pl-s1>ua</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-en>h</span><span class=pl-kos>(</span><span class=pl-c1>4</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>function</span> <span class=pl-s1>a</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>qb</span><span class=pl-c1>=</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>Hb</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>}</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>bind</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-kos>)</span><span class=pl-k>throw</span><span class=pl-s>&quot;Statement closed&quot;</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>reset</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-v>Array</span><span class=pl-kos>.</span><span class=pl-en>isArray</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span>?<span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>cc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span>:<span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>dc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>step</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-kos>)</span><span class=pl-k>throw</span><span class=pl-s>&quot;Statement closed&quot;</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>qb</span><span class=pl-c1>=</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-k>switch</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-en>ec</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>case</span> <span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Zb</span>:<span class=pl-k>return</span>!<span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>DONE</span>:<span class=pl-k>return</span>!<span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-k>default</span>:<span class=pl-k>return</span> <span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-kos>.</span><span class=pl-en>handleError</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>kc</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span>null<span class=pl-c1>==</span><span class=pl-s1>a</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>qb</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-en>fc</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>lc</span><span class=pl-c1>=</span></td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span>null<span class=pl-c1>==</span><span class=pl-s1>a</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>qb</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-en>hc</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>getBlob</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-kos>;</span>null<span class=pl-c1>==</span><span class=pl-s1>a</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>qb</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-en>ic</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-en>jc</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Uint8Array</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-c1>0</span>&lt;=<span class=pl-s1>c</span>?<span class=pl-s1>b</span><span class=pl-c1>&lt;</span><span class=pl-s1>c</span>:<span class=pl-s1>b</span><span class=pl-c1>&gt;</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-c1>0</span>&lt;=<span class=pl-s1>c</span>?<span class=pl-c1>++</span><span class=pl-s1>b</span>:<span class=pl-c1>--</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-s1>e</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>l</span><span class=pl-kos>[</span><span class=pl-s1>d</span><span class=pl-c1>+</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>e</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>get</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>;</span>null!=<span class=pl-s1>a</span><span class=pl-c1>&amp;&amp;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>bind</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>step</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-en>rb</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-c1>0</span>&lt;=<span class=pl-s1>d</span>?<span class=pl-s1>b</span><span class=pl-c1>&lt;</span><span class=pl-s1>d</span>:<span class=pl-s1>b</span><span class=pl-c1>&gt;</span><span class=pl-s1>d</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-c1>0</span>&lt;=<span class=pl-s1>d</span>?<span class=pl-c1>++</span><span class=pl-s1>b</span>:<span class=pl-c1>--</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-k>switch</span><span class=pl-kos>(</span><span class=pl-en>kc</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>case</span> <span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Yb</span>:<span class=pl-k>case</span> <span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>FLOAT</span>:<span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>kc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>$b</span>:<span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>lc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Xb</span>:<span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>getBlob</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line"><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-k>default</span>:<span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span>null<span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-s1>e</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>getColumnNames</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-en>rb</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-c1>0</span>&lt;=<span class=pl-s1>b</span>?<span class=pl-s1>a</span><span class=pl-c1>&lt;</span><span class=pl-s1>b</span>:<span class=pl-s1>a</span><span class=pl-c1>&gt;</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-c1>0</span>&lt;=<span class=pl-s1>b</span>?<span class=pl-c1>++</span><span class=pl-s1>a</span>:<span class=pl-c1>--</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-en>lc</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>c</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>getAsObject</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>get</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>getColumnNames</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>&lt;</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-c1>++</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>wa</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-kos>[</span><span class=pl-s1>wa</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-s1>g</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>run</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span>null!=<span class=pl-s1>a</span><span class=pl-c1>&amp;&amp;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>bind</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>step</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>reset</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>hc</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-kos>;</span>null<span class=pl-c1>==</span><span class=pl-s1>b</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>qb</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-en>aa</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>Hb</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-c1>=</span></td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line"><span class=pl-en>ba</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-kos>.</span><span class=pl-en>handleError</span><span class=pl-kos>(</span><span class=pl-v>J</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>bc</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-kos>;</span>null<span class=pl-c1>==</span><span class=pl-s1>b</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>qb</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>Hb</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-en>ba</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-kos>.</span><span class=pl-en>handleError</span><span class=pl-kos>(</span><span class=pl-v>S</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>fc</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span>null<span class=pl-c1>==</span><span class=pl-s1>b</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>qb</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-kos>.</span><span class=pl-en>handleError</span><span class=pl-kos>(</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>a</span>|<span class=pl-c1>0</span><span class=pl-kos>)</span>?<span class=pl-s1>mc</span>:<span class=pl-s1>nc</span><span class=pl-kos>)</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>ec</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span>null<span class=pl-c1>==</span><span class=pl-s1>a</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>qb</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>S</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>Ob</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span>null<span class=pl-c1>==</span><span class=pl-s1>b</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>qb</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>switch</span><span class=pl-kos>(</span><span class=pl-k>typeof</span> <span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>case</span> <span class=pl-s>&quot;string&quot;</span>:<span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>hc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-s>&quot;number&quot;</span>:<span class=pl-k>case</span> <span class=pl-s>&quot;boolean&quot;</span>:<span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>fc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>+</span></td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line"><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-s>&quot;object&quot;</span>:<span class=pl-k>if</span><span class=pl-kos>(</span>null<span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>ec</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>else</span> <span class=pl-k>if</span><span class=pl-kos>(</span>null!=<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>)</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>bc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>else</span> <span class=pl-k>throw</span><span class=pl-s>&quot;Wrong API use : tried to bind a value of an unknown type (&quot;</span><span class=pl-c1>+</span><span class=pl-s1>a</span><span class=pl-c1>+</span><span class=pl-s>&quot;).&quot;</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>dc</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>b</span> <span class=pl-k>in</span> <span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-en>oc</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-c1>0</span>!==<span class=pl-s1>d</span><span class=pl-c1>&amp;&amp;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>Ob</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>return</span>!<span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>cc</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>&lt;</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-c1>++</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-s1>d</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>Ob</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>+</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>return</span>!<span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>reset</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>freemem</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-en>pc</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-kos>)</span><span class=pl-c1>===</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Bb</span><span class=pl-c1>&amp;&amp;</span><span class=pl-en>qc</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-kos>)</span><span class=pl-c1>===</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Bb</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>freemem</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span></td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line"><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>Hb</span><span class=pl-kos>.</span><span class=pl-en>pop</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>)</span><span class=pl-en>ca</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> null<span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>free</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>freemem</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-en>rc</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-kos>)</span><span class=pl-c1>===</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Bb</span><span class=pl-kos>;</span><span class=pl-k>delete</span> <span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-kos>.</span><span class=pl-c1>Fb</span><span class=pl-kos>[</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>jb</span><span class=pl-c1>=</span><span class=pl-s1>ja</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>function</span> <span class=pl-s1>a</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>filename</span><span class=pl-c1>=</span><span class=pl-s>&quot;dbfile_&quot;</span><span class=pl-c1>+</span><span class=pl-kos>(</span><span class=pl-c1>4294967295</span>*<span class=pl-v>Math</span><span class=pl-kos>.</span><span class=pl-en>random</span><span class=pl-kos>(</span><span class=pl-kos>)</span>&gt;&gt;&gt;<span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>null!=<span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>filename</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>c</span>?<span class=pl-en>n</span><span class=pl-kos>(</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span>:<span class=pl-s>&quot;/&quot;</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-en>da</span><span class=pl-kos>(</span>!<span class=pl-c1>0</span><span class=pl-kos>,</span>!<span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-en>ea</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-kos>(</span><span class=pl-k>void</span> <span class=pl-c1>0</span>!==<span class=pl-s1>c</span>?<span class=pl-s1>c</span>:<span class=pl-c1>438</span><span class=pl-kos>)</span>&amp;<span class=pl-c1>4095</span>|<span class=pl-c1>32768</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s>&quot;string&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-v>Array</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>m</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>;</span><span class=pl-s1>k</span><span class=pl-c1>&lt;</span><span class=pl-s1>m</span><span class=pl-kos>;</span><span class=pl-c1>++</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-s1>e</span><span class=pl-kos>[</span><span class=pl-s1>k</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>charCodeAt</span><span class=pl-kos>(</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-kos>}</span><span class=pl-en>fa</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>c</span>|<span class=pl-c1>146</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-en>p</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s>&quot;w&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>ha</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-k>void</span> <span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line"><span class=pl-en>ia</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>fa</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>handleError</span><span class=pl-kos>(</span><span class=pl-en>g</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>filename</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-c1>=</span><span class=pl-en>q</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s>&quot;i32&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>sc</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>Fb</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>rb</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>run</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-kos>)</span><span class=pl-k>throw</span><span class=pl-s>&quot;Database closed&quot;</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>prepare</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>step</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>finally</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>free</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-k>else</span> <span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>handleError</span><span class=pl-kos>(</span><span class=pl-en>m</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-smi>this</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>exec</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-kos>)</span><span class=pl-k>throw</span><span class=pl-s>&quot;Database closed&quot;</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-en>ka</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-en>la</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-c1>+</span><span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-en>h</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>t</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>l</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>m</span><span class=pl-c1>=</span><span class=pl-s1>k</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>v</span><span class=pl-c1>=</span><span class=pl-en>h</span><span class=pl-kos>(</span><span class=pl-c1>4</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-en>q</span><span class=pl-kos>(</span><span class=pl-s1>m</span><span class=pl-kos>,</span><span class=pl-s>&quot;i8&quot;</span><span class=pl-kos>)</span>!==<span class=pl-s1>ja</span><span class=pl-kos>;</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-en>ma</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>ma</span><span class=pl-kos>(</span><span class=pl-s1>v</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>handleError</span><span class=pl-kos>(</span><span class=pl-v>K</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-kos>,</span><span class=pl-s1>m</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>v</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>wa</span><span class=pl-c1>=</span></td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line"><span class=pl-en>q</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s>&quot;i32&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>m</span><span class=pl-c1>=</span><span class=pl-en>q</span><span class=pl-kos>(</span><span class=pl-s1>v</span><span class=pl-kos>,</span><span class=pl-s>&quot;i32&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>wa</span>!==<span class=pl-s1>ja</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>r</span><span class=pl-c1>=</span>null<span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-v>J</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-s1>d</span><span class=pl-kos>(</span><span class=pl-s1>wa</span><span class=pl-kos>,</span><span class=pl-smi>this</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-kos>;</span><span class=pl-v>J</span><span class=pl-kos>.</span><span class=pl-en>step</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>)</span>null<span class=pl-c1>===</span><span class=pl-s1>r</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>r</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-c1>columns</span>:<span class=pl-v>J</span><span class=pl-kos>.</span><span class=pl-en>getColumnNames</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>values</span>:<span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-s1>r</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>r</span><span class=pl-kos>.</span><span class=pl-c1>values</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-v>J</span><span class=pl-kos>.</span><span class=pl-en>get</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>finally</span><span class=pl-kos>{</span><span class=pl-v>J</span><span class=pl-kos>.</span><span class=pl-en>free</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-s1>c</span><span class=pl-kos>}</span><span class=pl-k>finally</span><span class=pl-kos>{</span><span class=pl-en>na</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>each</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s>&quot;function&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>b</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-k>void</span> <span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>prepare</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>step</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>)</span><span class=pl-s1>c</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>getAsObject</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>finally</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>free</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s>&quot;function&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-s1>d</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>prepare</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-en>ma</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>handleError</span><span class=pl-kos>(</span><span class=pl-en>v</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>ja</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-en>q</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s>&quot;i32&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>===</span></td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>ja</span><span class=pl-kos>)</span><span class=pl-k>throw</span><span class=pl-s>&quot;Nothing to prepare&quot;</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-s1>d</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-smi>this</span><span class=pl-kos>)</span><span class=pl-kos>;</span>null!=<span class=pl-s1>c</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-en>bind</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>Fb</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>[</span><span class=pl-s>&quot;export&quot;</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>Fb</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>e</span> <span class=pl-k>in</span> <span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>[</span><span class=pl-s1>e</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-en>free</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>rb</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>e</span> <span class=pl-k>in</span> <span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>[</span><span class=pl-s1>e</span><span class=pl-kos>]</span><span class=pl-kos>,</span><span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>-</span><span class=pl-s1>oa</span><span class=pl-kos>]</span><span class=pl-c1>=</span>null<span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>rb</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>handleError</span><span class=pl-kos>(</span><span class=pl-en>k</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>filename</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-c1>encoding</span>:<span class=pl-s>&quot;binary&quot;</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>flags</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>flags</span><span class=pl-c1>||</span><span class=pl-s>&quot;r&quot;</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>encoding</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>encoding</span><span class=pl-c1>||</span><span class=pl-s>&quot;binary&quot;</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s>&quot;utf8&quot;</span>!==<span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>encoding</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s>&quot;binary&quot;</span>!==<span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>encoding</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-v>Error</span><span class=pl-kos>(</span><span class=pl-s>&#39;Invalid encoding type &quot;&#39;</span><span class=pl-c1>+</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>encoding</span><span class=pl-c1>+</span><span class=pl-s>&#39;&quot;&#39;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-en>p</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>flags</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-en>pa</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-c1>size</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>m</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Uint8Array</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line"><span class=pl-en>qa</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>m</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s>&quot;utf8&quot;</span><span class=pl-c1>===</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>encoding</span>?<span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-en>ra</span><span class=pl-kos>(</span><span class=pl-s1>m</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>)</span>:<span class=pl-s>&quot;binary&quot;</span><span class=pl-c1>===</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>encoding</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>m</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>ia</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>handleError</span><span class=pl-kos>(</span><span class=pl-en>g</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>filename</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-c1>=</span><span class=pl-en>q</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s>&quot;i32&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>close</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>Fb</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>a</span> <span class=pl-k>in</span> <span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>free</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>rb</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>a</span> <span class=pl-k>in</span> <span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>,</span><span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-c1>-</span><span class=pl-s1>oa</span><span class=pl-kos>]</span><span class=pl-c1>=</span>null<span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>rb</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>handleError</span><span class=pl-kos>(</span><span class=pl-en>k</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>sa</span><span class=pl-kos>(</span><span class=pl-s>&quot;/&quot;</span><span class=pl-c1>+</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>filename</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-c1>=</span>null<span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>handleError</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>===</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Bb</span><span class=pl-kos>)</span><span class=pl-k>return</span> null<span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-en>tc</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>throw</span> <span class=pl-v>Error</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>getRowsModified</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-en>r</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-en>create_function</span><span class=pl-c1>=</span></td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span> <span class=pl-k>in</span> <span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>rb</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>rb</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-c1>-</span><span class=pl-s1>oa</span><span class=pl-kos>]</span><span class=pl-c1>=</span>null<span class=pl-kos>,</span><span class=pl-k>delete</span> <span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>rb</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-en>ta</span><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-c1>0</span>&lt;=<span class=pl-s1>c</span>?<span class=pl-s1>g</span><span class=pl-c1>&lt;</span><span class=pl-s1>c</span>:<span class=pl-s1>g</span><span class=pl-c1>&gt;</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-c1>0</span>&lt;=<span class=pl-s1>c</span>?<span class=pl-c1>++</span><span class=pl-s1>g</span>:<span class=pl-c1>--</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>m</span><span class=pl-c1>=</span><span class=pl-en>q</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-c1>+</span><span class=pl-c1>4</span>*<span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s>&quot;i32&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>v</span><span class=pl-c1>=</span><span class=pl-en>vc</span><span class=pl-kos>(</span><span class=pl-s1>m</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>switch</span><span class=pl-kos>(</span>!<span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>case</span> <span class=pl-c1>1</span>!==<span class=pl-s1>v</span>:<span class=pl-k>return</span> <span class=pl-s1>wb</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>2</span>!==<span class=pl-s1>v</span>:<span class=pl-k>return</span> <span class=pl-s1>wb</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>3</span>!==<span class=pl-s1>v</span>:<span class=pl-k>return</span> <span class=pl-s1>wc</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>4</span>!==<span class=pl-s1>v</span>:<span class=pl-k>return</span> <span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-en>yc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-en>zc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Uint8Array</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-c1>0</span>&lt;=<span class=pl-s1>d</span>?<span class=pl-s1>c</span><span class=pl-c1>&lt;</span><span class=pl-s1>d</span>:<span class=pl-s1>c</span><span class=pl-c1>&gt;</span><span class=pl-s1>d</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-c1>0</span>&lt;=<span class=pl-s1>d</span>?<span class=pl-c1>++</span><span class=pl-s1>c</span>:<span class=pl-c1>--</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>l</span><span class=pl-kos>[</span><span class=pl-s1>e</span><span class=pl-c1>+</span><span class=pl-s1>b</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-k>default</span>:<span class=pl-k>return</span> <span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> null<span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-kos>(</span><span class=pl-s1>m</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>k</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>r</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>xc</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>r</span><span class=pl-c1>=</span></td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>xc</span><span class=pl-kos>;</span><span class=pl-en>xb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>r</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span><span class=pl-kos>}</span><span class=pl-k>switch</span><span class=pl-kos>(</span><span class=pl-k>typeof</span> <span class=pl-s1>r</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>case</span> <span class=pl-s>&quot;boolean&quot;</span>:<span class=pl-v>Ac</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>r</span>?<span class=pl-c1>1</span>:<span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-s>&quot;number&quot;</span>:<span class=pl-v>Bc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>r</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-s>&quot;string&quot;</span>:<span class=pl-v>Cc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>r</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-s>&quot;object&quot;</span>:null<span class=pl-c1>===</span><span class=pl-s1>r</span>?<span class=pl-en>yb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span>:null!=<span class=pl-s1>r</span><span class=pl-kos>.</span><span class=pl-c1>length</span>?<span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-en>ba</span><span class=pl-kos>(</span><span class=pl-s1>r</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-v>Dc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>r</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-en>ca</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>)</span>:<span class=pl-en>xb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s>&quot;Wrong API use : tried to return a value of an unknown type (&quot;</span><span class=pl-c1>+</span><span class=pl-s1>r</span><span class=pl-c1>+</span><span class=pl-s>&quot;).&quot;</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-k>default</span>:<span class=pl-en>yb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>rb</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>handleError</span><span class=pl-kos>(</span><span class=pl-v>Ec</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>ac</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-smi>this</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_open&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;string&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_close_v2&quot;</span><span class=pl-kos>,</span></td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line"><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>m</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_exec&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;string&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_free&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>r</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_changes&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>v</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_prepare_v2&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;string&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-v>K</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_prepare_v2&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-v>J</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_bind_text&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-v>S</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_bind_blob&quot;</span><span class=pl-kos>,</span></td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line"><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>nc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_bind_double&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>mc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_bind_int&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>oc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_bind_parameter_index&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;string&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>ec</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_step&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>tc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_errmsg&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;string&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>rb</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_data_count&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>fc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_column_double&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span></td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line"><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>hc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_column_text&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;string&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>jc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_column_blob&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>ic</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_column_bytes&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>kc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_column_type&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>lc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_column_name&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;string&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>qc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_reset&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>pc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_clear_bindings&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>rc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_finalize&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span></td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line"><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-v>Ec</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_create_function_v2&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number string number number number number number number number&quot;</span><span class=pl-kos>.</span><span class=pl-en>split</span><span class=pl-kos>(</span><span class=pl-s>&quot; &quot;</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>vc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_value_type&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>yc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_value_bytes&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>wc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_value_text&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;string&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_value_int&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>zc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_value_blob&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>wb</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_value_double&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-v>Bc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_result_double&quot;</span><span class=pl-kos>,</span></td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line"><span class=pl-s>&quot;&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>yb</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_result_null&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-v>Cc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_result_text&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;string&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-v>Dc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_result_blob&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-v>Ac</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_result_int&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_result_int64&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>xb</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;sqlite3_result_error&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;string&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>sc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-kos>(</span><span class=pl-s>&quot;RegisterExtensionFunctions&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s>&quot;number&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>SQL</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-c1>Database</span>:<span class=pl-s1>e</span><span class=pl-kos>}</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line"><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>a</span> <span class=pl-k>in</span> <span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>SQL</span><span class=pl-kos>)</span><span class=pl-s1>f</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>SQL</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>ja</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Bb</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Ac</span><span class=pl-c1>=</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Dc</span><span class=pl-c1>=</span><span class=pl-c1>2</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Nc</span><span class=pl-c1>=</span><span class=pl-c1>3</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>uc</span><span class=pl-c1>=</span><span class=pl-c1>4</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>wc</span><span class=pl-c1>=</span><span class=pl-c1>5</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Gc</span><span class=pl-c1>=</span><span class=pl-c1>6</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>NOMEM</span><span class=pl-c1>=</span><span class=pl-c1>7</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Qc</span><span class=pl-c1>=</span><span class=pl-c1>8</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Ec</span><span class=pl-c1>=</span><span class=pl-c1>9</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Fc</span><span class=pl-c1>=</span><span class=pl-c1>10</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>zc</span><span class=pl-c1>=</span><span class=pl-c1>11</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>NOTFOUND</span><span class=pl-c1>=</span><span class=pl-c1>12</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Cc</span><span class=pl-c1>=</span><span class=pl-c1>13</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>xc</span><span class=pl-c1>=</span><span class=pl-c1>14</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Oc</span><span class=pl-c1>=</span><span class=pl-c1>15</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>EMPTY</span><span class=pl-c1>=</span><span class=pl-c1>16</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Rc</span><span class=pl-c1>=</span><span class=pl-c1>17</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Sc</span><span class=pl-c1>=</span><span class=pl-c1>18</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>yc</span><span class=pl-c1>=</span><span class=pl-c1>19</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Hc</span><span class=pl-c1>=</span><span class=pl-c1>20</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Ic</span><span class=pl-c1>=</span><span class=pl-c1>21</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Jc</span><span class=pl-c1>=</span><span class=pl-c1>22</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>vc</span><span class=pl-c1>=</span><span class=pl-c1>23</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Bc</span><span class=pl-c1>=</span><span class=pl-c1>24</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Pc</span><span class=pl-c1>=</span><span class=pl-c1>25</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Kc</span><span class=pl-c1>=</span><span class=pl-c1>26</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Lc</span><span class=pl-c1>=</span><span class=pl-c1>27</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Tc</span><span class=pl-c1>=</span><span class=pl-c1>28</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Zb</span><span class=pl-c1>=</span><span class=pl-c1>100</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>DONE</span><span class=pl-c1>=</span><span class=pl-c1>101</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Yb</span><span class=pl-c1>=</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>FLOAT</span><span class=pl-c1>=</span><span class=pl-c1>2</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>$b</span><span class=pl-c1>=</span><span class=pl-c1>3</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Xb</span><span class=pl-c1>=</span><span class=pl-c1>4</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Mc</span><span class=pl-c1>=</span><span class=pl-c1>5</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>ac</span><span class=pl-c1>=</span><span class=pl-c1>1</span><span class=pl-kos>}</span><span class=pl-kos>.</span><span class=pl-en>bind</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>onRuntimeInitialized</span><span class=pl-c1>=</span><span class=pl-s1>ua</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>va</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s1>w</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>w</span> <span class=pl-k>in</span> <span class=pl-s1>f</span><span class=pl-kos>)</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>hasOwnProperty</span><span class=pl-kos>(</span><span class=pl-s1>w</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>va</span><span class=pl-kos>[</span><span class=pl-s1>w</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>[</span><span class=pl-s1>w</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>xa</span><span class=pl-c1>=</span><span class=pl-s>&quot;./this.program&quot;</span><span class=pl-kos>,</span><span class=pl-s1>ya</span><span class=pl-c1>=</span>!<span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-s1>x</span><span class=pl-c1>=</span>!<span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-s1>za</span><span class=pl-c1>=</span>!<span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-v>Aa</span><span class=pl-c1>=</span>!<span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-v>Ba</span><span class=pl-c1>=</span>!<span class=pl-c1>1</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>ya</span><span class=pl-c1>=</span><span class=pl-s>&quot;object&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-smi>window</span><span class=pl-kos>;</span><span class=pl-s1>x</span><span class=pl-c1>=</span><span class=pl-s>&quot;function&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>importScripts</span><span class=pl-kos>;</span><span class=pl-s1>za</span><span class=pl-c1>=</span><span class=pl-kos>(</span><span class=pl-v>Aa</span><span class=pl-c1>=</span><span class=pl-s>&quot;object&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>process</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s>&quot;object&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>process</span><span class=pl-kos>.</span><span class=pl-c1>versions</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s>&quot;string&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>process</span><span class=pl-kos>.</span><span class=pl-c1>versions</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span>!<span class=pl-s1>ya</span><span class=pl-c1>&amp;&amp;</span>!<span class=pl-s1>x</span><span class=pl-kos>;</span><span class=pl-v>Ba</span><span class=pl-c1>=</span>!<span class=pl-s1>ya</span><span class=pl-c1>&amp;&amp;</span>!<span class=pl-s1>za</span><span class=pl-c1>&amp;&amp;</span>!<span class=pl-s1>x</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>y</span><span class=pl-c1>=</span><span class=pl-s>&quot;&quot;</span><span class=pl-kos>,</span><span class=pl-v>Ca</span><span class=pl-kos>,</span><span class=pl-v>Da</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code blob-code-inner js-file-line"><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>za</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>y</span><span class=pl-c1>=</span><span class=pl-s1>__dirname</span><span class=pl-c1>+</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-v>Ea</span><span class=pl-kos>,</span><span class=pl-v>Fa</span><span class=pl-kos>;</span><span class=pl-v>Ca</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>Ea</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-v>Ea</span><span class=pl-c1>=</span><span class=pl-en>require</span><span class=pl-kos>(</span><span class=pl-s>&quot;fs&quot;</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Fa</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-v>Fa</span><span class=pl-c1>=</span><span class=pl-en>require</span><span class=pl-kos>(</span><span class=pl-s>&quot;path&quot;</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>Fa</span><span class=pl-kos>.</span><span class=pl-en>normalize</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>Ea</span><span class=pl-kos>.</span><span class=pl-en>readFileSync</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>b</span>?<span class=pl-s1>a</span>:<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>toString</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-v>Da</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>Ca</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span>!<span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>buffer</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Uint8Array</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>assert</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>buffer</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-c1>1</span><span class=pl-c1>&lt;</span><span class=pl-s1>process</span><span class=pl-kos>.</span><span class=pl-c1>argv</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>xa</span><span class=pl-c1>=</span><span class=pl-s1>process</span><span class=pl-kos>.</span><span class=pl-c1>argv</span><span class=pl-kos>[</span><span class=pl-c1>1</span><span class=pl-kos>]</span><span class=pl-kos>.</span><span class=pl-en>replace</span><span class=pl-kos>(</span><span class=pl-pds>/<span class=pl-cce>\\</span>/g</span><span class=pl-kos>,</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>process</span><span class=pl-kos>.</span><span class=pl-c1>argv</span><span class=pl-kos>.</span><span class=pl-en>slice</span><span class=pl-kos>(</span><span class=pl-c1>2</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-smi>module</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-smi>module</span><span class=pl-kos>.</span><span class=pl-c1>exports</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>process</span><span class=pl-kos>.</span><span class=pl-en>on</span><span class=pl-kos>(</span><span class=pl-s>&quot;unhandledRejection&quot;</span><span class=pl-kos>,</span><span class=pl-s1>z</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>inspect</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;[Emscripten Module object]&quot;</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-k>else</span> <span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-v>Ba</span><span class=pl-kos>)</span><span class=pl-s>&quot;undefined&quot;</span>!=<span class=pl-k>typeof</span> <span class=pl-s1>read</span><span class=pl-c1>&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code blob-code-inner js-file-line"><span class=pl-kos>(</span><span class=pl-v>Ca</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-en>read</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-v>Da</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s>&quot;function&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>readbuffer</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-k>new</span> <span class=pl-v>Uint8Array</span><span class=pl-kos>(</span><span class=pl-en>readbuffer</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-en>read</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s>&quot;binary&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>assert</span><span class=pl-kos>(</span><span class=pl-s>&quot;object&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-s1>print</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s>&quot;undefined&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-smi>console</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-smi>console</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-smi>console</span><span class=pl-kos>.</span><span class=pl-c1>log</span><span class=pl-c1>=</span><span class=pl-s1>print</span><span class=pl-kos>,</span><span class=pl-smi>console</span><span class=pl-kos>.</span><span class=pl-c1>warn</span><span class=pl-c1>=</span><span class=pl-smi>console</span><span class=pl-kos>.</span><span class=pl-c1>error</span><span class=pl-c1>=</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-s1>printErr</span>?<span class=pl-s1>printErr</span>:<span class=pl-s1>print</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>else</span> <span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>ya</span><span class=pl-c1>||</span><span class=pl-s1>x</span><span class=pl-kos>)</span><span class=pl-s1>x</span>?<span class=pl-s1>y</span><span class=pl-c1>=</span><span class=pl-s1>self</span><span class=pl-kos>.</span><span class=pl-c1>location</span><span class=pl-kos>.</span><span class=pl-c1>href</span>:<span class=pl-smi>document</span><span class=pl-kos>.</span><span class=pl-c1>currentScript</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>y</span><span class=pl-c1>=</span><span class=pl-smi>document</span><span class=pl-kos>.</span><span class=pl-c1>currentScript</span><span class=pl-kos>.</span><span class=pl-c1>src</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>y</span><span class=pl-c1>=</span><span class=pl-c1>0</span>!==<span class=pl-s1>y</span><span class=pl-kos>.</span><span class=pl-en>indexOf</span><span class=pl-kos>(</span><span class=pl-s>&quot;blob:&quot;</span><span class=pl-kos>)</span>?<span class=pl-s1>y</span><span class=pl-kos>.</span><span class=pl-en>substr</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>y</span><span class=pl-kos>.</span><span class=pl-en>lastIndexOf</span><span class=pl-kos>(</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>)</span><span class=pl-c1>+</span><span class=pl-c1>1</span><span class=pl-kos>)</span>:<span class=pl-s>&quot;&quot;</span><span class=pl-kos>,</span><span class=pl-v>Ca</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span></td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code blob-code-inner js-file-line"><span class=pl-k>new</span> <span class=pl-v>XMLHttpRequest</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>open</span><span class=pl-kos>(</span><span class=pl-s>&quot;GET&quot;</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>,</span>!<span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>send</span><span class=pl-kos>(</span>null<span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>responseText</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s1>x</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-v>Da</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>XMLHttpRequest</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>open</span><span class=pl-kos>(</span><span class=pl-s>&quot;GET&quot;</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>,</span>!<span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>responseType</span><span class=pl-c1>=</span><span class=pl-s>&quot;arraybuffer&quot;</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>send</span><span class=pl-kos>(</span>null<span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-k>new</span> <span class=pl-v>Uint8Array</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>response</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-v>Ga</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>print</span><span class=pl-c1>||</span><span class=pl-smi>console</span><span class=pl-kos>.</span><span class=pl-c1>log</span><span class=pl-kos>.</span><span class=pl-en>bind</span><span class=pl-kos>(</span><span class=pl-smi>console</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-v>A</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>printErr</span><span class=pl-c1>||</span><span class=pl-smi>console</span><span class=pl-kos>.</span><span class=pl-c1>warn</span><span class=pl-kos>.</span><span class=pl-en>bind</span><span class=pl-kos>(</span><span class=pl-smi>console</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>w</span> <span class=pl-k>in</span> <span class=pl-s1>va</span><span class=pl-kos>)</span><span class=pl-s1>va</span><span class=pl-kos>.</span><span class=pl-en>hasOwnProperty</span><span class=pl-kos>(</span><span class=pl-s1>w</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>f</span><span class=pl-kos>[</span><span class=pl-s1>w</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>va</span><span class=pl-kos>[</span><span class=pl-s1>w</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>va</span><span class=pl-c1>=</span>null<span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>thisProgram</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>xa</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>thisProgram</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>function</span> <span class=pl-v>Ha</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-v>Ia</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-c1>+</span><span class=pl-s1>a</span><span class=pl-c1>+</span><span class=pl-c1>15</span>&amp;<span class=pl-c1>-</span><span class=pl-c1>16</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>&gt;</span><span class=pl-v>Ja</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-v>Ia</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code blob-code-inner js-file-line"><span class=pl-k>var</span> <span class=pl-v>Ka</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-s>&quot;f64-rem&quot;</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>a</span>%<span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s>&quot;debugger&quot;</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s1>oa</span><span class=pl-c1>=</span><span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-s1>u</span><span class=pl-c1>=</span><span class=pl-v>Array</span><span class=pl-kos>(</span><span class=pl-c1>64</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>function</span> <span class=pl-en>ta</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-c1>64</span><span class=pl-c1>&gt;</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>oa</span><span class=pl-c1>+</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>throw</span><span class=pl-s>&quot;Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.&quot;</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-k>var</span> <span class=pl-v>La</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>wasmBinary</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-v>La</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>wasmBinary</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s>&quot;object&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>WebAssembly</span><span class=pl-c1>&amp;&amp;</span><span class=pl-v>A</span><span class=pl-kos>(</span><span class=pl-s>&quot;no native wasm support detected&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>ma</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s>&quot;i32&quot;</span><span class=pl-kos>;</span><span class=pl-s>&quot;*&quot;</span><span class=pl-c1>===</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>charAt</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s>&quot;i32&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>switch</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>case</span> <span class=pl-s>&quot;i1&quot;</span>:<span class=pl-s1>l</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>0</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-s>&quot;i8&quot;</span>:<span class=pl-s1>l</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>0</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-s>&quot;i16&quot;</span>:<span class=pl-v>Ma</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>1</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-s>&quot;i32&quot;</span>:<span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-s>&quot;i64&quot;</span>:<span class=pl-v>C</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-kos>(</span><span class=pl-v>D</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-c1>1</span>&lt;=<span class=pl-c1>+</span><span class=pl-v>Na</span><span class=pl-kos>(</span><span class=pl-v>D</span><span class=pl-kos>)</span>?<span class=pl-c1>0</span><span class=pl-c1>&lt;</span><span class=pl-v>D</span>?<span class=pl-kos>(</span><span class=pl-v>Oa</span><span class=pl-kos>(</span><span class=pl-c1>+</span><span class=pl-v>Pa</span><span class=pl-kos>(</span><span class=pl-v>D</span>/<span class=pl-c1>4294967296</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>4294967295</span><span class=pl-kos>)</span>|<span class=pl-c1>0</span><span class=pl-kos>)</span>&gt;&gt;&gt;<span class=pl-c1>0</span>:~~<span class=pl-c1>+</span><span class=pl-v>Qa</span><span class=pl-kos>(</span><span class=pl-kos>(</span><span class=pl-v>D</span><span class=pl-c1>-</span><span class=pl-c1>+</span><span class=pl-kos>(</span>~~<span class=pl-v>D</span>&gt;&gt;&gt;<span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>)</span>/<span class=pl-c1>4294967296</span><span class=pl-kos>)</span>&gt;&gt;&gt;<span class=pl-c1>0</span>:<span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-v>C</span><span class=pl-kos>[</span><span class=pl-c1>0</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>+</span><span class=pl-c1>4</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-v>C</span><span class=pl-kos>[</span><span class=pl-c1>1</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-s>&quot;float&quot;</span>:<span class=pl-v>Ra</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-s>&quot;double&quot;</span>:<span class=pl-v>Sa</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>3</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-k>default</span>:<span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s>&quot;invalid type for setValue: &quot;</span><span class=pl-c1>+</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>q</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-c1>||</span><span class=pl-s>&quot;i8&quot;</span><span class=pl-kos>;</span><span class=pl-s>&quot;*&quot;</span><span class=pl-c1>===</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>charAt</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s>&quot;i32&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>switch</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>case</span> <span class=pl-s>&quot;i1&quot;</span>:<span class=pl-k>return</span> <span class=pl-s1>l</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>0</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-s>&quot;i8&quot;</span>:<span class=pl-k>return</span> <span class=pl-s1>l</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>0</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-s>&quot;i16&quot;</span>:<span class=pl-k>return</span> <span class=pl-v>Ma</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>1</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-s>&quot;i32&quot;</span>:<span class=pl-k>return</span> <span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-s>&quot;i64&quot;</span>:<span class=pl-k>return</span> <span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-s>&quot;float&quot;</span>:<span class=pl-k>return</span> <span class=pl-v>Ra</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-s>&quot;double&quot;</span>:<span class=pl-k>return</span> <span class=pl-v>Sa</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>3</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>default</span>:<span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s>&quot;invalid type for getValue: &quot;</span><span class=pl-c1>+</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>return</span> null<span class=pl-kos>}</span><span class=pl-k>var</span> <span class=pl-v>E</span><span class=pl-kos>,</span><span class=pl-v>Ta</span><span class=pl-c1>=</span>!<span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-k>function</span> <span class=pl-en>assert</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s>&quot;Assertion failed: &quot;</span><span class=pl-c1>+</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-v>Ua</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>[</span><span class=pl-s>&quot;_&quot;</span><span class=pl-c1>+</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-en>assert</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s>&quot;Cannot call unknown function &quot;</span><span class=pl-c1>+</span><span class=pl-s1>a</span><span class=pl-c1>+</span><span class=pl-s>&quot;, make sure it is exported&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-v>Va</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-en>string</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>null!==<span class=pl-s1>a</span><span class=pl-c1>&amp;&amp;</span><span class=pl-k>void</span> <span class=pl-c1>0</span>!==<span class=pl-s1>a</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>0</span>!==<span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>&lt;&lt;</span><span class=pl-c1>2</span><span class=pl-kos>)</span><span class=pl-c1>+</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-en>h</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>t</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-v>F</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>array</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-en>h</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>l</span><span class=pl-kos>.</span><span class=pl-en>set</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-v>Ua</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>m</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>m</span><span class=pl-c1>&lt;</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>;</span><span class=pl-s1>m</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>r</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-kos>[</span><span class=pl-s1>m</span><span class=pl-kos>]</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>r</span>?<span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-en>ka</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-kos>[</span><span class=pl-s1>m</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>r</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>[</span><span class=pl-s1>m</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>)</span>:<span class=pl-s1>k</span><span class=pl-kos>[</span><span class=pl-s1>m</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>[</span><span class=pl-s1>m</span><span class=pl-kos>]</span><span class=pl-kos>}</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;string&quot;</span><span class=pl-c1>===</span><span class=pl-s1>b</span>?<span class=pl-v>G</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span>:<span class=pl-s>&quot;boolean&quot;</span><span class=pl-c1>===</span><span class=pl-s1>b</span>?!!<span class=pl-s1>a</span>:<span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-c1>0</span>!==<span class=pl-s1>a</span><span class=pl-c1>&amp;&amp;</span><span class=pl-en>na</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>c</span><span class=pl-kos>}</span><span class=pl-k>var</span> <span class=pl-v>Wa</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-v>Xa</span><span class=pl-c1>=</span><span class=pl-c1>3</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>ba</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>Wa</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s>&quot;number&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span>!<span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-k>else</span> <span class=pl-s1>c</span><span class=pl-c1>=</span>!<span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-c1>==</span><span class=pl-v>Xa</span>?<span class=pl-s1>e</span>:<span class=pl-kos>[</span><span class=pl-v>Ya</span><span class=pl-kos>,</span><span class=pl-s1>h</span><span class=pl-kos>,</span><span class=pl-v>Ha</span><span class=pl-kos>]</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-v>Math</span><span class=pl-kos>.</span><span class=pl-en>max</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-en>assert</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-c1>==</span><span class=pl-kos>(</span><span class=pl-s1>b</span>&amp;<span class=pl-c1>3</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-c1>+</span><span class=pl-kos>(</span><span class=pl-s1>d</span>&amp;<span class=pl-c1>-</span><span class=pl-c1>4</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-c1>+=</span><span class=pl-c1>4</span><span class=pl-kos>)</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>e</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-c1>+</span><span class=pl-s1>d</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-kos>)</span><span class=pl-s1>l</span><span class=pl-kos>[</span><span class=pl-s1>e</span><span class=pl-c1>++</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>0</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>subarray</span><span class=pl-c1>||</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>slice</span>?<span class=pl-v>F</span><span class=pl-kos>.</span><span class=pl-en>set</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span>:<span class=pl-v>F</span><span class=pl-kos>.</span><span class=pl-en>set</span><span class=pl-kos>(</span><span class=pl-k>new</span> <span class=pl-v>Uint8Array</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-k>var</span> <span class=pl-v>Za</span><span class=pl-c1>=</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>TextDecoder</span>?<span class=pl-k>new</span> <span class=pl-v>TextDecoder</span><span class=pl-kos>(</span><span class=pl-s>&quot;utf8&quot;</span><span class=pl-kos>)</span>:<span class=pl-k>void</span> <span class=pl-c1>0</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>ra</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-c1>+</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-kos>]</span><span class=pl-c1>&amp;&amp;</span>!<span class=pl-kos>(</span><span class=pl-s1>c</span>&gt;=<span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>)</span><span class=pl-c1>++</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>16</span><span class=pl-c1>&lt;</span><span class=pl-s1>c</span><span class=pl-c1>-</span><span class=pl-s1>b</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>subarray</span><span class=pl-c1>&amp;&amp;</span><span class=pl-v>Za</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-v>Za</span><span class=pl-kos>.</span><span class=pl-en>decode</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>subarray</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s>&quot;&quot;</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>&lt;</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-c1>++</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>e</span>&amp;<span class=pl-c1>128</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-c1>++</span><span class=pl-kos>]</span>&amp;<span class=pl-c1>63</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>192</span><span class=pl-c1>==</span><span class=pl-kos>(</span><span class=pl-s1>e</span>&amp;<span class=pl-c1>224</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-s1>d</span><span class=pl-c1>+=</span><span class=pl-v>String</span><span class=pl-kos>.</span><span class=pl-en>fromCharCode</span><span class=pl-kos>(</span><span class=pl-kos>(</span><span class=pl-s1>e</span>&amp;<span class=pl-c1>31</span><span class=pl-kos>)</span><span class=pl-c1>&lt;&lt;</span><span class=pl-c1>6</span>|<span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>else</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-c1>++</span><span class=pl-kos>]</span>&amp;<span class=pl-c1>63</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-c1>224</span><span class=pl-c1>==</span><span class=pl-kos>(</span><span class=pl-s1>e</span>&amp;<span class=pl-c1>240</span><span class=pl-kos>)</span>?<span class=pl-kos>(</span><span class=pl-s1>e</span>&amp;<span class=pl-c1>15</span><span class=pl-kos>)</span><span class=pl-c1>&lt;&lt;</span><span class=pl-c1>12</span>|<span class=pl-s1>g</span><span class=pl-c1>&lt;&lt;</span><span class=pl-c1>6</span>|<span class=pl-s1>k</span>:<span class=pl-kos>(</span><span class=pl-s1>e</span>&amp;<span class=pl-c1>7</span><span class=pl-kos>)</span><span class=pl-c1>&lt;&lt;</span><span class=pl-c1>18</span>|<span class=pl-s1>g</span><span class=pl-c1>&lt;&lt;</span><span class=pl-c1>12</span>|<span class=pl-s1>k</span><span class=pl-c1>&lt;&lt;</span><span class=pl-c1>6</span>|<span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-c1>++</span><span class=pl-kos>]</span>&amp;<span class=pl-c1>63</span><span class=pl-kos>;</span><span class=pl-c1>65536</span><span class=pl-c1>&gt;</span><span class=pl-s1>e</span>?<span class=pl-s1>d</span><span class=pl-c1>+=</span><span class=pl-v>String</span><span class=pl-kos>.</span><span class=pl-en>fromCharCode</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span>:<span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-c1>-=</span><span class=pl-c1>65536</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>+=</span><span class=pl-v>String</span><span class=pl-kos>.</span><span class=pl-en>fromCharCode</span><span class=pl-kos>(</span><span class=pl-c1>55296</span>|<span class=pl-s1>e</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>10</span><span class=pl-kos>,</span><span class=pl-c1>56320</span>|<span class=pl-s1>e</span>&amp;<span class=pl-c1>1023</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-k>else</span> <span class=pl-s1>d</span><span class=pl-c1>+=</span><span class=pl-v>String</span><span class=pl-kos>.</span><span class=pl-en>fromCharCode</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-s1>d</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-v>G</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>a</span>?<span class=pl-en>ra</span><span class=pl-kos>(</span><span class=pl-v>F</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-k>void</span> <span class=pl-c1>0</span><span class=pl-kos>)</span>:<span class=pl-s>&quot;&quot;</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>t</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-c1>&lt;</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-s1>d</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>;</span><span class=pl-c1>++</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>charCodeAt</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>55296</span>&lt;=<span class=pl-s1>k</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>57343</span>&gt;=<span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>m</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>charCodeAt</span><span class=pl-kos>(</span><span class=pl-c1>++</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-c1>65536</span><span class=pl-c1>+</span><span class=pl-kos>(</span><span class=pl-kos>(</span><span class=pl-s1>k</span>&amp;<span class=pl-c1>1023</span><span class=pl-kos>)</span><span class=pl-c1>&lt;&lt;</span><span class=pl-c1>10</span><span class=pl-kos>)</span>|<span class=pl-s1>m</span>&amp;<span class=pl-c1>1023</span><span class=pl-kos>}</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>127</span>&gt;=<span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>c</span>&gt;=<span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>++</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>k</span><span class=pl-kos>}</span><span class=pl-k>else</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>2047</span>&gt;=<span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>1</span>&gt;=<span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>++</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>192</span>|<span class=pl-s1>k</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>6</span><span class=pl-kos>}</span><span class=pl-k>else</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>65535</span>&gt;=<span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>2</span>&gt;=<span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>++</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>224</span>|<span class=pl-s1>k</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>12</span><span class=pl-kos>}</span><span class=pl-k>else</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>3</span>&gt;=<span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>++</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>240</span>|<span class=pl-s1>k</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>18</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>++</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>128</span>|<span class=pl-s1>k</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>12</span>&amp;<span class=pl-c1>63</span><span class=pl-kos>}</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>++</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>128</span>|<span class=pl-s1>k</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>6</span>&amp;<span class=pl-c1>63</span><span class=pl-kos>}</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>++</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>128</span>|<span class=pl-s1>k</span>&amp;<span class=pl-c1>63</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>c</span><span class=pl-c1>-</span><span class=pl-s1>e</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>la</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>;</span><span class=pl-c1>++</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>charCodeAt</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-c1>55296</span>&lt;=<span class=pl-s1>d</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>57343</span>&gt;=<span class=pl-s1>d</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-c1>65536</span><span class=pl-c1>+</span><span class=pl-kos>(</span><span class=pl-kos>(</span><span class=pl-s1>d</span>&amp;<span class=pl-c1>1023</span><span class=pl-kos>)</span><span class=pl-c1>&lt;&lt;</span><span class=pl-c1>10</span><span class=pl-kos>)</span>|<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>charCodeAt</span><span class=pl-kos>(</span><span class=pl-c1>++</span><span class=pl-s1>c</span><span class=pl-kos>)</span>&amp;<span class=pl-c1>1023</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-c1>127</span>&gt;=<span class=pl-s1>d</span>?<span class=pl-c1>++</span><span class=pl-s1>b</span>:<span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-c1>2047</span>&gt;=<span class=pl-s1>d</span>?<span class=pl-s1>b</span><span class=pl-c1>+</span><span class=pl-c1>2</span>:<span class=pl-c1>65535</span>&gt;=<span class=pl-s1>d</span>?<span class=pl-s1>b</span><span class=pl-c1>+</span><span class=pl-c1>3</span>:<span class=pl-s1>b</span><span class=pl-c1>+</span><span class=pl-c1>4</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>TextDecoder</span><span class=pl-c1>&amp;&amp;</span><span class=pl-k>new</span> <span class=pl-v>TextDecoder</span><span class=pl-kos>(</span><span class=pl-s>&quot;utf-16le&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>function</span> <span class=pl-en>$a</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-c1>0</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span>%<span class=pl-c1>65536</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>+=</span><span class=pl-c1>65536</span><span class=pl-c1>-</span><span class=pl-s1>a</span>%<span class=pl-c1>65536</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-k>var</span> <span class=pl-s1>buffer</span><span class=pl-kos>,</span><span class=pl-s1>l</span><span class=pl-kos>,</span><span class=pl-v>F</span><span class=pl-kos>,</span><span class=pl-v>Ma</span><span class=pl-kos>,</span><span class=pl-v>B</span><span class=pl-kos>,</span><span class=pl-v>Ra</span><span class=pl-kos>,</span><span class=pl-v>Sa</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>ab</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>buffer</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>HEAP8</span><span class=pl-c1>=</span><span class=pl-s1>l</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Int8Array</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>HEAP16</span><span class=pl-c1>=</span><span class=pl-v>Ma</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Int16Array</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>HEAP32</span><span class=pl-c1>=</span><span class=pl-v>B</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Int32Array</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>HEAPU8</span><span class=pl-c1>=</span><span class=pl-v>F</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Uint8Array</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>HEAPU16</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Uint16Array</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>HEAPU32</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Uint32Array</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>HEAPF32</span><span class=pl-c1>=</span><span class=pl-v>Ra</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Float32Array</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>HEAPF64</span><span class=pl-c1>=</span><span class=pl-v>Sa</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Float64Array</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>var</span> <span class=pl-v>Ia</span><span class=pl-c1>=</span><span class=pl-c1>60304</span><span class=pl-kos>,</span><span class=pl-s1>bb</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>TOTAL_MEMORY</span><span class=pl-c1>||</span><span class=pl-c1>16777216</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>wasmMemory</span>?<span class=pl-v>E</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>wasmMemory</span>:<span class=pl-v>E</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>WebAssembly</span><span class=pl-kos>.</span><span class=pl-c1>Memory</span><span class=pl-kos>(</span><span class=pl-kos>{</span><span class=pl-c1>initial</span>:<span class=pl-s1>bb</span>/<span class=pl-c1>65536</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>E</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>buffer</span><span class=pl-c1>=</span><span class=pl-v>E</span><span class=pl-kos>.</span><span class=pl-c1>buffer</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>bb</span><span class=pl-c1>=</span><span class=pl-s1>buffer</span><span class=pl-kos>.</span><span class=pl-c1>byteLength</span><span class=pl-kos>;</span><span class=pl-en>ab</span><span class=pl-kos>(</span><span class=pl-s1>buffer</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-v>Ia</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>5303216</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>cb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-kos>;</span><span class=pl-c1>0</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>;</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>shift</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s>&quot;function&quot;</span><span class=pl-c1>==</span><span class=pl-k>typeof</span> <span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-s1>b</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>else</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>jc</span><span class=pl-kos>;</span><span class=pl-s>&quot;number&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>c</span>?<span class=pl-k>void</span> <span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>Ib</span>?<span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>dynCall_v</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span>:<span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>dynCall_vi</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>Ib</span><span class=pl-kos>)</span>:<span class=pl-s1>c</span><span class=pl-kos>(</span><span class=pl-k>void</span> <span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>Ib</span>?null:<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>Ib</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-k>var</span> <span class=pl-s1>db</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>,</span><span class=pl-s1>eb</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>,</span><span class=pl-s1>fb</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>,</span><span class=pl-s1>gb</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>,</span><span class=pl-s1>hb</span><span class=pl-c1>=</span>!<span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-k>function</span> <span class=pl-en>ib</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>preRun</span><span class=pl-kos>.</span><span class=pl-en>shift</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>db</span><span class=pl-kos>.</span><span class=pl-en>unshift</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>var</span> <span class=pl-v>Na</span><span class=pl-c1>=</span><span class=pl-v>Math</span><span class=pl-kos>.</span><span class=pl-c1>abs</span><span class=pl-kos>,</span><span class=pl-v>Qa</span><span class=pl-c1>=</span><span class=pl-v>Math</span><span class=pl-kos>.</span><span class=pl-c1>ceil</span><span class=pl-kos>,</span><span class=pl-v>Pa</span><span class=pl-c1>=</span><span class=pl-v>Math</span><span class=pl-kos>.</span><span class=pl-c1>floor</span><span class=pl-kos>,</span><span class=pl-v>Oa</span><span class=pl-c1>=</span><span class=pl-v>Math</span><span class=pl-kos>.</span><span class=pl-c1>min</span><span class=pl-kos>,</span><span class=pl-v>H</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>jb</span><span class=pl-c1>=</span>null<span class=pl-kos>,</span><span class=pl-s1>kb</span><span class=pl-c1>=</span>null<span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>preloadedImages</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>preloadedAudios</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>lb</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>I</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-v>String</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-c1>startsWith</span>?<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>startsWith</span><span class=pl-kos>(</span><span class=pl-s>&quot;data:application/octet-stream;base64,&quot;</span><span class=pl-kos>)</span>:<span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>indexOf</span><span class=pl-kos>(</span><span class=pl-s>&quot;data:application/octet-stream;base64,&quot;</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>var</span> <span class=pl-v>I</span><span class=pl-c1>=</span><span class=pl-s>&quot;sql-wasm.wasm&quot;</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-en>lb</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>mb</span><span class=pl-c1>=</span><span class=pl-v>I</span><span class=pl-kos>;</span><span class=pl-v>I</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>locateFile</span>?<span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>locateFile</span><span class=pl-kos>(</span><span class=pl-s1>mb</span><span class=pl-kos>,</span><span class=pl-s1>y</span><span class=pl-kos>)</span>:<span class=pl-s1>y</span><span class=pl-c1>+</span><span class=pl-s1>mb</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-en>nb</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-v>La</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-k>new</span> <span class=pl-v>Uint8Array</span><span class=pl-kos>(</span><span class=pl-v>La</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-v>Da</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-v>Da</span><span class=pl-kos>(</span><span class=pl-v>I</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>throw</span><span class=pl-s>&quot;both async and sync fetching of the wasm failed&quot;</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>ob</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-v>La</span><span class=pl-c1>||</span>!<span class=pl-s1>ya</span><span class=pl-c1>&amp;&amp;</span>!<span class=pl-s1>x</span><span class=pl-c1>||</span><span class=pl-s>&quot;function&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-s1>fetch</span>?<span class=pl-k>new</span> <span class=pl-v>Promise</span><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-kos>(</span><span class=pl-en>nb</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span>:<span class=pl-en>fetch</span><span class=pl-kos>(</span><span class=pl-v>I</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>credentials</span>:<span class=pl-s>&quot;same-origin&quot;</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>then</span><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>ok</span><span class=pl-kos>)</span><span class=pl-k>throw</span><span class=pl-s>&quot;failed to load wasm binary file at &#39;&quot;</span><span class=pl-c1>+</span><span class=pl-v>I</span><span class=pl-c1>+</span><span class=pl-s>&quot;&#39;&quot;</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>arrayBuffer</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>catch</span><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-en>nb</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>pb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>function</span> <span class=pl-en>b</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>exports</span><span class=pl-kos>;</span><span class=pl-v>H</span><span class=pl-c1>--</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>monitorRunDependencies</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>monitorRunDependencies</span><span class=pl-kos>(</span><span class=pl-v>H</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-c1>0</span><span class=pl-c1>==</span><span class=pl-v>H</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span>null!==<span class=pl-s1>jb</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-en>clearInterval</span><span class=pl-kos>(</span><span class=pl-s1>jb</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>jb</span><span class=pl-c1>=</span>null<span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>kb</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>kb</span><span class=pl-kos>,</span><span class=pl-s1>kb</span><span class=pl-c1>=</span>null<span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-en>c</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-en>b</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>instance</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-en>d</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-en>ob</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>then</span><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-v>WebAssembly</span><span class=pl-kos>.</span><span class=pl-en>instantiate</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>then</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>A</span><span class=pl-kos>(</span><span class=pl-s>&quot;failed to asynchronously prepare wasm: &quot;</span><span class=pl-c1>+</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-c1>env</span>:<span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-c1>wasi_unstable</span>:<span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-c1>global</span>:<span class=pl-kos>{</span><span class=pl-c1>NaN</span>:<span class=pl-v>NaN</span><span class=pl-kos>,</span><span class=pl-c1>Infinity</span>:<span class=pl-v>Infinity</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s>&quot;global.Math&quot;</span>:<span class=pl-v>Math</span><span class=pl-kos>,</span><span class=pl-c1>asm2wasm</span>:<span class=pl-v>Ka</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-v>H</span><span class=pl-c1>++</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>monitorRunDependencies</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>monitorRunDependencies</span><span class=pl-kos>(</span><span class=pl-v>H</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code blob-code-inner js-file-line"><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>instantiateWasm</span><span class=pl-kos>)</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>instantiateWasm</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-v>A</span><span class=pl-kos>(</span><span class=pl-s>&quot;Module.instantiateWasm callback failed with error: &quot;</span><span class=pl-c1>+</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>,</span>!<span class=pl-c1>1</span><span class=pl-kos>}</span><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-v>La</span><span class=pl-c1>||</span><span class=pl-s>&quot;function&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>WebAssembly</span><span class=pl-kos>.</span><span class=pl-c1>instantiateStreaming</span><span class=pl-c1>||</span><span class=pl-en>lb</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-c1>||</span><span class=pl-s>&quot;function&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-s1>fetch</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-en>d</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>fetch</span><span class=pl-kos>(</span><span class=pl-v>I</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>credentials</span>:<span class=pl-s>&quot;same-origin&quot;</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>then</span><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-v>WebAssembly</span><span class=pl-kos>.</span><span class=pl-en>instantiateStreaming</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>then</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>A</span><span class=pl-kos>(</span><span class=pl-s>&quot;wasm streaming compile failed: &quot;</span><span class=pl-c1>+</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>A</span><span class=pl-kos>(</span><span class=pl-s>&quot;falling back to ArrayBuffer instantiation&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>d</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>asm</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>memory</span><span class=pl-c1>=</span><span class=pl-v>E</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>table</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>WebAssembly</span><span class=pl-kos>.</span><span class=pl-c1>Table</span><span class=pl-kos>(</span><span class=pl-kos>{</span><span class=pl-c1>initial</span>:<span class=pl-c1>2688</span><span class=pl-kos>,</span><span class=pl-c1>maximum</span>:<span class=pl-c1>2688</span><span class=pl-kos>,</span><span class=pl-c1>element</span>:<span class=pl-s>&quot;anyfunc&quot;</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>__memory_base</span><span class=pl-c1>=</span><span class=pl-c1>1024</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>__table_base</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-en>pb</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-v>D</span><span class=pl-kos>,</span><span class=pl-v>C</span><span class=pl-kos>;</span><span class=pl-s1>eb</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-kos>{</span><span class=pl-en>jc</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-en>qb</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>function</span> <span class=pl-en>sb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>replace</span><span class=pl-kos>(</span><span class=pl-pds>/<span class=pl-cce>\b</span>__Z<span class=pl-kos>[</span><span class=pl-cce>\w</span><span class=pl-cce>\d</span>_<span class=pl-kos>]</span><span class=pl-c1>+</span>/g</span><span class=pl-kos>,</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-c1>===</span><span class=pl-s1>a</span>?<span class=pl-s1>a</span>:<span class=pl-s1>a</span><span class=pl-c1>+</span><span class=pl-s>&quot; [&quot;</span><span class=pl-c1>+</span><span class=pl-s1>a</span><span class=pl-c1>+</span><span class=pl-s>&quot;]&quot;</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>var</span> <span class=pl-v>L</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>tb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>tb</span><span class=pl-kos>.</span><span class=pl-c1>ub</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-kos>}</span><span class=pl-k>else</span> <span class=pl-s1>tb</span><span class=pl-kos>.</span><span class=pl-c1>ub</span><span class=pl-c1>=</span>!<span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-v>L</span><span class=pl-kos>.</span><span class=pl-c1>USER</span><span class=pl-c1>=</span><span class=pl-v>L</span><span class=pl-kos>.</span><span class=pl-c1>LOGNAME</span><span class=pl-c1>=</span><span class=pl-s>&quot;web_user&quot;</span><span class=pl-kos>,</span><span class=pl-v>L</span><span class=pl-kos>.</span><span class=pl-c1>PATH</span><span class=pl-c1>=</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>,</span><span class=pl-v>L</span><span class=pl-kos>.</span><span class=pl-c1>PWD</span><span class=pl-c1>=</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>,</span><span class=pl-v>L</span><span class=pl-kos>.</span><span class=pl-c1>HOME</span><span class=pl-c1>=</span><span class=pl-s>&quot;/home/web_user&quot;</span><span class=pl-kos>,</span><span class=pl-v>L</span><span class=pl-kos>.</span><span class=pl-c1>LANG</span><span class=pl-c1>=</span><span class=pl-kos>(</span><span class=pl-s>&quot;object&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>navigator</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>navigator</span><span class=pl-kos>.</span><span class=pl-c1>languages</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>navigator</span><span class=pl-kos>.</span><span class=pl-c1>languages</span><span class=pl-kos>[</span><span class=pl-c1>0</span><span class=pl-kos>]</span><span class=pl-c1>||</span><span class=pl-s>&quot;C&quot;</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>replace</span><span class=pl-kos>(</span><span class=pl-s>&quot;-&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;_&quot;</span><span class=pl-kos>)</span><span class=pl-c1>+</span><span class=pl-s>&quot;.UTF-8&quot;</span><span class=pl-kos>,</span><span class=pl-v>L</span><span class=pl-kos>.</span><span class=pl-c1>_</span><span class=pl-c1>=</span><span class=pl-s1>xa</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>hb</span>?<span class=pl-v>Ya</span><span class=pl-kos>(</span><span class=pl-c1>1024</span><span class=pl-kos>)</span>:<span class=pl-v>Ha</span><span class=pl-kos>(</span><span class=pl-c1>1024</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>hb</span>?<span class=pl-v>Ya</span><span class=pl-kos>(</span><span class=pl-c1>256</span><span class=pl-kos>)</span>:<span class=pl-v>Ha</span><span class=pl-kos>(</span><span class=pl-c1>256</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>e</span> <span class=pl-k>in</span> <span class=pl-v>L</span><span class=pl-kos>)</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s>&quot;string&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-v>L</span><span class=pl-kos>[</span><span class=pl-s1>e</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-c1>+</span><span class=pl-s>&quot;=&quot;</span><span class=pl-c1>+</span><span class=pl-v>L</span><span class=pl-kos>[</span><span class=pl-s1>e</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>+=</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>}</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>1024</span><span class=pl-c1>&lt;</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-v>Error</span><span class=pl-kos>(</span><span class=pl-s>&quot;Environment size exceeded TOTAL_ENV_SIZE!&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>d</span><span class=pl-c1>=</span></td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-s1>e</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>m</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>m</span><span class=pl-c1>&lt;</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>;</span><span class=pl-c1>++</span><span class=pl-s1>m</span><span class=pl-kos>)</span><span class=pl-s1>l</span><span class=pl-kos>[</span><span class=pl-s1>k</span><span class=pl-c1>++</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>0</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-en>charCodeAt</span><span class=pl-kos>(</span><span class=pl-s1>m</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>l</span><span class=pl-kos>[</span><span class=pl-s1>k</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>0</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-c1>+</span><span class=pl-c1>4</span>*<span class=pl-s1>e</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-c1>+=</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>+</span><span class=pl-c1>1</span><span class=pl-kos>}</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-c1>+</span><span class=pl-c1>4</span>*<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-en>ub</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-c1>0</span>&lt;=<span class=pl-s1>d</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>--</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-s1>d</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s>&quot;.&quot;</span><span class=pl-c1>===</span><span class=pl-s1>e</span>?<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>splice</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-c1>1</span><span class=pl-kos>)</span>:<span class=pl-s>&quot;..&quot;</span><span class=pl-c1>===</span><span class=pl-s1>e</span>?<span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>splice</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-c1>++</span><span class=pl-kos>)</span>:<span class=pl-s1>c</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>splice</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-c1>--</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-c1>--</span><span class=pl-kos>)</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>unshift</span><span class=pl-kos>(</span><span class=pl-s>&quot;..&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-en>vb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s>&quot;/&quot;</span><span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>charAt</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s>&quot;/&quot;</span><span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>substr</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-en>ub</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>split</span><span class=pl-kos>(</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>filter</span><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span>!!<span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>,</span>!<span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>join</span><span class=pl-kos>(</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-c1>||</span><span class=pl-s1>b</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s>&quot;.&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>c</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>+=</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span><span class=pl-kos>(</span><span class=pl-s1>b</span>?<span class=pl-s>&quot;/&quot;</span>:<span class=pl-s>&quot;&quot;</span><span class=pl-kos>)</span><span class=pl-c1>+</span><span class=pl-s1>a</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>zb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-pds>/<span class=pl-cce>^</span><span class=pl-kos>(</span><span class=pl-cce>\/</span>?<span class=pl-c1>|</span><span class=pl-kos>)</span><span class=pl-kos>(</span><span class=pl-kos>[</span><span class=pl-cce>\s</span><span class=pl-cce>\S</span><span class=pl-kos>]</span><span class=pl-c1>*</span>?<span class=pl-kos>)</span><span class=pl-kos>(</span><span class=pl-kos>(?:</span><span class=pl-cce>\.</span><span class=pl-kos>{</span>1,2<span class=pl-kos>}</span><span class=pl-c1>|</span><span class=pl-kos>[</span>^<span class=pl-cce>\/</span><span class=pl-kos>]</span><span class=pl-c1>+</span>?<span class=pl-c1>|</span><span class=pl-kos>)</span><span class=pl-kos>(</span><span class=pl-cce>\.</span><span class=pl-kos>[</span>^.<span class=pl-cce>\/</span><span class=pl-kos>]</span><span class=pl-c1>*</span><span class=pl-c1>|</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>(?:</span><span class=pl-kos>[</span><span class=pl-cce>\/</span><span class=pl-kos>]</span><span class=pl-c1>*</span><span class=pl-kos>)</span><span class=pl-cce>$</span>/</span><span class=pl-kos>.</span><span class=pl-en>exec</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>slice</span><span class=pl-kos>(</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-c1>0</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-c1>1</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>a</span><span class=pl-c1>&amp;&amp;</span>!<span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-k>return</span><span class=pl-s>&quot;.&quot;</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>substr</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-c1>+</span><span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-v>Ab</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s>&quot;/&quot;</span><span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-k>return</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>lastIndexOf</span><span class=pl-kos>(</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-c1>===</span><span class=pl-s1>b</span>?<span class=pl-s1>a</span>:<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>substr</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>+</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-v>Bb</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>Array</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-c1>slice</span><span class=pl-kos>.</span><span class=pl-en>call</span><span class=pl-kos>(</span><span class=pl-smi>arguments</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-en>vb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>join</span><span class=pl-kos>(</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-en>n</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-en>vb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>+</span><span class=pl-s>&quot;/&quot;</span><span class=pl-c1>+</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-v>Cb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>___errno_location</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>___errno_location</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-v>Db</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s>&quot;&quot;</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-c1>=</span>!<span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-smi>arguments</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-c1>-</span><span class=pl-c1>1</span>&lt;=<span class=pl-s1>c</span><span class=pl-c1>&amp;&amp;</span>!<span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-c1>--</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-c1>0</span>&lt;=<span class=pl-s1>c</span>?<span class=pl-smi>arguments</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-kos>]</span>:<span class=pl-s>&quot;/&quot;</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s>&quot;string&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>TypeError</span><span class=pl-kos>(</span><span class=pl-s>&quot;Arguments to path.resolve must be strings&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-k>return</span><span class=pl-s>&quot;&quot;</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-c1>+</span><span class=pl-s>&quot;/&quot;</span><span class=pl-c1>+</span><span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s>&quot;/&quot;</span><span class=pl-c1>===</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>charAt</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-en>ub</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>split</span><span class=pl-kos>(</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>filter</span><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span>!!<span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>,</span>!<span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>join</span><span class=pl-kos>(</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span><span class=pl-kos>(</span><span class=pl-s1>b</span>?<span class=pl-s>&quot;/&quot;</span>:<span class=pl-s>&quot;&quot;</span><span class=pl-kos>)</span><span class=pl-c1>+</span><span class=pl-s1>a</span><span class=pl-c1>||</span><span class=pl-s>&quot;.&quot;</span><span class=pl-kos>}</span><span class=pl-k>var</span> <span class=pl-v>Eb</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>function</span> <span class=pl-v>Fb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>Eb</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-c1>input</span>:<span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>,</span><span class=pl-c1>output</span>:<span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>,</span><span class=pl-c1>yb</span>:<span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-v>Gb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-v>Hb</span><span class=pl-kos>)</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code blob-code-inner js-file-line"><span class=pl-k>var</span> <span class=pl-v>Hb</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-en>open</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>Eb</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>rdev</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>19</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>tty</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>seekable</span><span class=pl-c1>=</span>!<span class=pl-c1>1</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>close</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>tty</span><span class=pl-kos>.</span><span class=pl-c1>yb</span><span class=pl-kos>.</span><span class=pl-en>flush</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>tty</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>flush</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>tty</span><span class=pl-kos>.</span><span class=pl-c1>yb</span><span class=pl-kos>.</span><span class=pl-en>flush</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>tty</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>read</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>tty</span><span class=pl-c1>||</span>!<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>tty</span><span class=pl-kos>.</span><span class=pl-c1>yb</span><span class=pl-kos>.</span><span class=pl-c1>Vb</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>6</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-c1>&lt;</span><span class=pl-s1>d</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>tty</span><span class=pl-kos>.</span><span class=pl-c1>yb</span><span class=pl-kos>.</span><span class=pl-en>Vb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>tty</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>m</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>5</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-k>void</span> <span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>k</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>11</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>null<span class=pl-c1>===</span><span class=pl-s1>k</span><span class=pl-c1>||</span><span class=pl-k>void</span> <span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-c1>++</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-s1>g</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>k</span><span class=pl-kos>}</span><span class=pl-s1>e</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>timestamp</span><span class=pl-c1>=</span><span class=pl-v>Date</span><span class=pl-kos>.</span><span class=pl-en>now</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>e</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>write</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>tty</span><span class=pl-c1>||</span>!<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>tty</span><span class=pl-kos>.</span><span class=pl-c1>yb</span><span class=pl-kos>.</span><span class=pl-c1>Lb</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>6</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code blob-code-inner js-file-line"><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-c1>&lt;</span><span class=pl-s1>d</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>tty</span><span class=pl-kos>.</span><span class=pl-c1>yb</span><span class=pl-kos>.</span><span class=pl-en>Lb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>tty</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-s1>e</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>5</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-s1>d</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>timestamp</span><span class=pl-c1>=</span><span class=pl-v>Date</span><span class=pl-kos>.</span><span class=pl-en>now</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>e</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-v>Ib</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-en>Vb</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>input</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span>null<span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>za</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Buffer</span><span class=pl-kos>.</span><span class=pl-c1>ub</span>?<span class=pl-v>Buffer</span><span class=pl-kos>.</span><span class=pl-en>ub</span><span class=pl-kos>(</span><span class=pl-c1>256</span><span class=pl-kos>)</span>:<span class=pl-k>new</span> <span class=pl-v>Buffer</span><span class=pl-kos>(</span><span class=pl-c1>256</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>process</span><span class=pl-kos>.</span><span class=pl-c1>stdin</span><span class=pl-kos>.</span><span class=pl-c1>fd</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s>&quot;win32&quot;</span>!=<span class=pl-s1>process</span><span class=pl-kos>.</span><span class=pl-c1>platform</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>g</span><span class=pl-c1>=</span>!<span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>fs</span><span class=pl-kos>.</span><span class=pl-en>openSync</span><span class=pl-kos>(</span><span class=pl-s>&quot;/dev/stdin&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;r&quot;</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-c1>=</span>!<span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>fs</span><span class=pl-kos>.</span><span class=pl-en>readSync</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-c1>256</span><span class=pl-kos>,</span>null<span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-c1>1</span>!=<span class=pl-s1>k</span><span class=pl-kos>.</span><span class=pl-en>toString</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>indexOf</span><span class=pl-kos>(</span><span class=pl-s>&quot;EOF&quot;</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>else</span> <span class=pl-k>throw</span> <span class=pl-s1>k</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-s1>g</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>fs</span><span class=pl-kos>.</span><span class=pl-en>closeSync</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-c1>0</span><span class=pl-c1>&lt;</span><span class=pl-s1>d</span>?<span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>slice</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>toString</span><span class=pl-kos>(</span><span class=pl-s>&quot;utf-8&quot;</span><span class=pl-kos>)</span>:<span class=pl-s1>b</span><span class=pl-c1>=</span>null<span class=pl-kos>}</span><span class=pl-k>else</span><span class=pl-s>&quot;undefined&quot;</span>!=</td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code blob-code-inner js-file-line"><span class=pl-k>typeof</span> <span class=pl-smi>window</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s>&quot;function&quot;</span><span class=pl-c1>==</span><span class=pl-k>typeof</span> <span class=pl-smi>window</span><span class=pl-kos>.</span><span class=pl-c1>prompt</span>?<span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-smi>window</span><span class=pl-kos>.</span><span class=pl-en>prompt</span><span class=pl-kos>(</span><span class=pl-s>&quot;Input: &quot;</span><span class=pl-kos>)</span><span class=pl-kos>,</span>null!==<span class=pl-s1>b</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>+=</span><span class=pl-s>&quot;\n&quot;</span><span class=pl-kos>)</span><span class=pl-kos>)</span>:<span class=pl-s>&quot;function&quot;</span><span class=pl-c1>==</span><span class=pl-k>typeof</span> <span class=pl-s1>readline</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-en>readline</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span>null!==<span class=pl-s1>b</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>+=</span><span class=pl-s>&quot;\n&quot;</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-k>return</span> null<span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>input</span><span class=pl-c1>=</span><span class=pl-en>aa</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span>!<span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>input</span><span class=pl-kos>.</span><span class=pl-en>shift</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>Lb</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span>null<span class=pl-c1>===</span><span class=pl-s1>b</span><span class=pl-c1>||</span><span class=pl-c1>10</span><span class=pl-c1>===</span><span class=pl-s1>b</span>?<span class=pl-kos>(</span><span class=pl-v>Ga</span><span class=pl-kos>(</span><span class=pl-en>ra</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>output</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>output</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>)</span>:<span class=pl-c1>0</span>!=<span class=pl-s1>b</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>output</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>flush</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>output</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>0</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>output</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-v>Ga</span><span class=pl-kos>(</span><span class=pl-en>ra</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>output</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>output</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-v>Jb</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-en>Lb</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span>null<span class=pl-c1>===</span><span class=pl-s1>b</span><span class=pl-c1>||</span><span class=pl-c1>10</span><span class=pl-c1>===</span><span class=pl-s1>b</span>?<span class=pl-kos>(</span><span class=pl-v>A</span><span class=pl-kos>(</span><span class=pl-en>ra</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>output</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>output</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>)</span>:<span class=pl-c1>0</span>!=<span class=pl-s1>b</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>output</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>flush</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>output</span><span class=pl-c1>&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code blob-code-inner js-file-line"><span class=pl-c1>0</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>output</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-v>A</span><span class=pl-kos>(</span><span class=pl-en>ra</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>output</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>output</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-v>N</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-c1>pb</span>:null<span class=pl-kos>,</span><span class=pl-en>mb</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-en>createNode</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>,</span><span class=pl-c1>16895</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>createNode</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>24576</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>c</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span><span class=pl-c1>||</span><span class=pl-c1>4096</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>c</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>pb</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>pb</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-c1>dir</span>:<span class=pl-kos>{</span><span class=pl-c1>node</span>:<span class=pl-kos>{</span><span class=pl-c1>ob</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>ob</span><span class=pl-kos>,</span><span class=pl-c1>lb</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>lb</span><span class=pl-kos>,</span><span class=pl-c1>lookup</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>lookup</span><span class=pl-kos>,</span><span class=pl-c1>zb</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>zb</span><span class=pl-kos>,</span><span class=pl-c1>rename</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>rename</span><span class=pl-kos>,</span><span class=pl-c1>unlink</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>unlink</span><span class=pl-kos>,</span><span class=pl-c1>rmdir</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>rmdir</span><span class=pl-kos>,</span><span class=pl-c1>readdir</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>readdir</span><span class=pl-kos>,</span><span class=pl-c1>symlink</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>symlink</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>stream</span>:<span class=pl-kos>{</span><span class=pl-c1>sb</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-c1>sb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>file</span>:<span class=pl-kos>{</span><span class=pl-c1>node</span>:<span class=pl-kos>{</span><span class=pl-c1>ob</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>ob</span><span class=pl-kos>,</span><span class=pl-c1>lb</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>lb</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>stream</span>:<span class=pl-kos>{</span><span class=pl-c1>sb</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-c1>sb</span><span class=pl-kos>,</span><span class=pl-c1>read</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-c1>read</span><span class=pl-kos>,</span><span class=pl-c1>write</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-c1>write</span><span class=pl-kos>,</span><span class=pl-c1>Nb</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-c1>Nb</span><span class=pl-kos>,</span><span class=pl-c1>Db</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-c1>Db</span><span class=pl-kos>,</span></td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code blob-code-inner js-file-line"><span class=pl-c1>Eb</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-c1>Eb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>link</span>:<span class=pl-kos>{</span><span class=pl-c1>node</span>:<span class=pl-kos>{</span><span class=pl-c1>ob</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>ob</span><span class=pl-kos>,</span><span class=pl-c1>lb</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>lb</span><span class=pl-kos>,</span><span class=pl-c1>readlink</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>readlink</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>stream</span>:<span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>Qb</span>:<span class=pl-kos>{</span><span class=pl-c1>node</span>:<span class=pl-kos>{</span><span class=pl-c1>ob</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>ob</span><span class=pl-kos>,</span><span class=pl-c1>lb</span>:<span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>lb</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>stream</span>:<span class=pl-v>Kb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Lb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>O</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>)</span>?<span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-c1>=</span><span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>pb</span><span class=pl-kos>.</span><span class=pl-c1>dir</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-c1>=</span><span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>pb</span><span class=pl-kos>.</span><span class=pl-c1>dir</span><span class=pl-kos>.</span><span class=pl-c1>stream</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>)</span>:<span class=pl-c1>32768</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span>?<span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-c1>=</span><span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>pb</span><span class=pl-kos>.</span><span class=pl-c1>file</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-c1>=</span><span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>pb</span><span class=pl-kos>.</span><span class=pl-c1>file</span><span class=pl-kos>.</span><span class=pl-c1>stream</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>kb</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-c1>=</span>null<span class=pl-kos>)</span>:<span class=pl-c1>40960</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span>?<span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-c1>=</span><span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>pb</span><span class=pl-kos>.</span><span class=pl-c1>link</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-c1>=</span><span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>pb</span><span class=pl-kos>.</span><span class=pl-c1>link</span><span class=pl-kos>.</span><span class=pl-c1>stream</span><span class=pl-kos>)</span>:<span class=pl-c1>8192</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-c1>=</span><span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>pb</span><span class=pl-kos>.</span><span class=pl-c1>Qb</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-c1>=</span><span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>pb</span><span class=pl-kos>.</span><span class=pl-c1>Qb</span><span class=pl-kos>.</span><span class=pl-c1>stream</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>timestamp</span><span class=pl-c1>=</span><span class=pl-v>Date</span><span class=pl-kos>.</span><span class=pl-en>now</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>c</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>Uc</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>.</span><span class=pl-c1>subarray</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span></td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code blob-code-inner js-file-line"><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>kb</span><span class=pl-kos>;</span><span class=pl-c1>++</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>Vc</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span>?<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>.</span><span class=pl-c1>subarray</span>?<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>.</span><span class=pl-en>subarray</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>kb</span><span class=pl-kos>)</span>:<span class=pl-k>new</span> <span class=pl-v>Uint8Array</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>)</span>:<span class=pl-k>new</span> <span class=pl-v>Uint8Array</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>Rb</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span>?<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>.</span><span class=pl-c1>length</span>:<span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>c</span>&gt;=<span class=pl-s1>b</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>Math</span><span class=pl-kos>.</span><span class=pl-en>max</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span>*<span class=pl-kos>(</span><span class=pl-c1>1048576</span><span class=pl-c1>&gt;</span><span class=pl-s1>c</span>?<span class=pl-c1>2</span>:<span class=pl-c1>1.125</span><span class=pl-kos>)</span>|<span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>0</span>!=<span class=pl-s1>c</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>Math</span><span class=pl-kos>.</span><span class=pl-en>max</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-c1>256</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Uint8Array</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>kb</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>.</span><span class=pl-en>set</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>subarray</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>kb</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>qc</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>kb</span>!=<span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-c1>==</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-c1>=</span>null<span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>kb</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>else</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-c1>||</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>.</span><span class=pl-c1>subarray</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Uint8Array</span><span class=pl-kos>(</span><span class=pl-k>new</span> <span class=pl-v>ArrayBuffer</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>.</span><span class=pl-en>set</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>subarray</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-v>Math</span><span class=pl-kos>.</span><span class=pl-en>min</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span></td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>kb</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>else</span> <span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>&gt;</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>else</span> <span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>&lt;</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-kos>)</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>kb</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>fb</span>:<span class=pl-kos>{</span><span class=pl-en>ob</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>dev</span><span class=pl-c1>=</span><span class=pl-c1>8192</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span>?<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>id</span>:<span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>ino</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>id</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>nlink</span><span class=pl-c1>=</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>uid</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>gid</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>rdev</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>rdev</span><span class=pl-kos>;</span><span class=pl-v>O</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>)</span>?<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>size</span><span class=pl-c1>=</span><span class=pl-c1>4096</span>:<span class=pl-c1>32768</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span>?<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>size</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>kb</span>:<span class=pl-c1>40960</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span>?<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>size</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>link</span><span class=pl-kos>.</span><span class=pl-c1>length</span>:<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>size</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>atime</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Date</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>timestamp</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>mtime</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Date</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>timestamp</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>ctime</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Date</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>timestamp</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>tb</span><span class=pl-c1>=</span><span class=pl-c1>4096</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>blocks</span><span class=pl-c1>=</span><span class=pl-v>Math</span><span class=pl-kos>.</span><span class=pl-en>ceil</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>size</span>/<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>tb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>lb</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span></td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>void</span> <span class=pl-c1>0</span>!==<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>void</span> <span class=pl-c1>0</span>!==<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>timestamp</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>timestamp</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>timestamp</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>void</span> <span class=pl-c1>0</span>!==<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>size</span><span class=pl-c1>&amp;&amp;</span><span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-en>qc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>size</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>lookup</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>throw</span> <span class=pl-v>Mb</span><span class=pl-kos>[</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>zb</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-en>createNode</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>rename</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-v>O</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Nb</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>e</span> <span class=pl-k>in</span> <span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>39</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-k>delete</span> <span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>parent</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>name</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>name</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>parent</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>unlink</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>delete</span> <span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-kos>]</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>rmdir</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Nb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>d</span> <span class=pl-k>in</span> <span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>39</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>delete</span> <span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-kos>]</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>readdir</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span></td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code blob-code-inner js-file-line"><span class=pl-kos>[</span><span class=pl-s>&quot;.&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;..&quot;</span><span class=pl-kos>]</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>c</span> <span class=pl-k>in</span> <span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>)</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>.</span><span class=pl-en>hasOwnProperty</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>symlink</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-en>createNode</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-c1>41471</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>link</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>readlink</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>40960</span>!==<span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>22</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>link</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>ib</span>:<span class=pl-kos>{</span><span class=pl-en>read</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>e</span>&gt;=<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>kb</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>Math</span><span class=pl-kos>.</span><span class=pl-en>min</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>kb</span><span class=pl-c1>-</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>8</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>subarray</span><span class=pl-kos>)</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>set</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-en>subarray</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>+</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>else</span> <span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-s1>d</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>g</span><span class=pl-kos>[</span><span class=pl-s1>e</span><span class=pl-c1>+</span><span class=pl-s1>d</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>write</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>g</span><span class=pl-c1>=</span>!<span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>timestamp</span><span class=pl-c1>=</span><span class=pl-v>Date</span><span class=pl-kos>.</span><span class=pl-en>now</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>subarray</span><span class=pl-c1>&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code blob-code-inner js-file-line"><span class=pl-kos>(</span>!<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-c1>||</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>.</span><span class=pl-c1>subarray</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>subarray</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>kb</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>kb</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Uint8Array</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>subarray</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>kb</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-c1>+</span><span class=pl-s1>d</span>&lt;=<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>kb</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>.</span><span class=pl-en>set</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>subarray</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>}</span><span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-en>Rb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>+</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>.</span><span class=pl-c1>subarray</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>subarray</span><span class=pl-kos>)</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>.</span><span class=pl-en>set</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>subarray</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>else</span> <span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-c1>&lt;</span><span class=pl-s1>d</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>[</span><span class=pl-s1>e</span><span class=pl-c1>+</span><span class=pl-s1>g</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-s1>g</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>kb</span><span class=pl-c1>=</span><span class=pl-v>Math</span><span class=pl-kos>.</span><span class=pl-en>max</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>kb</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>+</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>d</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>sb</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-c1>1</span><span class=pl-c1>===</span><span class=pl-s1>c</span>?<span class=pl-s1>b</span><span class=pl-c1>+=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>position</span>:<span class=pl-c1>2</span><span class=pl-c1>===</span><span class=pl-s1>c</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>32768</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>+=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>kb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-c1>&gt;</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>22</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>Nb</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-en>Rb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-c1>+</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>kb</span><span class=pl-c1>=</span></td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code blob-code-inner js-file-line"><span class=pl-v>Math</span><span class=pl-kos>.</span><span class=pl-en>max</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>kb</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-c1>+</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>Db</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>32768</span>!==<span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>19</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>gb</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>k</span>&amp;<span class=pl-c1>2</span><span class=pl-c1>||</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>buffer</span>!==<span class=pl-s1>b</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>buffer</span>!==<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>buffer</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-c1>&lt;</span><span class=pl-s1>e</span><span class=pl-c1>||</span><span class=pl-s1>e</span><span class=pl-c1>+</span><span class=pl-s1>d</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>kb</span><span class=pl-kos>)</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>subarray</span>?<span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>subarray</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>+</span><span class=pl-s1>d</span><span class=pl-kos>)</span>:<span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Array</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-c1>slice</span><span class=pl-kos>.</span><span class=pl-en>call</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>+</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span>!<span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>buffer</span><span class=pl-c1>==</span><span class=pl-s1>l</span><span class=pl-kos>.</span><span class=pl-c1>buffer</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Ya</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>12</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>(</span><span class=pl-s1>e</span>?<span class=pl-s1>l</span>:<span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>set</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>else</span> <span class=pl-s1>a</span><span class=pl-c1>=</span>!<span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>byteOffset</span><span class=pl-kos>;</span><span class=pl-k>return</span><span class=pl-kos>{</span><span class=pl-c1>pc</span>:<span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-c1>Gb</span>:<span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>Eb</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>32768</span>!==<span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>19</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>e</span>&amp;<span class=pl-c1>2</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-v>N</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-en>write</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span>!<span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-v>P</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-c1>Cb</span>:!<span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-en>sc</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-c1>Cb</span><span class=pl-c1>=</span></td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code blob-code-inner js-file-line">!!<span class=pl-s1>process</span><span class=pl-kos>.</span><span class=pl-c1>platform</span><span class=pl-kos>.</span><span class=pl-en>match</span><span class=pl-kos>(</span><span class=pl-pds>/<span class=pl-cce>^</span>win/</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>process</span><span class=pl-kos>.</span><span class=pl-en>binding</span><span class=pl-kos>(</span><span class=pl-s>&quot;constants&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fs</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fs</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-c1>Sb</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-c1>1024</span>:<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>O_APPEND</span><span class=pl-kos>,</span><span class=pl-c1>64</span>:<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>O_CREAT</span><span class=pl-kos>,</span><span class=pl-c1>128</span>:<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>O_EXCL</span><span class=pl-kos>,</span><span class=pl-c1>0</span>:<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>O_RDONLY</span><span class=pl-kos>,</span><span class=pl-c1>2</span>:<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>O_RDWR</span><span class=pl-kos>,</span><span class=pl-c1>4096</span>:<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>O_SYNC</span><span class=pl-kos>,</span><span class=pl-c1>512</span>:<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>O_TRUNC</span><span class=pl-kos>,</span><span class=pl-c1>1</span>:<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>O_WRONLY</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>Pb</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-v>Buffer</span><span class=pl-kos>.</span><span class=pl-c1>alloc</span>?<span class=pl-v>Buffer</span><span class=pl-kos>.</span><span class=pl-en>from</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span>:<span class=pl-k>new</span> <span class=pl-v>Buffer</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>mb</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-en>assert</span><span class=pl-kos>(</span><span class=pl-v>Aa</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>createNode</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>,</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>Ub</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>Kb</span><span class=pl-kos>.</span><span class=pl-c1>root</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>createNode</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-v>O</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>32768</span>!==<span class=pl-kos>(</span><span class=pl-s1>c</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>40960</span>!==<span class=pl-kos>(</span><span class=pl-s1>c</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>22</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>Lb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-c1>=</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-c1>=</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>Ub</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>fs</span><span class=pl-kos>.</span><span class=pl-en>lstatSync</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code blob-code-inner js-file-line"><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-c1>Cb</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>|<span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>292</span><span class=pl-kos>)</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>code</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>nb</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>parent</span>!==<span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-kos>)</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>name</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>parent</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>mb</span><span class=pl-kos>.</span><span class=pl-c1>Kb</span><span class=pl-kos>.</span><span class=pl-c1>root</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>reverse</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-v>Bb</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>ic</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span>&amp;=<span class=pl-c1>-</span><span class=pl-c1>2656257</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>c</span> <span class=pl-k>in</span> <span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-c1>Sb</span><span class=pl-kos>)</span><span class=pl-s1>a</span>&amp;<span class=pl-s1>c</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>b</span>|=<span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-c1>Sb</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-kos>]</span><span class=pl-kos>,</span><span class=pl-s1>a</span>^=<span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>22</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>fb</span>:<span class=pl-kos>{</span><span class=pl-en>ob</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>nb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>fs</span><span class=pl-kos>.</span><span class=pl-en>lstatSync</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>code</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-c1>Cb</span><span class=pl-c1>&amp;&amp;</span>!<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>tb</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>tb</span><span class=pl-c1>=</span><span class=pl-c1>4096</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-c1>Cb</span><span class=pl-c1>&amp;&amp;</span>!<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>blocks</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>blocks</span><span class=pl-c1>=</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>size</span><span class=pl-c1>+</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>tb</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>)</span>/</td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>tb</span>|<span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span><span class=pl-kos>{</span><span class=pl-c1>dev</span>:<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>dev</span><span class=pl-kos>,</span><span class=pl-c1>ino</span>:<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>ino</span><span class=pl-kos>,</span><span class=pl-c1>mode</span>:<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>,</span><span class=pl-c1>nlink</span>:<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>nlink</span><span class=pl-kos>,</span><span class=pl-c1>uid</span>:<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>uid</span><span class=pl-kos>,</span><span class=pl-c1>gid</span>:<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>gid</span><span class=pl-kos>,</span><span class=pl-c1>rdev</span>:<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>rdev</span><span class=pl-kos>,</span><span class=pl-c1>size</span>:<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>size</span><span class=pl-kos>,</span><span class=pl-c1>atime</span>:<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>atime</span><span class=pl-kos>,</span><span class=pl-c1>mtime</span>:<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>mtime</span><span class=pl-kos>,</span><span class=pl-c1>ctime</span>:<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>ctime</span><span class=pl-kos>,</span><span class=pl-c1>tb</span>:<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>tb</span><span class=pl-kos>,</span><span class=pl-c1>blocks</span>:<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>blocks</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>lb</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>nb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>void</span> <span class=pl-c1>0</span>!==<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>fs</span><span class=pl-kos>.</span><span class=pl-en>chmodSync</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-k>void</span> <span class=pl-c1>0</span>!==<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>size</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>fs</span><span class=pl-kos>.</span><span class=pl-en>truncateSync</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>size</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>code</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-s1>d</span><span class=pl-kos>;</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>lookup</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-en>n</span><span class=pl-kos>(</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>nb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>Ub</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>createNode</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>zb</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>createNode</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>nb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-v>O</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>)</span>?</td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>fs</span><span class=pl-kos>.</span><span class=pl-en>mkdirSync</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>)</span>:<span class=pl-s1>fs</span><span class=pl-kos>.</span><span class=pl-en>writeFileSync</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s>&quot;&quot;</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>mode</span>:<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>code</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-s1>e</span><span class=pl-kos>;</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>rename</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>nb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-en>n</span><span class=pl-kos>(</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>nb</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-s1>fs</span><span class=pl-kos>.</span><span class=pl-en>renameSync</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>code</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-s1>d</span><span class=pl-kos>;</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>unlink</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-en>n</span><span class=pl-kos>(</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>nb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-s1>fs</span><span class=pl-kos>.</span><span class=pl-en>unlinkSync</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>code</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>rmdir</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-en>n</span><span class=pl-kos>(</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>nb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-s1>fs</span><span class=pl-kos>.</span><span class=pl-en>rmdirSync</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>code</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>readdir</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>nb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>fs</span><span class=pl-kos>.</span><span class=pl-en>readdirSync</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>code</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-s1>b</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code blob-code-inner js-file-line"><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>symlink</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-en>n</span><span class=pl-kos>(</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>nb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-s1>fs</span><span class=pl-kos>.</span><span class=pl-en>symlinkSync</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>code</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-s1>d</span><span class=pl-kos>;</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>readlink</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>nb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>fs</span><span class=pl-kos>.</span><span class=pl-en>readlinkSync</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>Ob</span><span class=pl-kos>.</span><span class=pl-en>relative</span><span class=pl-kos>(</span><span class=pl-v>Ob</span><span class=pl-kos>.</span><span class=pl-en>resolve</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>mb</span><span class=pl-kos>.</span><span class=pl-c1>Kb</span><span class=pl-kos>.</span><span class=pl-c1>root</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>code</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>ib</span>:<span class=pl-kos>{</span><span class=pl-en>open</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>nb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-c1>32768</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>Ab</span><span class=pl-c1>=</span><span class=pl-s1>fs</span><span class=pl-kos>.</span><span class=pl-en>openSync</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>ic</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>flags</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>code</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>close</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-c1>32768</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>Ab</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>fs</span><span class=pl-kos>.</span><span class=pl-en>closeSync</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>Ab</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>code</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>read</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>fs</span><span class=pl-kos>.</span><span class=pl-en>readSync</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>Ab</span><span class=pl-kos>,</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>Pb</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>buffer</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>write</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>fs</span><span class=pl-kos>.</span><span class=pl-en>writeSync</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>Ab</span><span class=pl-kos>,</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>Pb</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>buffer</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>sb</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>1</span><span class=pl-c1>===</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-s1>b</span><span class=pl-c1>+=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>position</span><span class=pl-kos>;</span><span class=pl-k>else</span> <span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>2</span><span class=pl-c1>===</span><span class=pl-s1>c</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>32768</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-s1>b</span><span class=pl-c1>+=</span><span class=pl-s1>fs</span><span class=pl-kos>.</span><span class=pl-en>fstatSync</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>Ab</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-c1>size</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-c1>&gt;</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>22</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-v>Pb</span><span class=pl-c1>=</span>null<span class=pl-kos>,</span><span class=pl-v>Qb</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>,</span></td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code blob-code-inner js-file-line"><span class=pl-v>Q</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>,</span><span class=pl-v>Rb</span><span class=pl-c1>=</span><span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-v>R</span><span class=pl-c1>=</span>null<span class=pl-kos>,</span><span class=pl-v>Sb</span><span class=pl-c1>=</span>!<span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-v>T</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-v>M</span><span class=pl-c1>=</span>null<span class=pl-kos>,</span><span class=pl-v>Mb</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-v>U</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>Db</span><span class=pl-kos>(</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-c1>||</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-k>return</span><span class=pl-kos>{</span><span class=pl-c1>path</span>:<span class=pl-s>&quot;&quot;</span><span class=pl-kos>,</span><span class=pl-c1>node</span>:null<span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-c1>Tb</span>:!<span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-c1>Mb</span>:<span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>d</span> <span class=pl-k>in</span> <span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-k>void</span> <span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>d</span><span class=pl-kos>]</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>d</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>[</span><span class=pl-s1>d</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>8</span><span class=pl-c1>&lt;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>Mb</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>40</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-en>ub</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>split</span><span class=pl-kos>(</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>filter</span><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span>!!<span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>,</span>!<span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-v>Pb</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>parent</span><span class=pl-kos>)</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-v>Nb</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-s1>d</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-en>n</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-s1>d</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>wb</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span>!<span class=pl-s1>g</span><span class=pl-c1>||</span><span class=pl-s1>g</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>Tb</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>wb</span><span class=pl-kos>.</span><span class=pl-c1>root</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>g</span><span class=pl-c1>||</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>vb</span><span class=pl-kos>)</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-c1>40960</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>)</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-v>Tb</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Db</span><span class=pl-kos>(</span><span class=pl-en>zb</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-v>U</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>Mb</span>:<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>Mb</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>,</span><span class=pl-c1>40</span><span class=pl-c1>&lt;</span><span class=pl-s1>g</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>40</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-k>return</span><span class=pl-kos>{</span><span class=pl-c1>path</span>:<span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-c1>node</span>:<span class=pl-s1>e</span><span class=pl-kos>}</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-v>Ub</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-kos>;</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>parent</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>mb</span><span class=pl-kos>.</span><span class=pl-c1>Wb</span><span class=pl-kos>,</span><span class=pl-s1>b</span>?<span class=pl-s>&quot;/&quot;</span>!==<span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>]</span>?<span class=pl-s1>a</span><span class=pl-c1>+</span><span class=pl-s>&quot;/&quot;</span><span class=pl-c1>+</span><span class=pl-s1>b</span>:<span class=pl-s1>a</span><span class=pl-c1>+</span><span class=pl-s1>b</span>:<span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>b</span>?<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>name</span><span class=pl-c1>+</span><span class=pl-s>&quot;/&quot;</span><span class=pl-c1>+</span><span class=pl-s1>b</span>:<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>name</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>parent</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-v>Vb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>&lt;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-c1>&lt;&lt;</span><span class=pl-c1>5</span><span class=pl-kos>)</span><span class=pl-c1>-</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>charCodeAt</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span>|<span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>return</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>+</span><span class=pl-s1>c</span>&gt;&gt;&gt;<span class=pl-c1>0</span><span class=pl-kos>)</span>%<span class=pl-v>R</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-v>Wb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>Vb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>parent</span><span class=pl-kos>.</span><span class=pl-c1>id</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>name</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>xb</span><span class=pl-c1>=</span><span class=pl-v>R</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-v>R</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-v>Xb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>Vb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>parent</span><span class=pl-kos>.</span><span class=pl-c1>id</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>name</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-v>R</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-kos>]</span><span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-v>R</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>xb</span><span class=pl-kos>;</span><span class=pl-k>else</span> <span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>R</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>xb</span><span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>xb</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>xb</span><span class=pl-kos>;</span><span class=pl-k>break</span><span class=pl-kos>}</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>xb</span><span class=pl-kos>}</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-v>Nb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Yb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s>&quot;x&quot;</span><span class=pl-kos>)</span><span class=pl-kos>)</span>?<span class=pl-s1>c</span>:<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>lookup</span>?<span class=pl-c1>0</span>:<span class=pl-c1>13</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>R</span><span class=pl-kos>[</span><span class=pl-v>Vb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>id</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>xb</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>name</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>parent</span><span class=pl-kos>.</span><span class=pl-c1>id</span><span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>id</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>d</span><span class=pl-c1>===</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-s1>c</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-en>lookup</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-v>Lb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>Zb</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-v>Zb</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>parent</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>mb</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>mb</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>wb</span><span class=pl-c1>=</span>null<span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>id</span><span class=pl-c1>=</span><span class=pl-v>Rb</span><span class=pl-c1>++</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>name</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>rdev</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-v>Zb</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-v>Object</span><span class=pl-kos>.</span><span class=pl-en>defineProperties</span><span class=pl-kos>(</span><span class=pl-v>Zb</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>read</span>:<span class=pl-kos>{</span><span class=pl-en>get</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-c1>365</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>365</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>set</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span>?<span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>|=<span class=pl-c1>365</span>:<span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;=<span class=pl-c1>-</span><span class=pl-c1>366</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>write</span>:<span class=pl-kos>{</span><span class=pl-en>get</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-c1>146</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>146</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>set</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span>?<span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>|=<span class=pl-c1>146</span>:<span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;=<span class=pl-c1>-</span><span class=pl-c1>147</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Zb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Wb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-v>O</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-c1>16384</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>a</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>var</span> <span class=pl-s1>$b</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-c1>r</span>:<span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-c1>rs</span>:<span class=pl-c1>1052672</span><span class=pl-kos>,</span><span class=pl-s>&quot;r+&quot;</span>:<span class=pl-c1>2</span><span class=pl-kos>,</span><span class=pl-c1>w</span>:<span class=pl-c1>577</span><span class=pl-kos>,</span><span class=pl-c1>wx</span>:<span class=pl-c1>705</span><span class=pl-kos>,</span><span class=pl-c1>xw</span>:<span class=pl-c1>705</span><span class=pl-kos>,</span><span class=pl-s>&quot;w+&quot;</span>:<span class=pl-c1>578</span><span class=pl-kos>,</span><span class=pl-s>&quot;wx+&quot;</span>:<span class=pl-c1>706</span><span class=pl-kos>,</span><span class=pl-s>&quot;xw+&quot;</span>:<span class=pl-c1>706</span><span class=pl-kos>,</span><span class=pl-c1>a</span>:<span class=pl-c1>1089</span><span class=pl-kos>,</span><span class=pl-c1>ax</span>:<span class=pl-c1>1217</span><span class=pl-kos>,</span><span class=pl-c1>xa</span>:<span class=pl-c1>1217</span><span class=pl-kos>,</span><span class=pl-s>&quot;a+&quot;</span>:<span class=pl-c1>1090</span><span class=pl-kos>,</span><span class=pl-s>&quot;ax+&quot;</span>:<span class=pl-c1>1218</span><span class=pl-kos>,</span><span class=pl-s>&quot;xa+&quot;</span>:<span class=pl-c1>1218</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-k>function</span> <span class=pl-en>ac</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-s>&quot;r&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;w&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;rw&quot;</span><span class=pl-kos>]</span><span class=pl-kos>[</span><span class=pl-s1>a</span>&amp;<span class=pl-c1>3</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>a</span>&amp;<span class=pl-c1>512</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>+=</span><span class=pl-s>&quot;w&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-v>Yb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-v>Sb</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-c1>===</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>indexOf</span><span class=pl-kos>(</span><span class=pl-s>&quot;r&quot;</span><span class=pl-kos>)</span><span class=pl-c1>||</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>292</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-c1>1</span>!==<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>indexOf</span><span class=pl-kos>(</span><span class=pl-s>&quot;w&quot;</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span>!<span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>146</span><span class=pl-kos>)</span><span class=pl-c1>||</span><span class=pl-c1>-</span><span class=pl-c1>1</span>!==<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>indexOf</span><span class=pl-kos>(</span><span class=pl-s>&quot;x&quot;</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span>!<span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>73</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-c1>13</span><span class=pl-kos>}</span><span class=pl-k>else</span> <span class=pl-k>return</span> <span class=pl-c1>13</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-en>bc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-v>Nb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>17</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-v>Yb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s>&quot;wx&quot;</span><span class=pl-kos>)</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>cc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Nb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>Yb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s>&quot;wx&quot;</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-v>O</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-c1>20</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-c1>===</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>parent</span><span class=pl-c1>||</span><span class=pl-s>&quot;/&quot;</span><span class=pl-c1>===</span><span class=pl-v>Ub</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-c1>16</span><span class=pl-kos>}</span><span class=pl-k>else</span> <span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-v>O</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-c1>21</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-en>dc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-c1>4096</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-c1>||</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>a</span>&lt;=<span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-v>Q</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>24</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>uc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>Fc</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-v>Fc</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-v>Fc</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-v>Object</span><span class=pl-kos>.</span><span class=pl-en>defineProperties</span><span class=pl-kos>(</span><span class=pl-v>Fc</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>object</span>:<span class=pl-kos>{</span><span class=pl-en>get</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>set</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Fc</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>d</span> <span class=pl-k>in</span> <span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-s1>c</span><span class=pl-kos>[</span><span class=pl-s1>d</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-s1>d</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-en>dc</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fd</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-v>Q</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-k>var</span> <span class=pl-v>Kb</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-en>open</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-c1>=</span><span class=pl-v>Qb</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>rdev</span><span class=pl-kos>]</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-c1>open</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-en>open</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>sb</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>29</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-k>function</span> <span class=pl-v>Gb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>Qb</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-c1>ib</span>:<span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-v>Gc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s>&quot;/&quot;</span><span class=pl-c1>===</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span>!<span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-c1>&amp;&amp;</span><span class=pl-v>Pb</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>16</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>c</span><span class=pl-c1>&amp;&amp;</span>!<span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-v>U</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>Tb</span>:!<span class=pl-c1>1</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>path</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>wb</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>16</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-v>O</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>20</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-c1>type</span>:<span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-c1>Kb</span>:<span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>Wb</span>:<span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-c1>oc</span>:<span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>mb</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>mb</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>root</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-s1>c</span>?<span class=pl-v>Pb</span><span class=pl-c1>=</span><span class=pl-s1>a</span>:<span class=pl-s1>e</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>wb</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>mb</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>mb</span><span class=pl-kos>.</span><span class=pl-c1>oc</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-en>ea</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>U</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>parent</span>:!<span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>Ab</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>a</span><span class=pl-c1>||</span><span class=pl-s>&quot;.&quot;</span><span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-c1>||</span><span class=pl-s>&quot;..&quot;</span><span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>22</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-en>bc</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>zb</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-en>zb</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-v>V</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-en>ea</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-kos>(</span><span class=pl-k>void</span> <span class=pl-c1>0</span>!==<span class=pl-s1>b</span>?<span class=pl-s1>b</span>:<span class=pl-c1>511</span><span class=pl-kos>)</span>&amp;<span class=pl-c1>1023</span>|<span class=pl-c1>16384</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-v>Hc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s>&quot;undefined&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>c</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-c1>438</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>ea</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span>|<span class=pl-c1>8192</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-v>Ic</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-v>Db</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>2</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>U</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>parent</span>:!<span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>2</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>Ab</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-en>bc</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>symlink</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-en>symlink</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>sa</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>U</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>parent</span>:!<span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Ab</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Nb</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-en>cc</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span>!<span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>unlink</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>wb</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>16</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-v>T</span><span class=pl-kos>.</span><span class=pl-c1>willDeletePath</span><span class=pl-c1>&amp;&amp;</span><span class=pl-v>T</span><span class=pl-kos>.</span><span class=pl-en>willDeletePath</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-smi>console</span><span class=pl-kos>.</span><span class=pl-en>log</span><span class=pl-kos>(</span><span class=pl-s>&quot;FS.trackingDelegate[&#39;willDeletePath&#39;](&#39;&quot;</span><span class=pl-c1>+</span><span class=pl-s1>a</span><span class=pl-c1>+</span><span class=pl-s>&quot;&#39;) threw an exception: &quot;</span><span class=pl-c1>+</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>message</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-en>unlink</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Xb</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-v>T</span><span class=pl-kos>.</span><span class=pl-c1>onDeletePath</span><span class=pl-kos>)</span><span class=pl-v>T</span><span class=pl-kos>.</span><span class=pl-en>onDeletePath</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-smi>console</span><span class=pl-kos>.</span><span class=pl-en>log</span><span class=pl-kos>(</span><span class=pl-s>&quot;FS.trackingDelegate[&#39;onDeletePath&#39;](&#39;&quot;</span><span class=pl-c1>+</span><span class=pl-s1>a</span><span class=pl-c1>+</span><span class=pl-s>&quot;&#39;) threw an exception: &quot;</span><span class=pl-c1>+</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>message</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-v>Tb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>U</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>2</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>readlink</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>22</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-v>Db</span><span class=pl-kos>(</span><span class=pl-v>Ub</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>parent</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-en>readlink</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-en>pa</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>U</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>vb</span>:!<span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>2</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>ob</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-en>ob</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-v>Jc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-en>pa</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span>!<span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-en>fa</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-s>&quot;string&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>a</span>?<span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>U</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>vb</span>:!<span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-c1>node</span>:<span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>lb</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-en>lb</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>mode</span>:<span class=pl-s1>b</span>&amp;<span class=pl-c1>4095</span>|<span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>-</span><span class=pl-c1>4096</span><span class=pl-kos>,</span><span class=pl-c1>timestamp</span>:<span class=pl-v>Date</span><span class=pl-kos>.</span><span class=pl-en>now</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-v>Kc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-s>&quot;string&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>a</span>?<span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>U</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>vb</span>:!<span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-c1>node</span>:<span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>lb</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-en>lb</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>timestamp</span>:<span class=pl-v>Date</span><span class=pl-kos>.</span><span class=pl-en>now</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-v>Lc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-c1>&gt;</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>22</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-s>&quot;string&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>a</span>?<span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>U</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>vb</span>:!<span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-c1>node</span>:<span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>lb</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-v>O</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>21</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>32768</span>!==<span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>22</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>Yb</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s>&quot;w&quot;</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-en>lb</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>size</span>:<span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-c1>timestamp</span>:<span class=pl-v>Date</span><span class=pl-kos>.</span><span class=pl-en>now</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>p</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s>&quot;&quot;</span><span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>2</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s>&quot;string&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>$b</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s>&quot;undefined&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-v>Error</span><span class=pl-kos>(</span><span class=pl-s>&quot;Unknown file open mode: &quot;</span><span class=pl-c1>+</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-kos>}</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>b</span>&amp;<span class=pl-c1>64</span>?<span class=pl-kos>(</span><span class=pl-s>&quot;undefined&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>c</span>?<span class=pl-c1>438</span>:<span class=pl-s1>c</span><span class=pl-kos>)</span>&amp;<span class=pl-c1>4095</span>|<span class=pl-c1>32768</span>:<span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s>&quot;object&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-k>var</span> <span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-k>else</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-en>vb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-v>U</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>vb</span>:!<span class=pl-kos>(</span><span class=pl-s1>b</span>&amp;<span class=pl-c1>131072</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-s1>e</span><span class=pl-c1>=</span>!<span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>b</span>&amp;<span class=pl-c1>64</span><span class=pl-kos>)</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>b</span>&amp;<span class=pl-c1>128</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>17</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-k>else</span> <span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-en>ea</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>=</span>!<span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>2</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-c1>8192</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>b</span>&amp;=<span class=pl-c1>-</span><span class=pl-c1>513</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>b</span>&amp;<span class=pl-c1>65536</span><span class=pl-c1>&amp;&amp;</span>!<span class=pl-v>O</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>20</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>e</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>g</span>?<span class=pl-c1>40960</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>mode</span>&amp;<span class=pl-c1>61440</span><span class=pl-kos>)</span>?<span class=pl-c1>40</span>:<span class=pl-v>O</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code blob-code-inner js-file-line"><span class=pl-kos>(</span><span class=pl-s>&quot;r&quot;</span>!==<span class=pl-en>ac</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-c1>||</span><span class=pl-s1>b</span>&amp;<span class=pl-c1>512</span><span class=pl-kos>)</span>?<span class=pl-c1>21</span>:<span class=pl-v>Yb</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>,</span><span class=pl-en>ac</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>)</span>:<span class=pl-c1>2</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span>&amp;<span class=pl-c1>512</span><span class=pl-c1>&amp;&amp;</span><span class=pl-v>Lc</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span>&amp;=<span class=pl-c1>-</span><span class=pl-c1>641</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-en>uc</span><span class=pl-kos>(</span><span class=pl-kos>{</span><span class=pl-c1>node</span>:<span class=pl-s1>g</span><span class=pl-kos>,</span><span class=pl-c1>path</span>:<span class=pl-v>Ub</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>flags</span>:<span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-c1>seekable</span>:!<span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-c1>position</span>:<span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-c1>ib</span>:<span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>,</span><span class=pl-c1>tc</span>:<span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>,</span><span class=pl-c1>error</span>:!<span class=pl-c1>1</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-c1>open</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-en>open</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span>!<span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>logReadFiles</span><span class=pl-c1>||</span><span class=pl-s1>b</span>&amp;<span class=pl-c1>1</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-v>Mc</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-v>Mc</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>a</span> <span class=pl-k>in</span> <span class=pl-v>Mc</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-v>Mc</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-smi>console</span><span class=pl-kos>.</span><span class=pl-en>log</span><span class=pl-kos>(</span><span class=pl-s>&quot;FS.trackingDelegate error on read file: &quot;</span><span class=pl-c1>+</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-v>T</span><span class=pl-kos>.</span><span class=pl-c1>onOpenFile</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-c1>1</span>!==<span class=pl-kos>(</span><span class=pl-s1>b</span>&amp;<span class=pl-c1>2097155</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>g</span>|=<span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>0</span>!==<span class=pl-kos>(</span><span class=pl-s1>b</span>&amp;<span class=pl-c1>2097155</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>g</span>|=<span class=pl-c1>2</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-v>T</span><span class=pl-kos>.</span><span class=pl-en>onOpenFile</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-smi>console</span><span class=pl-kos>.</span><span class=pl-en>log</span><span class=pl-kos>(</span><span class=pl-s>&quot;FS.trackingDelegate[&#39;onOpenFile&#39;](&#39;&quot;</span><span class=pl-c1>+</span><span class=pl-s1>a</span><span class=pl-c1>+</span><span class=pl-s>&quot;&#39;, flags) threw an exception: &quot;</span><span class=pl-c1>+</span><span class=pl-s1>k</span><span class=pl-kos>.</span><span class=pl-c1>message</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-s1>d</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>ia</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>null<span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fd</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>9</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>Jb</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>Jb</span><span class=pl-c1>=</span>null<span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-c1>close</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-en>close</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>throw</span> <span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-k>finally</span><span class=pl-kos>{</span><span class=pl-v>Q</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fd</span><span class=pl-kos>]</span><span class=pl-c1>=</span>null<span class=pl-kos>}</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fd</span><span class=pl-c1>=</span>null<span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-v>Nc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>null<span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fd</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>9</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>seekable</span><span class=pl-c1>||</span>!<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-c1>sb</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>29</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span>!=<span class=pl-s1>c</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>1</span>!=<span class=pl-s1>c</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>2</span>!=<span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>22</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>position</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-en>sb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>tc</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>qa</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-c1>&gt;</span><span class=pl-s1>d</span><span class=pl-c1>||</span><span class=pl-c1>0</span><span class=pl-c1>&gt;</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>22</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>null<span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fd</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>9</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>1</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>flags</span>&amp;<span class=pl-c1>2097155</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>9</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-v>O</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>21</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-c1>read</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>22</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-s1>e</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>position</span><span class=pl-kos>;</span><span class=pl-k>else</span> <span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>seekable</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>29</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-en>read</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>position</span><span class=pl-c1>+=</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>ha</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-c1>&gt;</span><span class=pl-s1>d</span><span class=pl-c1>||</span><span class=pl-c1>0</span><span class=pl-c1>&gt;</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>22</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>null<span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fd</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>9</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>flags</span>&amp;<span class=pl-c1>2097155</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>9</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-v>O</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>21</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-c1>write</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>22</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>flags</span>&amp;<span class=pl-c1>1024</span><span class=pl-c1>&amp;&amp;</span><span class=pl-v>Nc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-c1>2</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-s1>e</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>position</span><span class=pl-kos>;</span><span class=pl-k>else</span> <span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>seekable</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>29</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-en>write</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>k</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>position</span><span class=pl-c1>+=</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>path</span><span class=pl-c1>&amp;&amp;</span><span class=pl-v>T</span><span class=pl-kos>.</span><span class=pl-c1>onWriteToFile</span><span class=pl-kos>)</span><span class=pl-v>T</span><span class=pl-kos>.</span><span class=pl-en>onWriteToFile</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>path</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>m</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-smi>console</span><span class=pl-kos>.</span><span class=pl-en>log</span><span class=pl-kos>(</span><span class=pl-s>&quot;FS.trackingDelegate[&#39;onWriteToFile&#39;](&#39;&quot;</span><span class=pl-c1>+</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>path</span><span class=pl-c1>+</span><span class=pl-s>&quot;&#39;) threw an exception: &quot;</span><span class=pl-c1>+</span><span class=pl-s1>m</span><span class=pl-kos>.</span><span class=pl-c1>message</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-v>Oc</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-v>M</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>rc</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>rc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>message</span><span class=pl-c1>=</span><span class=pl-s>&quot;FS error&quot;</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-v>M</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-c1>=</span><span class=pl-v>Error</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-v>M</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-kos>.</span><span class=pl-c1>constructor</span><span class=pl-c1>=</span><span class=pl-v>M</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-kos>.</span><span class=pl-en>forEach</span><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>Mb</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Mb</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>.</span><span class=pl-c1>stack</span><span class=pl-c1>=</span><span class=pl-s>&quot;&lt;generic error, no stack&gt;&quot;</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>var</span> <span class=pl-v>Pc</span><span class=pl-kos>;</span><span class=pl-k>function</span> <span class=pl-en>da</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>c</span>|=<span class=pl-c1>365</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>c</span>|=<span class=pl-c1>146</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>c</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-v>Qc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-en>n</span><span class=pl-kos>(</span><span class=pl-s>&quot;/dev&quot;</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-en>da</span><span class=pl-kos>(</span>!!<span class=pl-s1>b</span><span class=pl-kos>,</span>!!<span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Rc</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-v>Rc</span><span class=pl-c1>=</span><span class=pl-c1>64</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-v>Rc</span><span class=pl-c1>++</span><span class=pl-c1>&lt;&lt;</span><span class=pl-c1>8</span>|<span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-v>Gb</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-en>open</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>seekable</span><span class=pl-c1>=</span>!<span class=pl-c1>1</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>close</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>c</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>buffer</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>buffer</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>c</span><span class=pl-kos>(</span><span class=pl-c1>10</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>read</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>k</span><span class=pl-c1>&lt;</span><span class=pl-s1>e</span><span class=pl-kos>;</span><span class=pl-s1>k</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>m</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-v>S</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>5</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-k>void</span> <span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>m</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>11</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>null<span class=pl-c1>===</span><span class=pl-s1>m</span><span class=pl-c1>||</span><span class=pl-k>void</span> <span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>m</span><span class=pl-kos>)</span><span class=pl-k>break</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-c1>++</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>[</span><span class=pl-s1>d</span><span class=pl-c1>+</span><span class=pl-s1>k</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>m</span><span class=pl-kos>}</span><span class=pl-s1>g</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>timestamp</span><span class=pl-c1>=</span><span class=pl-v>Date</span><span class=pl-kos>.</span><span class=pl-en>now</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>g</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>write</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-c1>&lt;</span><span class=pl-s1>e</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-s1>c</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>d</span><span class=pl-c1>+</span><span class=pl-s1>g</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-v>K</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>5</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-s1>e</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>.</span><span class=pl-c1>timestamp</span><span class=pl-c1>=</span><span class=pl-v>Date</span><span class=pl-kos>.</span><span class=pl-en>now</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>g</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-code blob-code-inner js-file-line"><span class=pl-v>Hc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>var</span> <span class=pl-v>Rc</span><span class=pl-kos>,</span><span class=pl-v>W</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-v>Zb</span><span class=pl-kos>,</span><span class=pl-v>Fc</span><span class=pl-kos>,</span><span class=pl-v>Mc</span><span class=pl-kos>,</span><span class=pl-v>Sc</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-v>Tc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-c1>&amp;&amp;</span><span class=pl-en>vb</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span>!==<span class=pl-en>vb</span><span class=pl-kos>(</span><span class=pl-v>Ub</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>return</span><span class=pl-c1>-</span><span class=pl-c1>20</span><span class=pl-kos>;</span><span class=pl-k>throw</span> <span class=pl-s1>e</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>dev</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>4</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>8</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>ino</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>12</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>mode</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>16</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>nlink</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>20</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>uid</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>24</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>gid</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>28</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>rdev</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>32</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-v>C</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>size</span>&gt;&gt;&gt;<span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-kos>(</span><span class=pl-v>D</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>size</span><span class=pl-kos>,</span><span class=pl-c1>1</span>&lt;=<span class=pl-c1>+</span><span class=pl-v>Na</span><span class=pl-kos>(</span><span class=pl-v>D</span><span class=pl-kos>)</span>?<span class=pl-c1>0</span><span class=pl-c1>&lt;</span><span class=pl-v>D</span>?<span class=pl-kos>(</span><span class=pl-v>Oa</span><span class=pl-kos>(</span><span class=pl-c1>+</span><span class=pl-v>Pa</span><span class=pl-kos>(</span><span class=pl-v>D</span>/<span class=pl-c1>4294967296</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>4294967295</span><span class=pl-kos>)</span>|<span class=pl-c1>0</span><span class=pl-kos>)</span>&gt;&gt;&gt;<span class=pl-c1>0</span>:~~<span class=pl-c1>+</span><span class=pl-v>Qa</span><span class=pl-kos>(</span><span class=pl-kos>(</span><span class=pl-v>D</span><span class=pl-c1>-</span><span class=pl-c1>+</span><span class=pl-kos>(</span>~~<span class=pl-v>D</span>&gt;&gt;&gt;<span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>)</span>/<span class=pl-c1>4294967296</span><span class=pl-kos>)</span>&gt;&gt;&gt;<span class=pl-c1>0</span>:<span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>40</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-v>C</span><span class=pl-kos>[</span><span class=pl-c1>0</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>44</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-v>C</span><span class=pl-kos>[</span><span class=pl-c1>1</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>48</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>4096</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>52</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>blocks</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>56</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>atime</span><span class=pl-kos>.</span><span class=pl-en>getTime</span><span class=pl-kos>(</span><span class=pl-kos>)</span>/<span class=pl-c1>1E3</span>|<span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>60</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>64</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>mtime</span><span class=pl-kos>.</span><span class=pl-en>getTime</span><span class=pl-kos>(</span><span class=pl-kos>)</span>/</td>
      </tr>
      <tr>
        <td id="L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="LC153" class="blob-code blob-code-inner js-file-line"><span class=pl-c1>1E3</span>|<span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>68</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>72</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>ctime</span><span class=pl-kos>.</span><span class=pl-en>getTime</span><span class=pl-kos>(</span><span class=pl-kos>)</span>/<span class=pl-c1>1E3</span>|<span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>76</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-v>C</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>ino</span>&gt;&gt;&gt;<span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-kos>(</span><span class=pl-v>D</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>ino</span><span class=pl-kos>,</span><span class=pl-c1>1</span>&lt;=<span class=pl-c1>+</span><span class=pl-v>Na</span><span class=pl-kos>(</span><span class=pl-v>D</span><span class=pl-kos>)</span>?<span class=pl-c1>0</span><span class=pl-c1>&lt;</span><span class=pl-v>D</span>?<span class=pl-kos>(</span><span class=pl-v>Oa</span><span class=pl-kos>(</span><span class=pl-c1>+</span><span class=pl-v>Pa</span><span class=pl-kos>(</span><span class=pl-v>D</span>/<span class=pl-c1>4294967296</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>4294967295</span><span class=pl-kos>)</span>|<span class=pl-c1>0</span><span class=pl-kos>)</span>&gt;&gt;&gt;<span class=pl-c1>0</span>:~~<span class=pl-c1>+</span><span class=pl-v>Qa</span><span class=pl-kos>(</span><span class=pl-kos>(</span><span class=pl-v>D</span><span class=pl-c1>-</span><span class=pl-c1>+</span><span class=pl-kos>(</span>~~<span class=pl-v>D</span>&gt;&gt;&gt;<span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>)</span>/<span class=pl-c1>4294967296</span><span class=pl-kos>)</span>&gt;&gt;&gt;<span class=pl-c1>0</span>:<span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>80</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-v>C</span><span class=pl-kos>[</span><span class=pl-c1>0</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-c1>84</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-v>C</span><span class=pl-kos>[</span><span class=pl-c1>1</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-k>var</span> <span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>function</span> <span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>+=</span><span class=pl-c1>4</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-v>X</span><span class=pl-c1>-</span><span class=pl-c1>4</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-v>Z</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-v>G</span><span class=pl-kos>(</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-v>Uc</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>Q</span><span class=pl-kos>[</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>9</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-v>Ja</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>l</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="LC154" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-v>Vc</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>G</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-v>L</span><span class=pl-kos>.</span><span class=pl-en>hasOwnProperty</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-v>Vc</span><span class=pl-kos>.</span><span class=pl-c1>ub</span><span class=pl-c1>&amp;&amp;</span><span class=pl-en>ca</span><span class=pl-kos>(</span><span class=pl-v>Vc</span><span class=pl-kos>.</span><span class=pl-c1>ub</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>L</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-en>la</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-c1>+</span><span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Ya</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-c1>&amp;&amp;</span><span class=pl-en>t</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>l</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Vc</span><span class=pl-kos>.</span><span class=pl-c1>ub</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-v>Vc</span><span class=pl-kos>.</span><span class=pl-c1>ub</span><span class=pl-kos>}</span><span class=pl-en>t</span><span class=pl-kos>(</span><span class=pl-s>&quot;GMT&quot;</span><span class=pl-kos>,</span><span class=pl-v>F</span><span class=pl-kos>,</span><span class=pl-c1>60208</span><span class=pl-kos>,</span><span class=pl-c1>4</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="LC155" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-v>Wc</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>function</span> <span class=pl-en>a</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>toTimeString</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>match</span><span class=pl-kos>(</span><span class=pl-pds>/<span class=pl-cce>\(</span><span class=pl-kos>(</span><span class=pl-kos>[</span>A-Za-z <span class=pl-kos>]</span><span class=pl-c1>+</span><span class=pl-kos>)</span><span class=pl-cce>\)</span><span class=pl-cce>$</span>/</span><span class=pl-kos>)</span><span class=pl-kos>)</span>?<span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-c1>1</span><span class=pl-kos>]</span>:<span class=pl-s>&quot;GMT&quot;</span><span class=pl-kos>}</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-v>Xc</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>Xc</span><span class=pl-c1>=</span>!<span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-v>Yc</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>60</span>*<span class=pl-kos>(</span><span class=pl-k>new</span> <span class=pl-v>Date</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>getTimezoneOffset</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Date</span><span class=pl-kos>(</span><span class=pl-c1>2E3</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Date</span><span class=pl-kos>(</span><span class=pl-c1>2E3</span><span class=pl-kos>,</span><span class=pl-c1>6</span><span class=pl-kos>,</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-v>Zc</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-v>Number</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>getTimezoneOffset</span><span class=pl-kos>(</span><span class=pl-kos>)</span>!=<span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>getTimezoneOffset</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-en>a</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-en>a</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-en>ba</span><span class=pl-kos>(</span><span class=pl-en>aa</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-en>ba</span><span class=pl-kos>(</span><span class=pl-en>aa</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>getTimezoneOffset</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-c1>&lt;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>getTimezoneOffset</span><span class=pl-kos>(</span><span class=pl-kos>)</span>?<span class=pl-kos>(</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-en>$c</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-en>$c</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-c1>+</span><span class=pl-c1>4</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-kos>)</span>:<span class=pl-kos>(</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-en>$c</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-en>$c</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-c1>+</span><span class=pl-c1>4</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-k>var</span> <span class=pl-v>Xc</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="LC156" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>ad</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span>/=<span class=pl-c1>1E3</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-kos>(</span><span class=pl-s1>ya</span><span class=pl-c1>||</span><span class=pl-s1>x</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>self</span><span class=pl-kos>.</span><span class=pl-c1>performance</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>self</span><span class=pl-kos>.</span><span class=pl-c1>performance</span><span class=pl-kos>.</span><span class=pl-c1>now</span><span class=pl-kos>)</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>self</span><span class=pl-kos>.</span><span class=pl-c1>performance</span><span class=pl-kos>.</span><span class=pl-en>now</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>self</span><span class=pl-kos>.</span><span class=pl-c1>performance</span><span class=pl-kos>.</span><span class=pl-en>now</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-c1>-</span><span class=pl-s1>b</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>else</span> <span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>Date</span><span class=pl-kos>.</span><span class=pl-en>now</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Date</span><span class=pl-kos>.</span><span class=pl-en>now</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-c1>-</span><span class=pl-s1>b</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>_usleep</span><span class=pl-c1>=</span><span class=pl-s1>ad</span><span class=pl-kos>;</span><span class=pl-v>Oc</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>R</span><span class=pl-c1>=</span><span class=pl-v>Array</span><span class=pl-kos>(</span><span class=pl-c1>4096</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Gc</span><span class=pl-kos>(</span><span class=pl-v>N</span><span class=pl-kos>,</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>V</span><span class=pl-kos>(</span><span class=pl-s>&quot;/tmp&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>V</span><span class=pl-kos>(</span><span class=pl-s>&quot;/home&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>V</span><span class=pl-kos>(</span><span class=pl-s>&quot;/home/web_user&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="LC157" class="blob-code blob-code-inner js-file-line"><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>V</span><span class=pl-kos>(</span><span class=pl-s>&quot;/dev&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Gb</span><span class=pl-kos>(</span><span class=pl-c1>259</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-en>read</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>write</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>k</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Hc</span><span class=pl-kos>(</span><span class=pl-s>&quot;/dev/null&quot;</span><span class=pl-kos>,</span><span class=pl-c1>259</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Fb</span><span class=pl-kos>(</span><span class=pl-c1>1280</span><span class=pl-kos>,</span><span class=pl-v>Ib</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Fb</span><span class=pl-kos>(</span><span class=pl-c1>1536</span><span class=pl-kos>,</span><span class=pl-v>Jb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Hc</span><span class=pl-kos>(</span><span class=pl-s>&quot;/dev/tty&quot;</span><span class=pl-kos>,</span><span class=pl-c1>1280</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Hc</span><span class=pl-kos>(</span><span class=pl-s>&quot;/dev/tty1&quot;</span><span class=pl-kos>,</span><span class=pl-c1>1536</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s>&quot;object&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>crypto</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s>&quot;function&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>crypto</span><span class=pl-kos>.</span><span class=pl-c1>getRandomValues</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Uint8Array</span><span class=pl-kos>(</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-en>b</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>crypto</span><span class=pl-kos>.</span><span class=pl-en>getRandomValues</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-c1>0</span><span class=pl-kos>]</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-k>else</span> <span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>za</span><span class=pl-kos>)</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-en>require</span><span class=pl-kos>(</span><span class=pl-s>&quot;crypto&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>b</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>randomBytes</span><span class=pl-kos>(</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>[</span><span class=pl-c1>0</span><span class=pl-kos>]</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-s1>b</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-en>b</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s>&quot;random_device&quot;</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Qc</span><span class=pl-kos>(</span><span class=pl-s>&quot;random&quot;</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Qc</span><span class=pl-kos>(</span><span class=pl-s>&quot;urandom&quot;</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>V</span><span class=pl-kos>(</span><span class=pl-s>&quot;/dev/shm&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="LC158" class="blob-code blob-code-inner js-file-line"><span class=pl-v>V</span><span class=pl-kos>(</span><span class=pl-s>&quot;/dev/shm/tmp&quot;</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>V</span><span class=pl-kos>(</span><span class=pl-s>&quot;/proc&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>V</span><span class=pl-kos>(</span><span class=pl-s>&quot;/proc/self&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>V</span><span class=pl-kos>(</span><span class=pl-s>&quot;/proc/self/fd&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Gc</span><span class=pl-kos>(</span><span class=pl-kos>{</span><span class=pl-en>mb</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>Lb</span><span class=pl-kos>(</span><span class=pl-s>&quot;/proc/self&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;fd&quot;</span><span class=pl-kos>,</span><span class=pl-c1>16895</span><span class=pl-kos>,</span><span class=pl-c1>73</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-en>lookup</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>Q</span><span class=pl-kos>[</span><span class=pl-c1>+</span><span class=pl-s1>c</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>9</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-c1>parent</span>:null<span class=pl-kos>,</span><span class=pl-c1>mb</span>:<span class=pl-kos>{</span><span class=pl-c1>Wb</span>:<span class=pl-s>&quot;fake&quot;</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>fb</span>:<span class=pl-kos>{</span><span class=pl-en>readlink</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>path</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>parent</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s>&quot;/proc/self/fd&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-v>Aa</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>fs</span><span class=pl-c1>=</span><span class=pl-en>require</span><span class=pl-kos>(</span><span class=pl-s>&quot;fs&quot;</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-v>Ob</span><span class=pl-c1>=</span><span class=pl-en>require</span><span class=pl-kos>(</span><span class=pl-s>&quot;path&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>P</span><span class=pl-kos>.</span><span class=pl-en>sc</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>function</span> <span class=pl-en>aa</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Array</span><span class=pl-kos>(</span><span class=pl-en>la</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-c1>+</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-en>t</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>c</span><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="LC159" class="blob-code blob-code-inner js-file-line"><span class=pl-k>var</span> <span class=pl-s1>dd</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>asm</span><span class=pl-kos>(</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>n</span>:<span class=pl-s1>z</span><span class=pl-kos>,</span><span class=pl-en>l</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>i</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>h</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>g</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>f</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>e</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>d</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>C</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>B</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>A</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>z</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>y</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span></td>
      </tr>
      <tr>
        <td id="L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="LC160" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>c</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>b</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>k</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>j</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>x</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>w</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>v</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>u</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>m</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s>&quot;Assertion failed: &quot;</span><span class=pl-c1>+</span><span class=pl-v>G</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-c1>+</span><span class=pl-s>&quot;, at: &quot;</span><span class=pl-c1>+</span><span class=pl-kos>[</span><span class=pl-s1>b</span>?<span class=pl-v>G</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span>:<span class=pl-s>&quot;unknown filename&quot;</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span>?<span class=pl-v>G</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span>:<span class=pl-s>&quot;unknown function&quot;</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>ha</span>:<span class=pl-s1>tb</span><span class=pl-kos>,</span><span class=pl-c1>u</span>:<span class=pl-v>Cb</span><span class=pl-kos>,</span><span class=pl-en>ga</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Z</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>sa</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>d</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>fa</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span></td>
      </tr>
      <tr>
        <td id="L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="LC161" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Uc</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-c1>fsync</span>?<span class=pl-c1>-</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-en>fsync</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span>:<span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>d</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>ea</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Uc</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-c1>4294967296</span>*<span class=pl-s1>d</span><span class=pl-c1>+</span><span class=pl-kos>(</span><span class=pl-s1>e</span>&gt;&gt;&gt;<span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-c1>9007199254740992</span>&gt;=<span class=pl-s1>a</span><span class=pl-c1>||</span><span class=pl-c1>9007199254740992</span>&lt;=<span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-k>return</span><span class=pl-c1>-</span><span class=pl-c1>75</span><span class=pl-kos>;</span><span class=pl-v>Nc</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>C</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>position</span>&gt;&gt;&gt;<span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-kos>(</span><span class=pl-v>D</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>position</span><span class=pl-kos>,</span><span class=pl-c1>1</span>&lt;=<span class=pl-c1>+</span><span class=pl-v>Na</span><span class=pl-kos>(</span><span class=pl-v>D</span><span class=pl-kos>)</span>?<span class=pl-c1>0</span><span class=pl-c1>&lt;</span><span class=pl-v>D</span>?<span class=pl-kos>(</span><span class=pl-v>Oa</span><span class=pl-kos>(</span><span class=pl-c1>+</span><span class=pl-v>Pa</span><span class=pl-kos>(</span><span class=pl-v>D</span>/<span class=pl-c1>4294967296</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>4294967295</span><span class=pl-kos>)</span>|<span class=pl-c1>0</span><span class=pl-kos>)</span>&gt;&gt;&gt;<span class=pl-c1>0</span>:~~<span class=pl-c1>+</span><span class=pl-v>Qa</span><span class=pl-kos>(</span><span class=pl-kos>(</span><span class=pl-v>D</span><span class=pl-c1>-</span><span class=pl-c1>+</span><span class=pl-kos>(</span>~~<span class=pl-v>D</span>&gt;&gt;&gt;<span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>)</span>/<span class=pl-c1>4294967296</span><span class=pl-kos>)</span>&gt;&gt;&gt;<span class=pl-c1>0</span>:<span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>g</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-v>C</span><span class=pl-kos>[</span><span class=pl-c1>0</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>g</span><span class=pl-c1>+</span><span class=pl-c1>4</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-v>C</span><span class=pl-kos>[</span><span class=pl-c1>1</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Jb</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>k</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>Jb</span><span class=pl-c1>=</span>null<span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>m</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="LC162" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>m</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>m</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>m</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>da</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Z</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>fa</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>e</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>ca</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-k>return</span><span class=pl-c1>-</span><span class=pl-c1>22</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-c1>&lt;</span><span class=pl-en>la</span><span class=pl-kos>(</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>)</span><span class=pl-c1>+</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-k>return</span><span class=pl-c1>-</span><span class=pl-c1>34</span><span class=pl-kos>;</span><span class=pl-en>t</span><span class=pl-kos>(</span><span class=pl-s>&quot;/&quot;</span><span class=pl-kos>,</span><span class=pl-v>F</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>c</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>e</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>ba</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span>a:<span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>m</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>m</span>&lt;&lt;=<span class=pl-c1>12</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span>!<span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span>!==<span class=pl-kos>(</span><span class=pl-s1>g</span>&amp;<span class=pl-c1>16</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>0</span>!==<span class=pl-s1>c</span>%<span class=pl-c1>16384</span><span class=pl-kos>)</span><span class=pl-k>var</span> <span class=pl-s1>r</span><span class=pl-c1>=</span><span class=pl-c1>-</span><span class=pl-c1>22</span><span class=pl-kos>;</span><span class=pl-k>else</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span>!==<span class=pl-kos>(</span><span class=pl-s1>g</span>&amp;<span class=pl-c1>32</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>v</span><span class=pl-c1>=</span><span class=pl-en>bd</span><span class=pl-kos>(</span><span class=pl-c1>16384</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>v</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>r</span><span class=pl-c1>=</span><span class=pl-c1>-</span><span class=pl-c1>12</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="LC163" class="blob-code blob-code-inner js-file-line"><span class=pl-k>break</span> a<span class=pl-kos>}</span><span class=pl-en>cd</span><span class=pl-kos>(</span><span class=pl-s1>v</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span>!<span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-k>else</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-v>K</span><span class=pl-c1>=</span><span class=pl-v>Q</span><span class=pl-kos>[</span><span class=pl-s1>k</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-v>K</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>r</span><span class=pl-c1>=</span><span class=pl-c1>-</span><span class=pl-c1>9</span><span class=pl-kos>;</span><span class=pl-k>break</span> a<span class=pl-kos>}</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>F</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span>!==<span class=pl-kos>(</span><span class=pl-s1>e</span>&amp;<span class=pl-c1>2</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>g</span>&amp;<span class=pl-c1>2</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>2</span>!==<span class=pl-kos>(</span><span class=pl-v>K</span><span class=pl-kos>.</span><span class=pl-c1>flags</span>&amp;<span class=pl-c1>2097155</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>13</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>1</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-v>K</span><span class=pl-kos>.</span><span class=pl-c1>flags</span>&amp;<span class=pl-c1>2097155</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>13</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-v>K</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-c1>Db</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>19</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-v>J</span><span class=pl-c1>=</span><span class=pl-v>K</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-en>Db</span><span class=pl-kos>(</span><span class=pl-v>K</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>m</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>v</span><span class=pl-c1>=</span><span class=pl-v>J</span><span class=pl-kos>.</span><span class=pl-c1>pc</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>J</span><span class=pl-kos>.</span><span class=pl-c1>Gb</span><span class=pl-kos>}</span><span class=pl-v>Sc</span><span class=pl-kos>[</span><span class=pl-s1>v</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-c1>nc</span>:<span class=pl-s1>v</span><span class=pl-kos>,</span><span class=pl-c1>mc</span>:<span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-c1>Gb</span>:<span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-c1>fd</span>:<span class=pl-s1>k</span><span class=pl-kos>,</span><span class=pl-c1>flags</span>:<span class=pl-s1>g</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>r</span><span class=pl-c1>=</span><span class=pl-s1>v</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-s1>r</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-v>S</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-v>S</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-v>S</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-v>S</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>aa</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-v>Q</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>9</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>flags</span>&amp;<span class=pl-c1>2097155</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>22</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Lc</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==</td>
      </tr>
      <tr>
        <td id="L164" class="blob-num js-line-number" data-line-number="164"></td>
        <td id="LC164" class="blob-code blob-code-inner js-file-line"><span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>g</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>t</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Z</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-v>Tc</span><span class=pl-kos>(</span><span class=pl-s1>pa</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>e</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>$</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Z</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-v>Tc</span><span class=pl-kos>(</span><span class=pl-v>Jc</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>e</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>_</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Uc</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-v>Tc</span><span class=pl-kos>(</span><span class=pl-s1>pa</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>path</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>e</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>Z</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-c1>42</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>Y</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>X</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span></td>
      </tr>
      <tr>
        <td id="L165" class="blob-num js-line-number" data-line-number="165"></td>
        <td id="LC165" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Q</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>9</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Kc</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>e</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>W</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Z</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Kc</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>d</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>o</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Uc</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>switch</span><span class=pl-kos>(</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>case</span> <span class=pl-c1>0</span>:<span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-c1>&gt;</span><span class=pl-s1>d</span>?<span class=pl-c1>-</span><span class=pl-c1>22</span>:<span class=pl-en>p</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>path</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>flags</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-c1>fd</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>1</span>:<span class=pl-k>case</span> <span class=pl-c1>2</span>:<span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>3</span>:<span class=pl-k>return</span> <span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>flags</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>4</span>:<span class=pl-k>return</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>flags</span>|=<span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>12</span>:<span class=pl-k>return</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-v>Ma</span><span class=pl-kos>[</span><span class=pl-s1>d</span><span class=pl-c1>+</span><span class=pl-c1>0</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>1</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>2</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>13</span>:<span class=pl-k>case</span> <span class=pl-c1>14</span>:<span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L166" class="blob-num js-line-number" data-line-number="166"></td>
        <td id="LC166" class="blob-code blob-code-inner js-file-line"><span class=pl-k>case</span> <span class=pl-c1>16</span>:<span class=pl-k>case</span> <span class=pl-c1>8</span>:<span class=pl-k>return</span><span class=pl-c1>-</span><span class=pl-c1>22</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>9</span>:<span class=pl-k>return</span> <span class=pl-v>Cb</span><span class=pl-kos>(</span><span class=pl-c1>22</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-k>default</span>:<span class=pl-k>return</span><span class=pl-c1>-</span><span class=pl-c1>22</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>e</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>V</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Uc</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-en>qa</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>l</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>g</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>U</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Z</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>d</span>&amp;<span class=pl-c1>-</span><span class=pl-c1>8</span><span class=pl-kos>)</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-c1>-</span><span class=pl-c1>22</span><span class=pl-kos>;</span><span class=pl-k>else</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>g</span><span class=pl-kos>;</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-v>U</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>vb</span>:!<span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>)</span>?<span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s>&quot;&quot;</span><span class=pl-kos>,</span><span class=pl-s1>d</span>&amp;<span class=pl-c1>4</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>+=</span><span class=pl-s>&quot;r&quot;</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span>&amp;<span class=pl-c1>2</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>+=</span><span class=pl-s>&quot;w&quot;</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span>&amp;<span class=pl-c1>1</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>+=</span><span class=pl-s>&quot;x&quot;</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-c1>&amp;&amp;</span><span class=pl-v>Yb</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>)</span>?<span class=pl-c1>-</span><span class=pl-c1>13</span>:<span class=pl-c1>0</span><span class=pl-kos>)</span>:<span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-c1>-</span><span class=pl-c1>2</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-s1>e</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>k</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span></td>
      </tr>
      <tr>
        <td id="L167" class="blob-num js-line-number" data-line-number="167"></td>
        <td id="LC167" class="blob-code blob-code-inner js-file-line"><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>k</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>T</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Z</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-en>vb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s>&quot;/&quot;</span><span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>]</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>substr</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>V</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>e</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>S</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Uc</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-en>ha</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>l</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>g</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>R</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Z</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>U</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>parent</span>:!<span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-v>Ab</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-v>Nb</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-en>cc</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>,</span>!<span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-c1>rmdir</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>wb</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>16</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-v>T</span><span class=pl-kos>.</span><span class=pl-c1>willDeletePath</span><span class=pl-c1>&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L168" class="blob-num js-line-number" data-line-number="168"></td>
        <td id="LC168" class="blob-code blob-code-inner js-file-line"><span class=pl-v>T</span><span class=pl-kos>.</span><span class=pl-en>willDeletePath</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>m</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-smi>console</span><span class=pl-kos>.</span><span class=pl-en>log</span><span class=pl-kos>(</span><span class=pl-s>&quot;FS.trackingDelegate[&#39;willDeletePath&#39;](&#39;&quot;</span><span class=pl-c1>+</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-s>&quot;&#39;) threw an exception: &quot;</span><span class=pl-c1>+</span><span class=pl-s1>m</span><span class=pl-kos>.</span><span class=pl-c1>message</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-en>rmdir</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Xb</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-v>T</span><span class=pl-kos>.</span><span class=pl-c1>onDeletePath</span><span class=pl-kos>)</span><span class=pl-v>T</span><span class=pl-kos>.</span><span class=pl-en>onDeletePath</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>m</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-smi>console</span><span class=pl-kos>.</span><span class=pl-en>log</span><span class=pl-kos>(</span><span class=pl-s>&quot;FS.trackingDelegate[&#39;onDeletePath&#39;](&#39;&quot;</span><span class=pl-c1>+</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-s>&quot;&#39;) threw an exception: &quot;</span><span class=pl-c1>+</span><span class=pl-s1>m</span><span class=pl-kos>.</span><span class=pl-c1>message</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>m</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>m</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>m</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>m</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>Q</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Z</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-en>p</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-c1>fd</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>g</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>s</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span></td>
      </tr>
      <tr>
        <td id="L169" class="blob-num js-line-number" data-line-number="169"></td>
        <td id="LC169" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Uc</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>ia</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>d</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>P</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Z</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span>&gt;=<span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-k>var</span> <span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-c1>-</span><span class=pl-c1>22</span><span class=pl-kos>;</span><span class=pl-k>else</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-v>Tb</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>m</span><span class=pl-c1>=</span><span class=pl-v>Math</span><span class=pl-kos>.</span><span class=pl-en>min</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-en>la</span><span class=pl-kos>(</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>r</span><span class=pl-c1>=</span><span class=pl-s1>l</span><span class=pl-kos>[</span><span class=pl-s1>d</span><span class=pl-c1>+</span><span class=pl-s1>m</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-en>t</span><span class=pl-kos>(</span><span class=pl-s1>k</span><span class=pl-kos>,</span><span class=pl-v>F</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>+</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>l</span><span class=pl-kos>[</span><span class=pl-s1>d</span><span class=pl-c1>+</span><span class=pl-s1>m</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>r</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-s1>m</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-s1>g</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>v</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>v</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>v</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>v</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>O</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-c1>===</span><span class=pl-s1>c</span><span class=pl-c1>||</span><span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-c1>-</span><span class=pl-c1>22</span><span class=pl-kos>;</span><span class=pl-k>else</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-v>Sc</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>d</span><span class=pl-c1>===</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>mc</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-v>Q</span><span class=pl-kos>[</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>fd</span><span class=pl-kos>]</span><span class=pl-kos>,</span><span class=pl-s1>m</span><span class=pl-c1>=</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>flags</span><span class=pl-kos>,</span><span class=pl-s1>r</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Uint8Array</span><span class=pl-kos>(</span><span class=pl-v>F</span><span class=pl-kos>.</span><span class=pl-en>subarray</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>k</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>k</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-c1>Eb</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>k</span><span class=pl-kos>.</span><span class=pl-c1>ib</span><span class=pl-kos>.</span><span class=pl-en>Eb</span><span class=pl-kos>(</span><span class=pl-s1>k</span><span class=pl-kos>,</span></td>
      </tr>
      <tr>
        <td id="L170" class="blob-num js-line-number" data-line-number="170"></td>
        <td id="LC170" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>r</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>m</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Sc</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-kos>]</span><span class=pl-c1>=</span>null<span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>Gb</span><span class=pl-c1>&amp;&amp;</span><span class=pl-en>ca</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>nc</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-s1>e</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>v</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>v</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>v</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>v</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>N</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>X</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Y</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-v>Q</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-k>throw</span> <span class=pl-k>new</span> <span class=pl-v>M</span><span class=pl-kos>(</span><span class=pl-c1>9</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>fa</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span>!==<span class=pl-k>typeof</span> <span class=pl-v>W</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>g</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-c1>||</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>M</span>:<span class=pl-v>Ja</span><span class=pl-kos>,</span><span class=pl-en>L</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>F</span><span class=pl-kos>.</span><span class=pl-en>set</span><span class=pl-kos>(</span><span class=pl-v>F</span><span class=pl-kos>.</span><span class=pl-en>subarray</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-c1>+</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>K</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>2147418112</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-k>return</span>!<span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>Math</span><span class=pl-kos>.</span><span class=pl-en>max</span><span class=pl-kos>(</span><span class=pl-v>Ja</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>16777216</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-kos>)</span><span class=pl-c1>536870912</span>&gt;=<span class=pl-s1>b</span>?<span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-en>$a</span><span class=pl-kos>(</span><span class=pl-c1>2</span>*<span class=pl-s1>b</span><span class=pl-kos>)</span>:<span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>Math</span><span class=pl-kos>.</span><span class=pl-en>min</span><span class=pl-kos>(</span><span class=pl-en>$a</span><span class=pl-kos>(</span><span class=pl-kos>(</span><span class=pl-c1>3</span>*<span class=pl-s1>b</span><span class=pl-c1>+</span><span class=pl-c1>2147483648</span><span class=pl-kos>)</span>/<span class=pl-c1>4</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>2147418112</span><span class=pl-kos>)</span><span class=pl-kos>;</span>a:<span class=pl-kos>{</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-v>E</span><span class=pl-kos>.</span><span class=pl-en>grow</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>-</span><span class=pl-s1>buffer</span><span class=pl-kos>.</span><span class=pl-c1>byteLength</span><span class=pl-c1>+</span></td>
      </tr>
      <tr>
        <td id="L171" class="blob-num js-line-number" data-line-number="171"></td>
        <td id="LC171" class="blob-code blob-code-inner js-file-line"><span class=pl-c1>65535</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>16</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>ab</span><span class=pl-kos>(</span><span class=pl-v>E</span><span class=pl-kos>.</span><span class=pl-c1>buffer</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-k>break</span> a<span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-k>void</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-s1>c</span>?!<span class=pl-c1>0</span>:!<span class=pl-c1>1</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>r</span>:<span class=pl-v>Vc</span><span class=pl-kos>,</span><span class=pl-en>q</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>Date</span><span class=pl-kos>.</span><span class=pl-en>now</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>b</span>/<span class=pl-c1>1E3</span>|<span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>+</span><span class=pl-c1>4</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>b</span>%<span class=pl-c1>1E3</span>*<span class=pl-c1>1E3</span>|<span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>J</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-v>Math</span><span class=pl-kos>.</span><span class=pl-en>log</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span>/<span class=pl-v>Math</span><span class=pl-kos>.</span><span class=pl-c1>LN10</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>p</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s>&quot;trap!&quot;</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>I</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-v>Wc</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Date</span><span class=pl-kos>(</span><span class=pl-c1>1E3</span>*<span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-c1>15040</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>getSeconds</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-c1>15041</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>getMinutes</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-c1>15042</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>getHours</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-c1>15043</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>getDate</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-c1>15044</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>getMonth</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-c1>15045</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>getFullYear</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-c1>-</span><span class=pl-c1>1900</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-c1>15046</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>getDay</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-k>new</span> <span class=pl-v>Date</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>getFullYear</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-c1>15047</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>getTime</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-c1>-</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>getTime</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span>/</td>
      </tr>
      <tr>
        <td id="L172" class="blob-num js-line-number" data-line-number="172"></td>
        <td id="LC172" class="blob-code blob-code-inner js-file-line"><span class=pl-c1>864E5</span>|<span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-c1>15049</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>-</span><span class=pl-kos>(</span><span class=pl-c1>60</span>*<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>getTimezoneOffset</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-kos>(</span><span class=pl-k>new</span> <span class=pl-v>Date</span><span class=pl-kos>(</span><span class=pl-c1>2E3</span><span class=pl-kos>,</span><span class=pl-c1>6</span><span class=pl-kos>,</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>getTimezoneOffset</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>getTimezoneOffset</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-kos>(</span><span class=pl-s1>c</span>!=<span class=pl-s1>b</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>getTimezoneOffset</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-c1>==</span><span class=pl-v>Math</span><span class=pl-kos>.</span><span class=pl-en>min</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>)</span>|<span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-c1>15048</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-en>$c</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-c1>+</span><span class=pl-kos>(</span><span class=pl-s1>a</span>?<span class=pl-c1>4</span>:<span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-c1>15050</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-c1>60160</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>H</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-v>Cb</span><span class=pl-kos>(</span><span class=pl-c1>22</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>+</span><span class=pl-c1>4</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-c1>&gt;</span><span class=pl-s1>a</span><span class=pl-c1>||</span><span class=pl-c1>999999999</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span><span class=pl-c1>||</span><span class=pl-c1>0</span><span class=pl-c1>&gt;</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-v>Cb</span><span class=pl-kos>(</span><span class=pl-c1>22</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-c1>0</span>!==<span class=pl-s1>b</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-c1>+</span><span class=pl-c1>4</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-en>ad</span><span class=pl-kos>(</span><span class=pl-c1>1E6</span>*<span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-s1>a</span>/<span class=pl-c1>1E3</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>G</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>switch</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>case</span> <span class=pl-c1>30</span>:<span class=pl-k>return</span> <span class=pl-c1>16384</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>85</span>:<span class=pl-k>return</span> <span class=pl-c1>131068</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>132</span>:<span class=pl-k>case</span> <span class=pl-c1>133</span>:<span class=pl-k>case</span> <span class=pl-c1>12</span>:<span class=pl-k>case</span> <span class=pl-c1>137</span>:<span class=pl-k>case</span> <span class=pl-c1>138</span>:<span class=pl-k>case</span> <span class=pl-c1>15</span>:<span class=pl-k>case</span> <span class=pl-c1>235</span>:<span class=pl-k>case</span> <span class=pl-c1>16</span>:<span class=pl-k>case</span> <span class=pl-c1>17</span>:<span class=pl-k>case</span> <span class=pl-c1>18</span>:<span class=pl-k>case</span> <span class=pl-c1>19</span>:<span class=pl-k>case</span> <span class=pl-c1>20</span>:<span class=pl-k>case</span> <span class=pl-c1>149</span>:<span class=pl-k>case</span> <span class=pl-c1>13</span>:<span class=pl-k>case</span> <span class=pl-c1>10</span>:<span class=pl-k>case</span> <span class=pl-c1>236</span>:<span class=pl-k>case</span> <span class=pl-c1>153</span>:<span class=pl-k>case</span> <span class=pl-c1>9</span>:<span class=pl-k>case</span> <span class=pl-c1>21</span>:<span class=pl-k>case</span> <span class=pl-c1>22</span>:<span class=pl-k>case</span> <span class=pl-c1>159</span>:<span class=pl-k>case</span> <span class=pl-c1>154</span>:<span class=pl-k>case</span> <span class=pl-c1>14</span>:<span class=pl-k>case</span> <span class=pl-c1>77</span>:<span class=pl-k>case</span> <span class=pl-c1>78</span>:<span class=pl-k>case</span> <span class=pl-c1>139</span>:<span class=pl-k>case</span> <span class=pl-c1>80</span>:<span class=pl-k>case</span> <span class=pl-c1>81</span>:<span class=pl-k>case</span> <span class=pl-c1>82</span>:<span class=pl-k>case</span> <span class=pl-c1>68</span>:<span class=pl-k>case</span> <span class=pl-c1>67</span>:<span class=pl-k>case</span> <span class=pl-c1>164</span>:<span class=pl-k>case</span> <span class=pl-c1>11</span>:<span class=pl-k>case</span> <span class=pl-c1>29</span>:<span class=pl-k>case</span> <span class=pl-c1>47</span>:<span class=pl-k>case</span> <span class=pl-c1>48</span>:<span class=pl-k>case</span> <span class=pl-c1>95</span>:<span class=pl-k>case</span> <span class=pl-c1>52</span>:<span class=pl-k>case</span> <span class=pl-c1>51</span>:<span class=pl-k>case</span> <span class=pl-c1>46</span>:<span class=pl-k>return</span> <span class=pl-c1>200809</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L173" class="blob-num js-line-number" data-line-number="173"></td>
        <td id="LC173" class="blob-code blob-code-inner js-file-line"><span class=pl-k>case</span> <span class=pl-c1>79</span>:<span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>27</span>:<span class=pl-k>case</span> <span class=pl-c1>246</span>:<span class=pl-k>case</span> <span class=pl-c1>127</span>:<span class=pl-k>case</span> <span class=pl-c1>128</span>:<span class=pl-k>case</span> <span class=pl-c1>23</span>:<span class=pl-k>case</span> <span class=pl-c1>24</span>:<span class=pl-k>case</span> <span class=pl-c1>160</span>:<span class=pl-k>case</span> <span class=pl-c1>161</span>:<span class=pl-k>case</span> <span class=pl-c1>181</span>:<span class=pl-k>case</span> <span class=pl-c1>182</span>:<span class=pl-k>case</span> <span class=pl-c1>242</span>:<span class=pl-k>case</span> <span class=pl-c1>183</span>:<span class=pl-k>case</span> <span class=pl-c1>184</span>:<span class=pl-k>case</span> <span class=pl-c1>243</span>:<span class=pl-k>case</span> <span class=pl-c1>244</span>:<span class=pl-k>case</span> <span class=pl-c1>245</span>:<span class=pl-k>case</span> <span class=pl-c1>165</span>:<span class=pl-k>case</span> <span class=pl-c1>178</span>:<span class=pl-k>case</span> <span class=pl-c1>179</span>:<span class=pl-k>case</span> <span class=pl-c1>49</span>:<span class=pl-k>case</span> <span class=pl-c1>50</span>:<span class=pl-k>case</span> <span class=pl-c1>168</span>:<span class=pl-k>case</span> <span class=pl-c1>169</span>:<span class=pl-k>case</span> <span class=pl-c1>175</span>:<span class=pl-k>case</span> <span class=pl-c1>170</span>:<span class=pl-k>case</span> <span class=pl-c1>171</span>:<span class=pl-k>case</span> <span class=pl-c1>172</span>:<span class=pl-k>case</span> <span class=pl-c1>97</span>:<span class=pl-k>case</span> <span class=pl-c1>76</span>:<span class=pl-k>case</span> <span class=pl-c1>32</span>:<span class=pl-k>case</span> <span class=pl-c1>173</span>:<span class=pl-k>case</span> <span class=pl-c1>35</span>:<span class=pl-k>return</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>176</span>:<span class=pl-k>case</span> <span class=pl-c1>177</span>:<span class=pl-k>case</span> <span class=pl-c1>7</span>:<span class=pl-k>case</span> <span class=pl-c1>155</span>:<span class=pl-k>case</span> <span class=pl-c1>8</span>:<span class=pl-k>case</span> <span class=pl-c1>157</span>:<span class=pl-k>case</span> <span class=pl-c1>125</span>:<span class=pl-k>case</span> <span class=pl-c1>126</span>:<span class=pl-k>case</span> <span class=pl-c1>92</span>:<span class=pl-k>case</span> <span class=pl-c1>93</span>:<span class=pl-k>case</span> <span class=pl-c1>129</span>:<span class=pl-k>case</span> <span class=pl-c1>130</span>:<span class=pl-k>case</span> <span class=pl-c1>131</span>:<span class=pl-k>case</span> <span class=pl-c1>94</span>:<span class=pl-k>case</span> <span class=pl-c1>91</span>:<span class=pl-k>return</span> <span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>74</span>:<span class=pl-k>case</span> <span class=pl-c1>60</span>:<span class=pl-k>case</span> <span class=pl-c1>69</span>:<span class=pl-k>case</span> <span class=pl-c1>70</span>:<span class=pl-k>case</span> <span class=pl-c1>4</span>:<span class=pl-k>return</span> <span class=pl-c1>1024</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>31</span>:<span class=pl-k>case</span> <span class=pl-c1>42</span>:<span class=pl-k>case</span> <span class=pl-c1>72</span>:<span class=pl-k>return</span> <span class=pl-c1>32</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L174" class="blob-num js-line-number" data-line-number="174"></td>
        <td id="LC174" class="blob-code blob-code-inner js-file-line"><span class=pl-k>case</span> <span class=pl-c1>87</span>:<span class=pl-k>case</span> <span class=pl-c1>26</span>:<span class=pl-k>case</span> <span class=pl-c1>33</span>:<span class=pl-k>return</span> <span class=pl-c1>2147483647</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>34</span>:<span class=pl-k>case</span> <span class=pl-c1>1</span>:<span class=pl-k>return</span> <span class=pl-c1>47839</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>38</span>:<span class=pl-k>case</span> <span class=pl-c1>36</span>:<span class=pl-k>return</span> <span class=pl-c1>99</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>43</span>:<span class=pl-k>case</span> <span class=pl-c1>37</span>:<span class=pl-k>return</span> <span class=pl-c1>2048</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>0</span>:<span class=pl-k>return</span> <span class=pl-c1>2097152</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>3</span>:<span class=pl-k>return</span> <span class=pl-c1>65536</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>28</span>:<span class=pl-k>return</span> <span class=pl-c1>32768</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>44</span>:<span class=pl-k>return</span> <span class=pl-c1>32767</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>75</span>:<span class=pl-k>return</span> <span class=pl-c1>16384</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>39</span>:<span class=pl-k>return</span> <span class=pl-c1>1E3</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>89</span>:<span class=pl-k>return</span> <span class=pl-c1>700</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>71</span>:<span class=pl-k>return</span> <span class=pl-c1>256</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>40</span>:<span class=pl-k>return</span> <span class=pl-c1>255</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>2</span>:<span class=pl-k>return</span> <span class=pl-c1>100</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>180</span>:<span class=pl-k>return</span> <span class=pl-c1>64</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>25</span>:<span class=pl-k>return</span> <span class=pl-c1>20</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>5</span>:<span class=pl-k>return</span> <span class=pl-c1>16</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>6</span>:<span class=pl-k>return</span> <span class=pl-c1>6</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>73</span>:<span class=pl-k>return</span> <span class=pl-c1>4</span><span class=pl-kos>;</span><span class=pl-k>case</span> <span class=pl-c1>84</span>:<span class=pl-k>return</span><span class=pl-s>&quot;object&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>navigator</span>?<span class=pl-s1>navigator</span><span class=pl-kos>.</span><span class=pl-c1>hardwareConcurrency</span><span class=pl-c1>||</span><span class=pl-c1>1</span>:<span class=pl-c1>1</span><span class=pl-kos>}</span><span class=pl-v>Cb</span><span class=pl-kos>(</span><span class=pl-c1>22</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>}</span><span class=pl-kos>,</span></td>
      </tr>
      <tr>
        <td id="L175" class="blob-num js-line-number" data-line-number="175"></td>
        <td id="LC175" class="blob-code blob-code-inner js-file-line"><span class=pl-en>F</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-v>Date</span><span class=pl-kos>.</span><span class=pl-en>now</span><span class=pl-kos>(</span><span class=pl-kos>)</span>/<span class=pl-c1>1E3</span>|<span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>E</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-c1>1E3</span>*<span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-c1>+</span><span class=pl-c1>8</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-c1>+=</span><span class=pl-v>B</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-c1>+</span><span class=pl-c1>12</span><span class=pl-c1>&gt;&gt;</span><span class=pl-c1>2</span><span class=pl-kos>]</span>/<span class=pl-c1>1E3</span><span class=pl-kos>}</span><span class=pl-k>else</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-v>Date</span><span class=pl-kos>.</span><span class=pl-en>now</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>G</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>U</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>vb</span>:!<span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-c1>node</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>fb</span><span class=pl-kos>.</span><span class=pl-en>lb</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>timestamp</span>:<span class=pl-v>Math</span><span class=pl-kos>.</span><span class=pl-en>max</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-kos>(</span><span class=pl-s1>a</span> <span class=pl-k>instanceof</span> <span class=pl-v>M</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>+=</span><span class=pl-s>&quot; : &quot;</span><span class=pl-kos>;</span>a:<span class=pl-kos>{</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-v>Error</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>stack</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>throw</span> <span class=pl-v>Error</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>g</span><span class=pl-kos>}</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>stack</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s>&quot;(no stack trace available)&quot;</span><span class=pl-kos>;</span><span class=pl-k>break</span> a<span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>stack</span><span class=pl-kos>.</span><span class=pl-en>toString</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>extraStackTrace</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-c1>+=</span><span class=pl-s>&quot;\n&quot;</span><span class=pl-c1>+</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>extraStackTrace</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-en>sb</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>throw</span> <span class=pl-s1>a</span><span class=pl-c1>+</span><span class=pl-s1>d</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-v>Cb</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>hb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>D</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s>&quot;OOM&quot;</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span></td>
      </tr>
      <tr>
        <td id="L176" class="blob-num js-line-number" data-line-number="176"></td>
        <td id="LC176" class="blob-code blob-code-inner js-file-line"><span class=pl-c1>a</span>:<span class=pl-v>Ia</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s1>buffer</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-c1>=</span><span class=pl-s1>dd</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_RegisterExtensionFunctions</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>ia</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>qb</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>___emscripten_environ_constructor</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>ja</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>___errno_location</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>ka</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L177" class="blob-num js-line-number" data-line-number="177"></td>
        <td id="LC177" class="blob-code blob-code-inner js-file-line"><span class=pl-k>var</span> <span class=pl-v>Zc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>__get_daylight</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>la</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-v>Yc</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>__get_timezone</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>ma</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s1>$c</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>__get_tzname</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>na</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s1>ca</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_free</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>oa</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-v>Ya</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_malloc</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>pa</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s1>bd</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_memalign</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>qa</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s1>cd</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_memset</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>ra</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L178" class="blob-num js-line-number" data-line-number="178"></td>
        <td id="LC178" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_bind_blob</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>sa</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_bind_double</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>ta</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_bind_int</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>ua</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_bind_parameter_index</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>va</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_bind_text</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>wa</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_changes</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>xa</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_clear_bindings</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>ya</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L179" class="blob-num js-line-number" data-line-number="179"></td>
        <td id="LC179" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_close_v2</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>za</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_column_blob</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Aa</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_column_bytes</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Ba</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_column_double</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Ca</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_column_name</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Da</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_column_text</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Ea</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_column_type</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Fa</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L180" class="blob-num js-line-number" data-line-number="180"></td>
        <td id="LC180" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_create_function_v2</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Ga</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_data_count</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Ha</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_errmsg</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Ia</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_exec</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Ja</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_finalize</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Ka</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_free</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>La</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_open</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Ma</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L181" class="blob-num js-line-number" data-line-number="181"></td>
        <td id="LC181" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_prepare_v2</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Na</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_reset</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Oa</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_result_blob</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Pa</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_result_double</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Qa</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_result_error</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Ra</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_result_int</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Sa</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_result_int64</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Ta</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L182" class="blob-num js-line-number" data-line-number="182"></td>
        <td id="LC182" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_result_null</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Ua</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_result_text</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Va</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_step</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Wa</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_value_blob</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Xa</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_value_bytes</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Ya</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_value_double</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>Za</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_value_int</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>_a</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L183" class="blob-num js-line-number" data-line-number="183"></td>
        <td id="LC183" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_value_text</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>$a</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>_sqlite3_value_type</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>ab</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>h</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>stackAlloc</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>cb</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s1>na</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>stackRestore</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>db</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s1>ka</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>stackSave</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>eb</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>dynCall_vi</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-kos>.</span><span class=pl-c1>bb</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span>null<span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>asm</span><span class=pl-c1>=</span><span class=pl-s1>dd</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L184" class="blob-num js-line-number" data-line-number="184"></td>
        <td id="LC184" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>cwrap</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-c1>||</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>every</span><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;number&quot;</span><span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span><span class=pl-s>&quot;string&quot;</span>!==<span class=pl-s1>b</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>e</span><span class=pl-c1>&amp;&amp;</span>!<span class=pl-s1>d</span>?<span class=pl-v>Ua</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-v>Va</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-smi>arguments</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>stackSave</span><span class=pl-c1>=</span><span class=pl-s1>ka</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>stackRestore</span><span class=pl-c1>=</span><span class=pl-s1>na</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>stackAlloc</span><span class=pl-c1>=</span><span class=pl-s1>h</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>ed</span><span class=pl-kos>;</span><span class=pl-s1>kb</span><span class=pl-c1>=</span><span class=pl-k>function</span> <span class=pl-en>fd</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>ed</span><span class=pl-c1>||</span><span class=pl-en>gd</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>ed</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-s1>kb</span><span class=pl-c1>=</span><span class=pl-s1>fd</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L185" class="blob-num js-line-number" data-line-number="185"></td>
        <td id="LC185" class="blob-code blob-code-inner js-file-line"><span class=pl-k>function</span> <span class=pl-en>gd</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>function</span> <span class=pl-en>a</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-s1>ed</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>ed</span><span class=pl-c1>=</span>!<span class=pl-c1>0</span><span class=pl-kos>,</span>!<span class=pl-v>Ta</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>hb</span><span class=pl-c1>=</span>!<span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>noFSInit</span><span class=pl-c1>||</span><span class=pl-v>Pc</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-v>Pc</span><span class=pl-c1>=</span>!<span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-v>Oc</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>stdin</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>stdin</span><span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>stdout</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>stdout</span><span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>stderr</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>stderr</span><span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>stdin</span>?<span class=pl-v>Qc</span><span class=pl-kos>(</span><span class=pl-s>&quot;stdin&quot;</span><span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>stdin</span><span class=pl-kos>)</span>:<span class=pl-v>Ic</span><span class=pl-kos>(</span><span class=pl-s>&quot;/dev/tty&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;/dev/stdin&quot;</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>stdout</span>?<span class=pl-v>Qc</span><span class=pl-kos>(</span><span class=pl-s>&quot;stdout&quot;</span><span class=pl-kos>,</span>null<span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>stdout</span><span class=pl-kos>)</span>:<span class=pl-v>Ic</span><span class=pl-kos>(</span><span class=pl-s>&quot;/dev/tty&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;/dev/stdout&quot;</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>stderr</span>?<span class=pl-v>Qc</span><span class=pl-kos>(</span><span class=pl-s>&quot;stderr&quot;</span><span class=pl-kos>,</span>null<span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>stderr</span><span class=pl-kos>)</span>:<span class=pl-v>Ic</span><span class=pl-kos>(</span><span class=pl-s>&quot;/dev/tty1&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;/dev/stderr&quot;</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-en>p</span><span class=pl-kos>(</span><span class=pl-s>&quot;/dev/stdin&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;r&quot;</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-en>p</span><span class=pl-kos>(</span><span class=pl-s>&quot;/dev/stdout&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;w&quot;</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-en>p</span><span class=pl-kos>(</span><span class=pl-s>&quot;/dev/stderr&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;w&quot;</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>cb</span><span class=pl-kos>(</span><span class=pl-s1>eb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Sb</span><span class=pl-c1>=</span>!<span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-en>cb</span><span class=pl-kos>(</span><span class=pl-s1>fb</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>onRuntimeInitialized</span><span class=pl-kos>)</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>onRuntimeInitialized</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>postRun</span><span class=pl-kos>)</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s>&quot;function&quot;</span><span class=pl-c1>==</span><span class=pl-k>typeof</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>postRun</span><span class=pl-c1>&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L186" class="blob-num js-line-number" data-line-number="186"></td>
        <td id="LC186" class="blob-code blob-code-inner js-file-line"><span class=pl-kos>(</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>postRun</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>postRun</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>postRun</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>;</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>postRun</span><span class=pl-kos>.</span><span class=pl-en>shift</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>gb</span><span class=pl-kos>.</span><span class=pl-en>unshift</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-en>cb</span><span class=pl-kos>(</span><span class=pl-s1>gb</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-k>if</span><span class=pl-kos>(</span>!<span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-c1>&lt;</span><span class=pl-v>H</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>preRun</span><span class=pl-kos>)</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s>&quot;function&quot;</span><span class=pl-c1>==</span><span class=pl-k>typeof</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>preRun</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>preRun</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>preRun</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>preRun</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>;</span><span class=pl-kos>)</span><span class=pl-en>ib</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>cb</span><span class=pl-kos>(</span><span class=pl-s1>db</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-c1>0</span><span class=pl-c1>&lt;</span><span class=pl-v>H</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>setStatus</span>?<span class=pl-kos>(</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>setStatus</span><span class=pl-kos>(</span><span class=pl-s>&quot;Running...&quot;</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-en>setTimeout</span><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-en>setTimeout</span><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>setStatus</span><span class=pl-kos>(</span><span class=pl-s>&quot;&quot;</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>a</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>)</span>:<span class=pl-en>a</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>run</span><span class=pl-c1>=</span><span class=pl-s1>gd</span><span class=pl-kos>;</span><span class=pl-k>function</span> <span class=pl-en>z</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>onAbort</span><span class=pl-kos>)</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>onAbort</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Ga</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>A</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-v>Ta</span><span class=pl-c1>=</span>!<span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>throw</span><span class=pl-s>&quot;abort(&quot;</span><span class=pl-c1>+</span><span class=pl-s1>a</span><span class=pl-c1>+</span><span class=pl-s>&quot;). Build with -s ASSERTIONS=1 for more info.&quot;</span><span class=pl-kos>;</span><span class=pl-kos>}</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>abort</span><span class=pl-c1>=</span><span class=pl-s1>z</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L187" class="blob-num js-line-number" data-line-number="187"></td>
        <td id="LC187" class="blob-code blob-code-inner js-file-line"><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>preInit</span><span class=pl-kos>)</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s>&quot;function&quot;</span><span class=pl-c1>==</span><span class=pl-k>typeof</span> <span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>preInit</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>preInit</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>preInit</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-c1>0</span><span class=pl-c1>&lt;</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>preInit</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>;</span><span class=pl-kos>)</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>preInit</span><span class=pl-kos>.</span><span class=pl-en>pop</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>gd</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L188" class="blob-num js-line-number" data-line-number="188"></td>
        <td id="LC188" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L189" class="blob-num js-line-number" data-line-number="189"></td>
        <td id="LC189" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L190" class="blob-num js-line-number" data-line-number="190"></td>
        <td id="LC190" class="blob-code blob-code-inner js-file-line">        <span class=pl-c>// The shell-pre.js and emcc-generated code goes above</span></td>
      </tr>
      <tr>
        <td id="L191" class="blob-num js-line-number" data-line-number="191"></td>
        <td id="LC191" class="blob-code blob-code-inner js-file-line">        <span class=pl-k>return</span> <span class=pl-v>Module</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L192" class="blob-num js-line-number" data-line-number="192"></td>
        <td id="LC192" class="blob-code blob-code-inner js-file-line">    <span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>;</span> <span class=pl-c>// The end of the promise being returned</span></td>
      </tr>
      <tr>
        <td id="L193" class="blob-num js-line-number" data-line-number="193"></td>
        <td id="LC193" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L194" class="blob-num js-line-number" data-line-number="194"></td>
        <td id="LC194" class="blob-code blob-code-inner js-file-line">  <span class=pl-k>return</span> <span class=pl-s1>initSqlJsPromise</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L195" class="blob-num js-line-number" data-line-number="195"></td>
        <td id="LC195" class="blob-code blob-code-inner js-file-line"><span class=pl-kos>}</span> <span class=pl-c>// The end of our initSqlJs function</span></td>
      </tr>
      <tr>
        <td id="L196" class="blob-num js-line-number" data-line-number="196"></td>
        <td id="LC196" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L197" class="blob-num js-line-number" data-line-number="197"></td>
        <td id="LC197" class="blob-code blob-code-inner js-file-line"><span class=pl-c>// This bit below is copied almost exactly from what you get when you use the MODULARIZE=1 flag with emcc</span></td>
      </tr>
      <tr>
        <td id="L198" class="blob-num js-line-number" data-line-number="198"></td>
        <td id="LC198" class="blob-code blob-code-inner js-file-line"><span class=pl-c>// However, we don&#39;t want to use the emcc modularization. See shell-pre.js</span></td>
      </tr>
      <tr>
        <td id="L199" class="blob-num js-line-number" data-line-number="199"></td>
        <td id="LC199" class="blob-code blob-code-inner js-file-line"><span class=pl-k>if</span> <span class=pl-kos>(</span><span class=pl-k>typeof</span> <span class=pl-s1>exports</span> <span class=pl-c1>===</span> <span class=pl-s>&#39;object&#39;</span> <span class=pl-c1>&amp;&amp;</span> <span class=pl-k>typeof</span> <span class=pl-smi>module</span> <span class=pl-c1>===</span> <span class=pl-s>&#39;object&#39;</span><span class=pl-kos>)</span><span class=pl-kos>{</span></td>
      </tr>
      <tr>
        <td id="L200" class="blob-num js-line-number" data-line-number="200"></td>
        <td id="LC200" class="blob-code blob-code-inner js-file-line">    <span class=pl-smi>module</span><span class=pl-kos>.</span><span class=pl-c1>exports</span> <span class=pl-c1>=</span> <span class=pl-en>initSqlJs</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L201" class="blob-num js-line-number" data-line-number="201"></td>
        <td id="LC201" class="blob-code blob-code-inner js-file-line">    <span class=pl-c>// This will allow the module to be used in ES6 or CommonJS</span></td>
      </tr>
      <tr>
        <td id="L202" class="blob-num js-line-number" data-line-number="202"></td>
        <td id="LC202" class="blob-code blob-code-inner js-file-line">    <span class=pl-smi>module</span><span class=pl-kos>.</span><span class=pl-c1>exports</span><span class=pl-kos>.</span><span class=pl-c1>default</span> <span class=pl-c1>=</span> <span class=pl-en>initSqlJs</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L203" class="blob-num js-line-number" data-line-number="203"></td>
        <td id="LC203" class="blob-code blob-code-inner js-file-line"><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L204" class="blob-num js-line-number" data-line-number="204"></td>
        <td id="LC204" class="blob-code blob-code-inner js-file-line"><span class=pl-k>else</span> <span class=pl-k>if</span> <span class=pl-kos>(</span><span class=pl-k>typeof</span> <span class=pl-s1>define</span> <span class=pl-c1>===</span> <span class=pl-s>&#39;function&#39;</span> <span class=pl-c1>&amp;&amp;</span> <span class=pl-s1>define</span><span class=pl-kos>[</span><span class=pl-s>&#39;amd&#39;</span><span class=pl-kos>]</span><span class=pl-kos>)</span> <span class=pl-kos>{</span></td>
      </tr>
      <tr>
        <td id="L205" class="blob-num js-line-number" data-line-number="205"></td>
        <td id="LC205" class="blob-code blob-code-inner js-file-line">    <span class=pl-en>define</span><span class=pl-kos>(</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>,</span> <span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span> <span class=pl-kos>{</span> <span class=pl-k>return</span> <span class=pl-en>initSqlJs</span><span class=pl-kos>;</span> <span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L206" class="blob-num js-line-number" data-line-number="206"></td>
        <td id="LC206" class="blob-code blob-code-inner js-file-line"><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L207" class="blob-num js-line-number" data-line-number="207"></td>
        <td id="LC207" class="blob-code blob-code-inner js-file-line"><span class=pl-k>else</span> <span class=pl-k>if</span> <span class=pl-kos>(</span><span class=pl-k>typeof</span> <span class=pl-s1>exports</span> <span class=pl-c1>===</span> <span class=pl-s>&#39;object&#39;</span><span class=pl-kos>)</span><span class=pl-kos>{</span></td>
      </tr>
      <tr>
        <td id="L208" class="blob-num js-line-number" data-line-number="208"></td>
        <td id="LC208" class="blob-code blob-code-inner js-file-line">    <span class=pl-s1>exports</span><span class=pl-kos>[</span><span class=pl-s>&quot;Module&quot;</span><span class=pl-kos>]</span> <span class=pl-c1>=</span> <span class=pl-en>initSqlJs</span><span class=pl-kos>;</span></td>
      </tr>
      <tr>
        <td id="L209" class="blob-num js-line-number" data-line-number="209"></td>
        <td id="LC209" class="blob-code blob-code-inner js-file-line"><span class=pl-kos>}</span></td>
      </tr>
      <tr>
        <td id="L210" class="blob-num js-line-number" data-line-number="210"></td>
        <td id="LC210" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
</table>

  <details class="details-reset details-overlay BlobToolbar position-absolute js-file-line-actions dropdown d-none" aria-hidden="true">
    <summary class="btn-octicon ml-0 px-2 p-0 bg-white border border-gray-dark rounded-1" aria-label="Inline file action toolbar">
      <svg class="octicon octicon-kebab-horizontal" viewBox="0 0 13 16" version="1.1" width="13" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M1.5 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm5 0a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM13 7.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z"/></svg>
    </summary>
    <details-menu>
      <ul class="BlobToolbar-dropdown dropdown-menu dropdown-menu-se mt-2" style="width:185px">
        <li>
          <clipboard-copy role="menuitem" class="dropdown-item" id="js-copy-lines" style="cursor:pointer;">
            Copy lines
          </clipboard-copy>
        </li>
        <li>
          <clipboard-copy role="menuitem" class="dropdown-item" id="js-copy-permalink" style="cursor:pointer;">
            Copy permalink
          </clipboard-copy>
        </li>
        <li><a class="dropdown-item js-update-url-with-hash" id="js-view-git-blame" role="menuitem" href="/kripken/sql.js/blame/94d9466d6bb1955e8b17d7b7007d505d184cad9f/dist/sql-wasm.js">View git blame</a></li>
          <li><a class="dropdown-item" id="js-new-issue" role="menuitem" href="/kripken/sql.js/issues/new">Reference in new issue</a></li>
      </ul>
    </details-menu>
  </details>

  </div>

    </div>

  

  <details class="details-reset details-overlay details-overlay-dark">
    <summary data-hotkey="l" aria-label="Jump to line"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast linejump" aria-label="Jump to line">
      <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-jump-to-line-form Box-body d-flex" action="" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
        <input class="form-control flex-auto mr-3 linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
        <button type="submit" class="btn" data-close-dialog>Go</button>
</form>    </details-dialog>
  </details>



  </div>
</div>

    </main>
  </div>
  

  </div>

        
<div class="footer container-lg width-full p-responsive" role="contentinfo">
  <div class="position-relative d-flex flex-row-reverse flex-lg-row flex-wrap flex-lg-nowrap flex-justify-center flex-lg-justify-between pt-6 pb-2 mt-6 f6 text-gray border-top border-gray-light ">
    <ul class="list-style-none d-flex flex-wrap col-12 col-lg-5 flex-justify-center flex-lg-justify-between mb-2 mb-lg-0">
      <li class="mr-3 mr-lg-0">&copy; 2020 GitHub, Inc.</li>
        <li class="mr-3 mr-lg-0"><a data-ga-click="Footer, go to terms, text:terms" href="https://github.com/site/terms">Terms</a></li>
        <li class="mr-3 mr-lg-0"><a data-ga-click="Footer, go to privacy, text:privacy" href="https://github.com/site/privacy">Privacy</a></li>
        <li class="mr-3 mr-lg-0"><a data-ga-click="Footer, go to security, text:security" href="https://github.com/security">Security</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://githubstatus.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a data-ga-click="Footer, go to help, text:help" href="https://help.github.com">Help</a></li>
    </ul>

    <a aria-label="Homepage" title="GitHub" class="footer-octicon d-none d-lg-block mx-lg-4" href="https://github.com">
      <svg height="24" class="octicon octicon-mark-github" viewBox="0 0 16 16" version="1.1" width="24" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
   <ul class="list-style-none d-flex flex-wrap col-12 col-lg-5 flex-justify-center flex-lg-justify-between mb-2 mb-lg-0">
        <li class="mr-3 mr-lg-0"><a data-ga-click="Footer, go to contact, text:contact" href="https://github.com/contact">Contact GitHub</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://github.com/pricing" data-ga-click="Footer, go to Pricing, text:Pricing">Pricing</a></li>
      <li class="mr-3 mr-lg-0"><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li class="mr-3 mr-lg-0"><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://github.blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a data-ga-click="Footer, go to about, text:about" href="https://github.com/about">About</a></li>

    </ul>
  </div>
  <div class="d-flex flex-justify-center pb-6">
    <span class="f6 text-gray-light"></span>
  </div>
</div>



  <div id="ajax-error-message" class="ajax-error-message flash flash-error">
    <svg class="octicon octicon-alert" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 000 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 00.01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"/></svg>
    <button type="button" class="flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
    </button>
    You can’t perform that action at this time.
  </div>


    
    <script crossorigin="anonymous" integrity="sha512-yUQVJlf6PdPtYetPr+JKEF64/1izvT1er3NK9Fs/+377lvW6/xA8CNRyJWRbghnICzO9pz593eAXT/D+a+Ec2w==" type="application/javascript" src="https://github.githubassets.com/assets/frameworks-c9441526.js"></script>
    
    <script crossorigin="anonymous" async="async" integrity="sha512-aXQGF9j6Sb/jkmkn4h7izEqfkTsmAvQ4HkwbA8ZVDBW3TXZNpONeoiWgaLY4ZaC2bXXBCvHPta9IbpWLIL4K7w==" type="application/javascript" src="https://github.githubassets.com/assets/github-bootstrap-69740617.js"></script>
    
    
    
  <div class="js-stale-session-flash flash flash-warn flash-banner" hidden
    >
    <svg class="octicon octicon-alert" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 000 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 00.01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"/></svg>
    <span class="js-stale-session-flash-signed-in" hidden>You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="js-stale-session-flash-signed-out" hidden>You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
  <template id="site-details-dialog">
  <details class="details-reset details-overlay details-overlay-dark lh-default text-gray-dark hx_rsm" open>
    <summary role="button" aria-label="Close dialog"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal">
      <button class="Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0" type="button" aria-label="Close dialog" data-close-dialog>
        <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
      </button>
      <div class="octocat-spinner my-6 js-details-dialog-spinner"></div>
    </details-dialog>
  </details>
</template>

  <div class="Popover js-hovercard-content position-absolute" style="display: none; outline: none;" tabindex="0">
  <div class="Popover-message Popover-message--bottom-left Popover-message--large Box box-shadow-large" style="width:360px;">
  </div>
</div>

  
  <div class="js-notification-shelf-not-found-error" hidden></div>

  <div aria-live="polite" class="js-global-screen-reader-notice sr-only"></div>

  </body>
</html>

